//              Copyright 2006-2008 Mentor Graphics Corporation
//                           All Rights Reserved.                           
//                                                                          
//              THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY             
//            INFORMATION WHICH IS THE PROPERTY OF MENTOR GRAPHICS          
//           CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE         
//                                  TERMS.                                  
//                                                                          
//
/***********************************************************************
 * PURPOSE       This file is part of the 0-In CheckerWare.
 *               It describes the Gigabit Ethernet XGMII Monitor.
 *
 * DESCRIPTION   This monitor checks the 10 Gigabit Etherent frames for
 *               alignment related violations and malformed packets by 
 *               observing the XGMII (10 Gigabit Media Independent I/F).
 *               This module internally instantiates two link monitors,
 *               one each for the Tx link and the Rx link respectively. 
 *               
 * REFERENCE     802.3 IEEE Standard for Information Technology, CSMA/CD
 *               access method and physical layer specifications, 2002
 *               802.3ae Amendment: Media Access Control (MAC) Parameters, 
 *               Physical Layers, and Management Parameters for 10 Gb/s 
 *               Operation, 2002.
 *
 * INPUTS        areset - asynchronous reset (active high)
 *               reset  - synchronous reset (active high)
 *               tx_clk - transmit interface clock
 *               txd    - transmit data (32-bit DDR or 64-bit SDR)
 *               txc    - transmit control (4-bit DDR or 8-bit SDR)
 *               rx_clk - receive interface clock
 *               rxd    - receive data (32-bit DDR or 64-bit SDR)
 *               rxc    - receive control (4-bit DDR or 8-bit SDR)
 *
 *
 * MONITOR INSTANTIATION
 * 
 *                  1. Without XGXS implemented
 *                  ---------------------------
 *                          
 *                                  + +
 *                                  | |
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |    LLC - Logical Link Control    |
 *                  +----------------------------------+
 *                  |      MAC Control (optional)      |  L
 *                  +----------------------------------+  I
 *                  |    MAC - Media Access Control    |  N
 *                  +----------------------------------+  K
 *                  |   RS - Reconciliation Sublayer   |
 *                  |                                  |  L
 *                  |        +---------------+         |  A
 *                  |        | XGMII MONITOR |         |  Y
 *                  |        +------+-+------+         |  E
 *                  |               | |                |  R
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | | XGMII
 *                                  | |
 *                  +---------------+-+----------------+  P
 *                  |               | |                |  H
 *                  |        +------+-+------+         |  Y
 *                  |        | XGMII MONITOR |         | 
 *                  |        +---------------+         |  L
 *                  |                                  |  A
 *                  |  PCS - Physical Coding Sublayer  |  Y
 *                  +----------------------------------+  E
 *                  | PMA - Physical Medium Attachment |  R
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | |
 *                                  + +
 *
 *
 *                  2. With XGXS implemented
 *                  ------------------------
 *
 *                                  + +
 *                                  | |
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |    LLC - Logical Link Control    |
 *                  +----------------------------------+
 *                  |      MAC Control (optional)      |  L
 *                  +----------------------------------+  I
 *                  |    MAC - Media Access Control    |  N
 *                  +----------------------------------+  K
 *                  |   RS - Reconciliation Sublayer   |
 *                  |                                  |  L
 *                  |        +---------------+         |  A
 *                  |        | XGMII MONITOR |         |  Y
 *                  |        +------+-+------+         |  E
 *                  |               | |                |  R
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | | XGMII
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |               | |                | 
 *                  |        +------+-+------+         | 
 *                  |        | XGMII MONITOR |         | 
 *                  |        +---------------+         | 
 *                  |                                  | 
 *                  |  XGXS - Optional XGMII Extender  |
 *                  +----------------------------------+
 *                                  | |
 *                                  | |
 *                                  | |
 *                                  | | XAUI
 *                                  | |
 *                                  | |
 *                                  | |
 *                  +----------------------------------+
 *                  |  XGXS - Optional XGMII Extender  |
 *                  |                                  | 
 *                  |        +---------------+         | 
 *                  |        | XGMII MONITOR |         | 
 *                  |        +------+-+------+         | 
 *                  |               | |                | 
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | | XGMII
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |               | |                |  P
 *                  |        +------+-+------+         |  H
 *                  |        | XGMII MONITOR |         |  Y
 *                  |        +---------------+         | 
 *                  |                                  |  L
 *                  |  PCS - Physical Coding Sublayer  |  A
 *                  +----------------------------------+  Y
 *                  | PMA - Physical Medium Attachment |  E
 *                  +---------------+-+----------------+  R
 *                                  | |
 *                                  | |
 *                                  + +
 *
 *
 * LAST MODIFIED 07 December 2004
 *
 *********************************************************************/

`ifdef ZiCwDebug
`define ZiCwDebugDelay1 #1
`else
`define ZiCwDebugDelay1
`endif //ZiCwDebug

`ifdef QVL_SVA_INTERFACE
`define qvlmodule interface
`define qvlendmodule endinterface
`else
`define qvlmodule module
`define qvlendmodule endmodule
`endif

`ifdef QVL_ASSERT_ON
 `define OVL_ASSERT_ON
 `define OVL_SVA
`endif

`ifdef QVL_COVER_ON
 `ifdef QVL_SV_COVERGROUP_OFF
  //DO nothing
 `else
  `define QVL_SV_COVERGROUP
  `endif
  `ifdef QVL_MW_FINAL_COVER_OFF
   // Do nothing
  `else
  `define QVL_MW_FINAL_COVER
  `endif 
`endif

`qvlmodule qvl_gigabit_ethernet_xgmii_monitor (areset,
                                             reset,
                                             tx_clk,
                                             txd,
                                             txc,
                                             rx_clk,
                                             rxd,
                                             rxc
                                            );

  // Parameter Constraints_Mode = 0, will configure some checks in this
  // monitor as constraints during formal analysis.

  parameter Constraints_Mode = 0;
  wire [31:0] pw_Constraints_Mode = Constraints_Mode;

  // Parameter MAC_SIDE = 1, will indicate that the monitor is instantiated
  // on the XGMII interface either at the RS or on the second XGXS (if the 
  // XAUI is implemented) after converting from XAUI to XGMII. A value of 
  // 0 on this parameter will indicate that the monitor is instantiated on 
  // an XGMII interface on that side of the link that is closer to the PHY.
  // This parameter is used in constraining the correct side in case of the
  // formal analysis.

  parameter MAC_SIDE = 1;
  wire [31:0] pw_MAC_SIDE = MAC_SIDE;
  
  // Set this parameter to the desired length of Jumbo frames. The default
  // length of Jumbo frames is taken to be 9K bytes (9126 bytes).

  parameter JUMBO_FRAME_DATA_LENGTH = 9126;
  wire [31:0] pw_JUMBO_FRAME_DATA_LENGTH = JUMBO_FRAME_DATA_LENGTH;

  // Set this parameter to 0 to disable checking for usage of reserved 
  // values in fields. By default, these checks will be performed.

  parameter RESERVED_VALUE_CHECK_ENABLE = 1;
  wire [31:0] pw_RESERVED_VALUE_CHECK_ENABLE = RESERVED_VALUE_CHECK_ENABLE;

  // This parameter indicates whether the XGMII interface is a standard 
  // dual-edge 32-bit interface (4 lanes) or the alternative single-edge
  // 64-bit (8 lanes corresponding to 2 columns of data in one period of
  // the standard dual-edge XGMII. By default, a dual-edge XGMII will be
  // assumed. Set this to 0 to indicate a single-edge XGMII. 

  parameter DDR = 1;
  wire [31:0] pw_DDR = DDR;

  // These are internal parameters used to derive the data and control
  // width depending on whether the interface is dual/single rate.

  parameter ZI_DATA_WIDTH = (DDR === 1) ? 32 : 64;
  wire [31:0] pw_DATA_WIDTH = ZI_DATA_WIDTH;

  parameter ZI_CTRL_WIDTH = (DDR === 1) ? 4 : 8;
  wire [31:0] pw_CTRL_WIDTH = ZI_CTRL_WIDTH;

  input areset;
  input reset;
  input tx_clk;
  input [ZI_DATA_WIDTH-1:0] txd;
  input [ZI_CTRL_WIDTH-1:0] txc;
  input rx_clk;
  input [ZI_DATA_WIDTH-1:0] rxd;
  input [ZI_CTRL_WIDTH-1:0] rxc;

`protected

    MTI!#G%Nwn|[R7+~R-ky_$1-[WXOffIm1A=@leV1k$]QGi7Bp\Y+^\#X9]u5XcvJG^Y^*IN,@piQ
    zmaOE1xx+G1Yn@?]zDo~'A,J,]^$,5l]E5rO1Tx\>^}IXrYIfGV![i{7e}#=@x"7a2^#>e^EWYAG
    H+[3Av2F7''#U_K^,]?rKo=TZH,$jxkA$^kAm_xi?rX'tEnJr7^7-AenXlP1>R$Jjk@'RCi!>V<_
    R{7r[2~iV,@w=HA9^+G!&I_x{P;C$v$o#=Y/1BCs^pVJ};n<DZ*zJDx2-wjkJTZXu5vu%a'3JS}@
    ;X3nQi^9N(R*XYs}]aU$jkt<IAsCkGW/1><,{-'3s]]J7<Y>JaDW#n^Gx$eBrve^j1T'QpA?[UDv
    @YRkX<z\wXI!QkW<+<1W@$R7FIW[o?*35[Km[R-Rpk\#!};GjHj[E5jI*"C7vY=T2*=*{\vKm<RU
    Q<lXR3Q3QOToCG>$X;517*Q+>pTT[eeXW[2'3{7>>QIQx2eKv!iH=QlNmIXCH\mxcFT}YkB@~17"
    BjQ\;52aFI4Gsu#vX-{x3W*EV_CPxj<ze=1K_Hmr>\o33Q<s\[pn~}*ey.cykeVR~aZvOO@[+vJ}
    %BwnzRC{Zqzw1Yn'QxO7]_\AZ#?w,x[\uZp=?VWw}vlmJ1m[UIk{Jj1w!O_AX!i>l>Y*AZ;Dxu-E
    X5l-oDJo+[_<yE@2]t@vm2D_cD-G=V_K-'W[5Y_${Ce_>J<ViD]},NjrvY5Ri#O]?2JzQueHw_MH
    xk-(wp+wtfv^O$GH\eB-[H71i]rX\n^-,*
`endprotected

  qvl_gigabit_ethernet_xgmii_link_monitor 
    #(Constraints_Mode,            // Used to mark checks as constraints
      MAC_SIDE,                    // Configures location of monitor instance
      JUMBO_FRAME_DATA_LENGTH,     // Specifies Jumbo frame length
      RESERVED_VALUE_CHECK_ENABLE, // Enables/Disables reserved value checking
      1,                           // Indicates the direction of data - TX I/F
      DDR)                         // Configures XGMII as 32bit DDR/64bit SDR

      XGMII_TX_MONITOR
          (.areset(areset),
           .reset(reset),
           .clk(tx_clk),
           .data_in(txd),
           .ctrl_in(txc)
          );

  qvl_gigabit_ethernet_xgmii_link_monitor 
    #(Constraints_Mode,            // Used to mark checks as constraints
      MAC_SIDE,                    // Configures location of monitor instance
      JUMBO_FRAME_DATA_LENGTH,     // Specifies Jumbo frame length
      RESERVED_VALUE_CHECK_ENABLE, // Enables/Disables reserved value checking
      0,                           // Indicates the direction of data - RX I/F
      DDR)                         // Configures XGMII as 32bit DDR/64bit SDR
     
      XGMII_RX_MONITOR
          (.areset(areset),
           .reset(reset),
           .clk(rx_clk),
           .data_in(rxd),
           .ctrl_in(rxc)
          );

`protected

    MTI!#_~RYmz}lVa7IBo-5R[Aw,Ks@WX-])ITdhAGr["[XH{{YBi='-l^~[ira}V;,>$D5^U=nji\
    CiRp?TOl2oTX=^[or+_~=JQXXp2OCX?Iuum1-Y4ww,Z'#UAgoTqs'*o]>V5|ro1k#'KTTe;=3zUa
    T1!$w$Qr@aml5W@2/(jg3<|a+!pRjnTNqm\TlQC?rY,e#maC[^zHwuC*V3Bpe\5e[rB7*Xz~n1^D
    Od!sj3.QAW['a{sTQJaewB[>*,zn$]E'luEi5pRGYCD}3+@Y>K'&a'aCC[=}i$Gi:~_A^x\J~r?[
    vBVA@@VEp8$>Ei7!VW3A\3j<
`endprotected

`ifdef ZI_INLINED_PSL
`include "0in_ac_inline_for_mod_zi_cw_gigabit_ethernet_xgmii_monitor.inc"
`endif
`ifdef ZI_INLINED_CHX
`include "zi_cw_gigabit_ethernet_xgmii_monitor.zi_chx.inc"
`else
`ifdef ZI_INLINED_CHX_zi_cw_gigabit_ethernet_xgmii_monitor
`include "zi_cw_gigabit_ethernet_xgmii_monitor.zi_chx.inc"
`endif
`endif

`qvlendmodule // qvl_gigabit_ethernet_xgmii_monitor

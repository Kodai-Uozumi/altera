//              Copyright 2006-2008 Mentor Graphics Corporation
//                           All Rights Reserved.                           
//                                                                          
//              THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY             
//            INFORMATION WHICH IS THE PROPERTY OF MENTOR GRAPHICS          
//           CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE         
//                                  TERMS.                                  
//                                                                          
//                   Questa Verification Library (QVL)
//
/***********************************************************************
 * PURPOSE       This file is part of the 0-In CheckerWare.
 *               It describes the Gigabit Ethernet XAUI monitor.
 *
 * DESCRIPTION   This monitor checks the 10 Gigabit Etherent frames on
 *               the XAUI serial/10-bit symbol interface for violations
 *               with respect to encapsulation, alignment etc and also
 *               instantiates the MAC monitor to check for field errors.
 *
 * REFERENCE     802.3 IEEE Standard for Information Technology, CSMA/CD
 *               access method and physical layer specifications, 2002 
 *               802.3ae Amendment: Media Access Control (MAC) Parameters, 
 *               Physical Layers, and Management Parameters for 10 Gb/s
 *               Operation, 2002. 
 *
 * INPUTS        areset     - asynchronous reset (active high)
 *               reset      - synchronous reset (active high)
 *               dl_clk     - destination interface clock
 *               sl_clk     - source interface clock
 *               sl0_p      - source lane 0 (serial/symbol)
 *               sl1_p      - source lane 1 (serial/symbol)
 *               sl2_p      - source lane 2 (serial/symbol)
 *               sl3_p      - source lane 3 (serial/symbol)
 *               dl0_p      - destination lane 0 (serial/symbol)
 *               dl1_p      - destination lane 1 (serial/symbol)
 *               dl2_p      - destination lane 2 (serial/symbol)
 *               dl3_p      - destination lane 3 (serial/symbol)
 * 
 * MONITOR INSTANTIATION
 *
 *                  1. Applicable only when XGXS is implemented
 *                  ------------------------------------------
 *
 *
 *                                  + +
 *                                  | |
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |    LLC - Logical Link Control    |
 *                  +----------------------------------+
 *                  |      MAC Control (optional)      |  L
 *                  +----------------------------------+  I
 *                  |    MAC - Media Access Control    |  N
 *                  +----------------------------------+  K
 *                  |   RS - Reconciliation Sublayer   |
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | | XGMII
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |  XGXS - Optional XGMII Extender  |
 *                  |                                  | 
 *                  |        +--------------+          | 
 *                  |        | XAUI MONITOR |          | 
 *                  |        +------+-+-----+          | 
 *                  |               | |                | 
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | |
 *                                  | |
 *                                  | | XAUI
 *                                  | |
 *                                  | |
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |               | |                | 
 *                  |        +------+-+-----+          | 
 *                  |        | XAUI MONITOR |          | 
 *                  |        +--------------+          | 
 *                  |                                  | 
 *                  |  XGXS - Optional XGMII Extender  |
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | | XGMII
 *                                  | |
 *                  +---------------+-+----------------+
 *                  |  PCS - Physical Coding Sublayer  |  P
 *                  +----------------------------------+  H
 *                  | PMA - Physical Medium Attachment |  Y
 *                  +---------------+-+----------------+
 *                                  | |
 *                                  | |
 *                                  + +
 *
 *
 * LAST MODIFIED 07 December 2004
 *
 *********************************************************************/

`ifdef ZiCwDebug
`define ZiCwDebugDelay1 #1
`else
`define ZiCwDebugDelay1
`endif //ZiCwDebug

`ifdef QVL_SVA_INTERFACE
`define qvlmodule interface
`define qvlendmodule endinterface
`else
`define qvlmodule module
`define qvlendmodule endmodule
`endif

`ifdef QVL_ASSERT_ON
  `define OVL_ASSERT_ON
  `define OVL_SVA
`endif

`ifdef QVL_COVER_ON
 `ifdef QVL_SV_COVERGROUP_OFF
  //DO nothing
 `else
  `define QVL_SV_COVERGROUP
  `endif
  `ifdef QVL_MW_FINAL_COVER_OFF
   // Do nothing
  `else
  `define QVL_MW_FINAL_COVER
  `endif 
`endif

`qvlmodule qvl_gigabit_ethernet_xaui_monitor (areset,
                                            reset,
                                            dl_clk,
                                            sl_clk,
                                            sl0_p,
                                            sl1_p,
                                            sl2_p,
                                            sl3_p,
                                            dl0_p,
                                            dl1_p,
                                            dl2_p,
                                            dl3_p
                                           );

  // Parameter Constraints_Mode = 0, will configure some checks in this
  // monitor as constraints during formal analysis. 
 
  parameter Constraints_Mode = 0; 
  wire [31:0] pw_Constraints_Mode = Constraints_Mode;

  // Parameter MAC_SIDE = 1, will indicate that the monitor is instantiated
  // on the XGMII interface either at the RS or on the second XGXS (if the
  // XAUI is implemented) after converting from XAUI to XGMII. A value of
  // 0 on this parameter will indicate that the monitor is instantiated on
  // an XGMII interface on that side of the link that is closer to the PHY.
  // This parameter is used in constraining the correct side in case of the
  // formal analysis.

  parameter MAC_SIDE = 1;
  wire [31:0] pw_MAC_SIDE = MAC_SIDE;

  // The Jumbo frames do not carry length information with them and therefore 
  // the length is fixed for a given simulation.

  parameter JUMBO_FRAME_DATA_LENGTH = 9126;
  wire [31:0] pw_JUMBO_FRAME_DATA_LENGTH = JUMBO_FRAME_DATA_LENGTH;
 
  // Set this parameter to 0 to disable checking for usage of reserved
  // values in fields. By default, these checks will be performed.
 
  parameter RESERVED_VALUE_CHECK_ENABLE = 1;
  wire [31:0] pw_RESERVED_VALUE_CHECK_ENABLE = RESERVED_VALUE_CHECK_ENABLE;

  // Parameter SYMBOL_MODE = 1 indicates a parallel (symbol) 10-bit interface.
  // The default of 0 implies a serial interface. 

  parameter SYMBOL_MODE = 0;
  wire [31:0] pw_SYMBOL_MODE = SYMBOL_MODE;

  // Parameter BYPASS_DESKEW = 1 indicates bypass of deskew logic. The default
  // of 1 attempts to deskew the lanes before proceeding.

  parameter BYPASS_DESKEW = 0;
  wire [31:0] pw_BYPASS_DESKEW = BYPASS_DESKEW;

  parameter ZI_DATA_WIDTH = (SYMBOL_MODE == 0) ? 1 : 10;
  wire [31:0] pw_DATA_WIDTH = ZI_DATA_WIDTH;

  input areset;
  input reset;
  input dl_clk;
  input sl_clk;
  input [ZI_DATA_WIDTH-1:0] sl0_p;
  input [ZI_DATA_WIDTH-1:0] sl1_p;
  input [ZI_DATA_WIDTH-1:0] sl2_p;
  input [ZI_DATA_WIDTH-1:0] sl3_p;
  input [ZI_DATA_WIDTH-1:0] dl0_p;
  input [ZI_DATA_WIDTH-1:0] dl1_p;
  input [ZI_DATA_WIDTH-1:0] dl2_p;
  input [ZI_DATA_WIDTH-1:0] dl3_p;


  qvl_gigabit_ethernet_xaui_link_monitor 
    #(Constraints_Mode, 
      MAC_SIDE,
      JUMBO_FRAME_DATA_LENGTH,
      RESERVED_VALUE_CHECK_ENABLE,
      1, // TX Interface
      SYMBOL_MODE, 
      BYPASS_DESKEW)

    TX_INTERFACE (.areset (areset),
                  .reset (reset),
                  .clk (sl_clk),
                  .lane0_p (sl0_p),
                  .lane1_p (sl1_p),
                  .lane2_p (sl2_p),
                  .lane3_p (sl3_p)
                 );


  qvl_gigabit_ethernet_xaui_link_monitor 
    #(Constraints_Mode, 
      MAC_SIDE,
      JUMBO_FRAME_DATA_LENGTH,
      RESERVED_VALUE_CHECK_ENABLE,
      0, // RX Interface
      SYMBOL_MODE, 
      BYPASS_DESKEW)

    RX_INTERFACE (.areset (areset),
                  .reset (reset),
                  .clk (dl_clk),
                  .lane0_p (dl0_p),
                  .lane1_p (dl1_p),
                  .lane2_p (dl2_p),
                  .lane3_p (dl3_p)
                 );

`protected

    MTI!#J++KY,-]>Uj*u[-#4V5}!RJlrTvWKrx)j#s{|*mw#73!,}7pEB>\DhQ[Qj0UHz^XDKD}fC]
    nOIGEReeVv5VE~TTWAR>!\l;r>s{\AG,J{^1oz^AjCsD*pwom]]mCoFi{7e}#=@x"7a2^#>e^EWY
    AGH+[3Av2F7''#U_K^,]?rKo=TZH,$jxkA$^kAm_xi?rX'tEnJr7^7-AenXlP1>R$Jjk@'RCi!>V
    <_R{7r[2~iV,@w=HA9^+G!&I_x{P;C$v$o#=Y/1BCs^pVJ};n<DZ*zJDx2-wjkJTZXu5vu%a'3JS
    }@;X3nQi^9N(R*XYs}]aU$jkt<IAsCkGW/1><,{-'3s]]J7<Y>JaDW#n^Gx$eBrve^j1T'QpA?[U
    Dv@YRkX<z\wXI!QkW<+<1W@$R7FIW[o?*35[Km[R-Rpk\#!};GjHj[E5jI*"C7vY=T2*=*{\vKm<
    RUQ<lXR3Q3QOToCG>$X;517*Q+>pTT[eeXW[2'3{7>>QIQx2eKv!iH=QlNmIXCH\mxcFT}YkB@~1
    ""BjQB~53l;Ri~BO7Kj3uT*E*x3C^lh9\HsRx${Yn{T$KpjW!wD5]BDwE\n!Ijn?3eB~$TXO@>a'
    }'Zx/7_2w'>Uzl~*j|bF9=nDrTDsGi}5V[mR;$=AU2a<T,Gn2Wv*iBnpXn]Nto,R!3<AGeO51$}e
    {XY^i%}NI}i;T{Y-Q*H?uID_Yn'\*A,XQH<IlC[$xjX=2jwnJvJoNU$zv$k_+7@Q~~Yp{#rKwwD=
    BEBJI;HQ_=xzJ{_\u5KH'D=e-pm7i!lR{76[OQ_Bils[v\a=7i^mRC#&GV#QNNRr;=sUm!RuBO[B
    YE&@n{UpYUp.Y$+'rrO2Cj~ZGUWD5OiZ5=k]._<RuTv?r2<neXA!pe,TQlK'iBkDK+\{[z8<-Y?J
    <xew]j~[*Rxx$Vzjux?on&[w1e9^'vWzI_lZ6Z*rj$KI$!']pRiQQkIOnnnm~Ha^1A'=[6@r;$v>
    +sd?{\*}K<BRI+Gv\}
`endprotected
  
  //--------------------------------------------------------------------------
  // OVL SVA Assertions are included here
  //--------------------------------------------------------------------------

`ifdef ZI_INLINED_PSL
`include "0in_ac_inline_for_mod_zi_cw_gigabit_ethernet_xaui_monitor.inc"
`endif
`ifdef ZI_INLINED_CHX
`include "zi_cw_gigabit_ethernet_xaui_monitor.zi_chx.inc"
`else
`ifdef ZI_INLINED_CHX_zi_cw_gigabit_ethernet_xaui_monitor
`include "zi_cw_gigabit_ethernet_xaui_monitor.zi_chx.inc"
`endif
`endif

`qvlendmodule // qvl_gigabit_ethernet_xaui_monitor

//              Copyright 2006-2007 Mentor Graphics Corporation
//                           All Rights Reserved.
//
//              THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY
//            INFORMATION WHICH IS THE PROPERTY OF MENTOR GRAPHICS
//           CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE
//                                  TERMS.
//
//                   Questa Verification Library (QVL)
//

/*************************************************************************
*
* PURPOSE     This file is part of Questa Verification Library (QVL).
*
* DESCRIPTION This monitor checks the PCI Express interface for compliance
*             with PCI Express Base specification. 
*
* REFERENCES  PCI Express Base Specification, Revision 1.0, July 22, 2002.
*             PCI Express Base Specification, Revision 1.0a, April 15,2003.
*             PCI Express Base Specification, Revision 1.1, March 28, 2005.
*
* INPUTS
*             areset                      - Asynchronous reset, active high
*             reset                       - Synchronous reset, active high
*
*             tx_clk                      - Transmit clock.
*             tx_symbols_plus             - Transmit symbols, D+ input.
*             tx_symbols_minus            - Transmit symbols, D- input.
*                                           This input is applicable only
*                                           in serial mode of operation.
*
*             rx_clk                      - Receive clock.
*             rx_symbols_plus             - Receive symbols, D+ input.
*             rx_symbols_minus            - Receive symbols, D- input. 
*                                           This input is applicable only 
*                                           in serial mode of operation.
*       
*             skip_link_training          - When set, the monitor
*                                           does not track the link 
*                                           training sequence. The
*                                           LTSSM state machine is inactive 
*                                           and default link width is maximum
*                                           link width specified by the user.
*                                           Monitor tracks all the training 
*                                           ordered sets as well as  
*                                           other ordered sets. 
*
*             extended_sync_enable       - Extended Synch bit of the Link
*                                           control register(offset 10h).
*
*             L0s_entry_supported        - Signal which indicates whether
*                                          transition to L0s ASPM state is
*                                          supported. 
*         
*             device_control_register    - Device control register.
*                                          (Off set 08h)
*
*             device_capabilities_register - Device capabilities register.
*                                          (Off set 04h)
*
*             phy_layer_checks_disable   - Disables all the physical layer
*                                          checks.
*
*             link_layer_checks_disable  - Disables all the link layer checks.
*
*             transaction_layer_checks_disable 
*
*                                        - Disables all the transaction layer
*                                          checks.
*
*             enable_vc_id                - A logic high in a bit enables
*                                           corresponding VC ID
*
*             tc_mapped_to_vc_id_0        - TC's mapped to VC ID 0
*             tc_mapped_to_vc_id_1        - TC's mapped to VC ID 1
*             tc_mapped_to_vc_id_2        - TC's mapped to VC ID 2
*             tc_mapped_to_vc_id_3        - TC's mapped to VC ID 3
*             tc_mapped_to_vc_id_4        - TC's mapped to VC ID 4
*             tc_mapped_to_vc_id_5        - TC's mapped to VC ID 5
*             tc_mapped_to_vc_id_6        - TC's mapped to VC ID 6
*             tc_mapped_to_vc_id_7        - TC's mapped to VC ID 7
*
* MONITOR INSTANTIATION
*
*       1. In a Root complex 
*       --------------------
*
*       +---------------+                 +-----------------+
*       | ROOT COMPLEX  |  Transmit       |                 |
*       |       +---+   |  Interface      |                 |
*       |       | M |<--|---------------->|   END POINT,    |
*       |       | O |   |                 |   SWITCH,       |
*       |       | N |   |                 |      OR         |
*       |       | I |   |                 |   BRIDGE        |
*       |       | T |   |  Receive        |                 |
*       |       | O |   |  Interface      |                 |
*       |       | R |<--|<----------------|                 |
*       |       +---+   |                 |                 |
*       |               |                 |                 |
*       +---------------+                 +-----------------+
*
*       2. In an End Point :
*       --------------------
*
*       Note : The end point can be a PCI Express end point or legacy end
*              point or a PCI Express/PCI X bridge.
*
*       +---------------+                 +-----------------+
*       |  END POINT    |  Transmit       |                 |
*       |       +---+   |  Interface      |                 |
*       |       | M |<--|---------------->|   ROOT COMPLEX  |
*       |       | O |   |                 |      OR         |
*       |       | N |   |                 |    SWITCH       |
*       |       | I |   |                 |                 |
*       |       | T |   |  Receive        |                 |
*       |       | O |   |  Interface      |                 |
*       |       | R |<--|<----------------|                 |
*       |       +---+   |                 |                 |
*       |               |                 |                 |
*       +---------------+                 +-----------------+
*
*       3. In a Switch :  
*       ----------------
*
*       Monitor instantiated in the downstream port of the switch.
*
*       +---------------+                 +-----------------+ 
*       | SWICTH        |  Transmit       |                 |
*       |       +---+   |  Interface      |                 | 
*       |       | M |<--|---------------->|   END POINT     |
*       |       | O |   |                 |     OR          | 
*       |       | N |   |                 |   BRIDGE        |
*       |       | I |   |                 |                 | 
*       |       | T |   |  Receive        |                 |
*       |       | O |   |  Interface      |                 | 
*       |       | R |<--|<----------------|                 |
*       |       +---+   |                 |                 | 
*       |               |                 |                 |
*       +---------------+                 +-----------------+
*
*       Monitor instantiated in the upstream port of the switch.
*
*       +---------------+                 +-----------------+  
*       | SWICTH        |  Transmit       |                 | 
*       |       +---+   |  Interface      |                 |  
*       |       | M |<--|---------------->|   ROOT COMPLEX  |
*       |       | O |   |                 |                 | 
*       |       | N |   |                 |                 |
*       |       | I |   |                 |                 |  
*       |       | T |   |  Receive        |                 | 
*       |       | O |   |  Interface      |                 |  
*       |       | R |<--|<----------------|                 | 
*       |       +---+   |                 |                 |  
*       |               |                 |                 | 
*       +---------------+                 +-----------------+  
*
* LAST MODIFIED DATE : Sep 30, 2005 
*
**************************************************************************/

`ifdef ZiCwDebug
`define ZiCwDebugDelay1 #1
`define ZiCwQuietIfNoCwDebug
`else
`define ZiCwDebugDelay1
`define ZiCwQuietIfNoCwDebug -quiet
`endif //ZiCwDebug

`ifdef QVL_COVER_ON
  `ifdef QVL_SV_COVERGROUP_OFF
    // Do nothing
  `else
    `define QVL_SV_COVERGROUP
  `endif
  `ifdef QVL_MW_FINAL_COVER_OFF
    // Do nothing
  `else
    `define QVL_MW_FINAL_COVER
  `endif
`endif

`qvlmodule qvl_pci_express_logic (
				 reset,
				 areset,
				 tx_clk,
				 tx_symbols_plus,
                                 tx_symbols_minus,
				 rx_clk,
				 rx_symbols_plus,
                                 rx_symbols_minus,
                                 skip_link_training,
				 extended_sync_enable,
				 device_control_register,
				 device_capabilities_register,
				 L0s_entry_supported,
  // PCI_EXPRESS_GEN2 code start					
  // This port enable the ACS translation blocking in config reg.  		 
				 acs_translation_blocking_enable,
				 disable_cpl_timeout, 
  // PCI_EXPRESS_GEN2 code end				  
				 phy_layer_checks_disable,
				 link_layer_checks_disable,
				 transaction_layer_checks_disable,
				 enable_vc_id,
				 tc_mapped_to_vc_id_0,
				 tc_mapped_to_vc_id_1,
				 tc_mapped_to_vc_id_2,
				 tc_mapped_to_vc_id_3,
				 tc_mapped_to_vc_id_4,
				 tc_mapped_to_vc_id_5,
				 tc_mapped_to_vc_id_6,
				 tc_mapped_to_vc_id_7
				 );

  // Parameter Constraints_Mode = 1, will configure some checks in this
  // monitor as constraints during 0-In Search.
 
  parameter Constraints_Mode = 0;
  wire [31:0] pw_Constraints_Mode = Constraints_Mode;

  // Parameter PCI_EXPRESS_DEVICE_TYPE specifies the device type where the 
  // monitor is instantiated. This parameter has to be set based on the 
  // PCI Express device in which monitor is instantiated.
  // 
  // Parameter value         Device
  //     0                   PCI Express end point.
  //     1                   Legacy PCI Express end point.
  //     4                   PCI Express Root Complex.
  //     5                   PCI Express switch, upstream port.
  //     6                   PCI Express switch, downstream port.
  //     7                   PCI Express to PCI/PCI-X bridge.
  //
  // By default, monitor is instantiated on the PCI Express end point
  // This information along with the Constraints_Mode will decide which checks
  // are to be turned into constraints during 0-In Search.
 
  parameter PCI_EXPRESS_DEVICE_TYPE = 0;
  wire [31:0] pw_PCI_EXPRESS_DEVICE_TYPE = PCI_EXPRESS_DEVICE_TYPE;

  // Parameter INTERFACE_TYPE specifies whether the input to the PCI Express
  // device is serial 10B symbols or parallel 10B symbols. 
  // Set this to 1 if the input to the PCI Express device is parallel 10B
  // symbols. By default, the input to the PCI Express device is serial 10B
  // symbols.

  parameter INTERFACE_TYPE = 0; 
  wire [31:0] pw_INTERFACE_TYPE = INTERFACE_TYPE;

  // Parameter MAX_LINK_WIDTH specifies the maximum width supported by the
  // PCI Express link. The link widths supported are 1,2,4,8,12,16 and 32.

  parameter MAX_LINK_WIDTH = 1;                                            
  wire [31:0] pw_MAX_LINK_WIDTH = MAX_LINK_WIDTH;

  // Parameter DOUBLE_DATA_RATE specifies the active edge of the tx_clk/rx_clk.
  // Set this parameter to 1 if tx_clk/rx_clk is active on both the edges.
  // Set this parameter to 0 if tx_clk/rx_clk is active on only rising edge.
  // By default, tx_clk/rx_clk is active on only one edge.

  parameter DOUBLE_DATA_RATE = 0;
  wire [31:0] pw_DOUBLE_DATA_RATE = DOUBLE_DATA_RATE;

  // Parameter MAX_REQUESTS_ADDR_WIDTH specifies the number of address bits
  // required to address the outstanding requests. This parameter in turn
  // configures the maximum number of outstanding requests. By default, the
  // maximum number of outstanding requests can be 32.
 
  parameter MAX_REQUESTS_ADDR_WIDTH = 5;
  wire [31:0] pw_MAX_REQUESTS_ADDR_WIDTH = MAX_REQUESTS_ADDR_WIDTH;

  // Parameter ELECTRICAL_IDLE_VAL specifies the 10 bit value which
  // indicates the electrical idle condition of the bus. This 10 bit
  // value specifies that the PCI Express bus is in electrical idle.
  // By default, a bit pattern of '0000000000' is considered to be electrical
  // idle condition.  
 
  parameter ELECTRICAL_IDLE_VAL = 0;
  wire [31:0] pw_ELECTRICAL_IDLE_VAL = ELECTRICAL_IDLE_VAL;
  
  // Parameter RESERVED_FIELD_CHECK_ENABLE configures the monitor to track the
  // reserved field of the transaction layer packets (TLPs), Data link layer
  // packets and other reserved fields. Set this parameter to 1 if the monitor
  // has to track for any non zero value in the reserved fields. By default,
  // the monitor does not tracks for existence of non zero value in the reserved
  // field.

  parameter RESERVED_FIELD_CHECK_ENABLE = 1;
  wire [31:0] pw_RESERVED_FIELD_CHECK_ENABLE = RESERVED_FIELD_CHECK_ENABLE;

  // Parameter VENDOR_SPECIFIC_ENCODING_ENABLE = 0 configures the monitor to
  // allow the usage of vendor specific encodings in the DLL packet type as
  // well as the vendor specific message codes.

  parameter VENDOR_SPECIFIC_ENCODING_ENABLE = 0;
  wire [31:0] pw_VENDOR_SPECIFIC_ENCODING_ENABLE = 
					     VENDOR_SPECIFIC_ENCODING_ENABLE;

  parameter OVERRIDE_TIMER_VALUE = 0;
  wire [31:0] pw_OVERRIDE_TIMER_VALUE = OVERRIDE_TIMER_VALUE;

  parameter REPLAY_TIMER_VALUE = 711;
  wire [31:0] pw_REPLAY_TIMER_VALUE = REPLAY_TIMER_VALUE;

  parameter ACKNAK_TIMER_VALUE = 237;
  wire [31:0] pw_ACKNAK_TIMER_VALUE = ACKNAK_TIMER_VALUE;

  // Parameter MIN_TS1_COUNT configures the minimum number of TS1 ordered sets
  // that must be transmitted before transitioning into Polling.Configuration
  // state from Polling.active state.

  parameter MIN_TS1_COUNT = 1024;
  wire [31:0] pw_MIN_TS1_COUNT = MIN_TS1_COUNT;

  // Parameter DESKEW_SUPPORT configures the monitor to support multi lane
  // deskew on the receive side. By default, multi lane deskew is not 
  // supported.

  parameter DESKEW_SUPPORT = 0;
  wire [31:0] pw_DESKEW_SUPPORT = DESKEW_SUPPORT;

  // Parameter VC_SUPPORT configures the TC/VC mapping.
  // By default, only VC0 is supported and all the TC's are mapped to VC0.
  // Set this parameter to 1, to support all the VC's and one to one
  // mapping between TC and VC. I,e TC0/VC0, TC1/VC1, TC2/VC2 ....
  // Set this parameter to 2, to enable required VC's and to specify the TC/VC
  // mapping through ports.

  parameter VC_SUPPORT = 0;
  wire [31:0] pw_VC_SUPPORT = VC_SUPPORT;

  // Parameter HOT_PLUG_MESSAGE_ENABLE allows hot plug signaling messages.
  // By default, monitor does not allow the transmission of hot plug
  // signaling messages as per PCIE 1.1 specification.

  parameter HOT_PLUG_MESSAGE_ENABLE = 0;

  // Parameter TX_SKEW_SUPPORT configures the monitor to support skew on
  // transmit lanes. By default, skew on transmit lanes is not supported.

  parameter TX_SKEW_SUPPORT = 0;

  // Parameter ENABLE_DATA_PLUS_MINUS_CHECK configures the monitor to
  // check whether the symbol_data_plus and symbol_data_minus signals
  // are properly hooked up or not. By default, this check is not done.
  // When properly hooked up, the symbol_data_plus will be either 
  // equal to symbol_data_minus or complementary of symbol_data_minus.

  parameter ENABLE_DATA_PLUS_MINUS_CHECK = 0;

  parameter ZI_PORT_WIDTH = (INTERFACE_TYPE == 0) ? MAX_LINK_WIDTH :
			    10 * MAX_LINK_WIDTH;


  // PCI_EXPRESS_GEN2 code start
  // Parameter PCI_EXPRESS_GEN2 enables generation2 features of monitor.
  parameter PCI_EXPRESS_GEN2 = 0;
  wire [31:0] pw_PCI_EXPRESS_GEN2 = PCI_EXPRESS_GEN2;
  // PCI_EXPRESS_GEN2 code end

  // Additional gen1 code start
  parameter CPL_TIMEOUT_CLK = 30000;
  wire [31:0] pw_CPL_TIMEOUT_CLK = CPL_TIMEOUT_CLK;
  parameter UPDATE_FC_30US_TIMER_CLK = (INTERFACE_TYPE == 0) ? 75000 : 7500;
  wire [31:0] pw_UPDATE_FC_30US_TIMER_CLK = UPDATE_FC_30US_TIMER_CLK;
  // Additional gen1 code end

  // Input declarations 

  input reset; // Global synchronous reset signal
  input areset; // Global asynchronous reset signal
  input tx_clk; // Transmit interface clock
  input [ZI_PORT_WIDTH - 1 :0] tx_symbols_plus;
  input [ZI_PORT_WIDTH - 1 :0] tx_symbols_minus;  
  input rx_clk; // Receive clock
  input [ZI_PORT_WIDTH - 1 :0] rx_symbols_plus;
  input [ZI_PORT_WIDTH - 1 :0] rx_symbols_minus;

  input skip_link_training;
  input [15:0] device_control_register;
  input [31:0] device_capabilities_register;
  input extended_sync_enable;
  input L0s_entry_supported;
  // PCI_EXPRESS_GEN2 code start
  input acs_translation_blocking_enable;
  input disable_cpl_timeout;
  // PCI_EXPRESS_GEN2 code end
  input phy_layer_checks_disable;
  input link_layer_checks_disable;
  input transaction_layer_checks_disable;

  input [7:0] enable_vc_id;
  input [7:0] tc_mapped_to_vc_id_0;
  input [7:0] tc_mapped_to_vc_id_1;
  input [7:0] tc_mapped_to_vc_id_2;
  input [7:0] tc_mapped_to_vc_id_3;
  input [7:0] tc_mapped_to_vc_id_4;
  input [7:0] tc_mapped_to_vc_id_5;
  input [7:0] tc_mapped_to_vc_id_6;
  input [7:0] tc_mapped_to_vc_id_7;


  // Internal parameter declarations

  parameter ZI_SYMBOL_DATA_WIDTH = (INTERFACE_TYPE) ? 10 : 1;

// Additional Gen1 code start      

  // Parameter declaration for states
  parameter ZI_LTSSM_POLLING_ACTIVE_STATE = 0;
  parameter ZI_LTSSM_POLLING_CFG_STATE = 1;
  parameter ZI_LTSSM_POLLING_SPEED_STATE = 2;
  parameter ZI_LTSSM_POLLING_COMPLIANCE_STATE = 3;
  parameter ZI_LTSSM_CFG_RCVRCFG_STATE = 4;
  parameter ZI_LTSSM_CFG_IDLE_STATE = 5;
  parameter ZI_LTSSM_L0_STATE = 6;
  parameter ZI_LTSSM_RECOVERY_LOCK_STATE = 7;
  parameter ZI_LTSSM_RECOVERY_RCVRCFG_STATE = 8;
  parameter ZI_LTSSM_RECOVERY_IDLE_STATE = 9;
  parameter ZI_LTSSM_TX_L0s_STATE = 10;
  parameter ZI_LTSSM_RX_L0s_STATE = 11;
  parameter ZI_LTSSM_RESET_STATE = 12;
  parameter ZI_LTSSM_LOOPBACK_STATE = 13;
  parameter ZI_LTSSM_DISABLE_STATE = 14;
  parameter ZI_LTSSM_CFG_COMPLETE_STATE = 15;

  // For power management support.

  parameter ZI_LTSSM_L1_STATE = 16;
  parameter ZI_LTSSM_L2_STATE = 17;
  parameter ZI_LTSSM_L1_ENTRY_STATE = 19;
  parameter ZI_LTSSM_L2_ENTRY_STATE = 20;
  // Gen2 recovery speed state
  parameter ZI_LTSSM_RECOVERY_SPEED_STATE = 18; // New state in recovery

 // Additional Gen1 code end  
 
  // Register declarations

  reg tx_posedge_toggle;
  reg tx_negedge_toggle;
  reg rx_posedge_toggle;
  reg rx_negedge_toggle;
  reg tx_lane_reverse_posedge;
  reg tx_lane_reverse_negedge;
  reg [MAX_LINK_WIDTH * 8 - 1:0] temp_int_tx_descrambled_data;
  reg rx_lane_reverse_posedge;
  reg rx_lane_reverse_negedge;
  reg [MAX_LINK_WIDTH * 8 - 1:0] temp_int_rx_descrambled_data;

  // Register declarations for gate signals

  reg [31:0] tx_clk_gate_lane;
  reg [31:0] rx_clk_gate_lane;

  // Register parameter_checks_active ensures that the
  // checks on the parameter fires only once.

  reg parameter_checks_active;

  reg [7:0] tx_n_fts_temp;
  reg [7:0] rx_n_fts_temp;
  reg tx_n_fts_field_not_same;
  reg rx_n_fts_field_not_same;
  // Additional gen1 code start
  reg [7:0] link_number_tx_temp;
  reg [7:0] link_number_rx_temp;
  reg tx_link_num_field_not_same;
  reg rx_link_num_field_not_same;
  // Additional gen1 code end

  // Register declarations for deskew support

  reg data_aligned_posedge; // Indicates that the data is aligned.
  reg r_data_aligned_posedge;
  reg [3:0] valid_bit_count_posedge;
  reg [31:0] active_lanes_bitmap_posedge;
 
  reg data_aligned_negedge;
  reg r_data_aligned_negedge;
  reg [3:0] valid_bit_count_negedge;
  reg [31:0] active_lanes_bitmap_negedge;

  reg tx_data_aligned_posedge;
  reg r_tx_data_aligned_posedge;
  reg [3:0] tx_valid_bit_count_posedge;
  reg [31:0] tx_active_lanes_bitmap_posedge;

  reg tx_data_aligned_negedge;
  reg r_tx_data_aligned_negedge;
  reg [3:0] tx_valid_bit_count_negedge;
  reg [31:0] tx_active_lanes_bitmap_negedge;

  // Wire declarations

  // Transmit interface signals. All these signals are outputs from the
  // lane receiver modules. Each bit corresponds to a lane receiver
  // module instantiation.

  wire [31:0] tx_d_or_k_code; // Asserted when a K code is detected. 
  wire [31:0] tx_valid_code; // Asserted whenever a valid 10b code is detected.
  wire [31:0] tx_current_rd; // Running disparity
  wire [31:0] tx_eidle; // Asserted when electrical idle is detected.
  wire [31:0] tx_10b_code_violation; // When deasserted this bit will indicate
                                     // that a 10B code violation has occurred.
  // PCI_EXPRESS_GEN2 code start
  wire [31:0] xmtd_eie_os; // Asserted when a EIE ordered set is detected.
  wire [31:0] xmtd_eie; // Asserted when a EIE symbol is detected.
  // PCI_EXPRESS_GEN2 code end
  wire [31:0] xmtd_skp_os; // Asserted when a SKP ordered set is detected.
  wire [31:0] xmtd_idle_os; // Asserted when a IDL ordered set is detected.
  wire [31:0] xmtd_fts_os; // Asserted when a FTS ordered set is detected.
  wire [31:0] xmtd_ts1; // Asserted when a TS1 ordered set is detected.
  wire [31:0] xmtd_ts2; // Asserted when a TS2 ordered set is detected.
  wire [31:0] xmtd_lane_num; // Asserted when a valid lane number is 
                             // detected in TS1/TS2 ordered set.
  wire [31:0] xmtd_link_num; // Asserted when a valid link number is 
			     // detected in TS1/TS2 ordered set.
  // PCI_EXPRESS_GEN2 code start
  wire [31:0] xmtd_gen1; // Asserted when the gen1 speed bit is set in the TS1/TS2
  wire [31:0] xmtd_gen2; // Asserted when the gen2 speed bit is set in the TS1/TS2
  wire [31:0] xmtd_autonomous; // Asserted when the autonomous bit is set in the TS1/TS2
  wire [31:0] xmtd_speed_change; // Asserted when the speed change bit is set in the TS1/TS2
  wire [31:0] xmtd_compliance_receive; // Asserted when the complaince receive bit is set in the TS1/TS2
  wire [31:0] xmtd_compliance_receive_loopback; // Asserted when the complaince receive and loopback bit are set in the TS1/TS2
  // PCI_EXPRESS_GEN2 code end
  wire [31:0] xmtd_reset; // Asserted when the reset bit in the TS1/TS2 

  wire [31:0] xmtd_loopback; // Asserted when loopback bit is set in TS1/TS2
  wire [31:0] xmtd_disable; // Asserted when disable bit is set in the TS1/TS2
  wire [31:0] xmtd_no_scramble; // Asserted when disable scrambling is set 
				// in TS1/TS2
  wire [31:0] xmtd_idle_data; // Asserted when idle data is detected.
  wire [31:0] xmtd_comp_pattern;  // Asserted when compliance pattern 
				  // is detected.
  // PCI_EXPRESS_GEN2 code start
  wire [31:0] xmtd_modified_comp_pattern;
  // PCI_EXPRESS_GEN2 code end

  wire xmting_dllp_tlp; // Asserted when a DLLP or a TLP is on the link.

  // Receive interface signals. All these signals are outputs from the
  // lane receiver modules. Each bit corresponds to a lane receiver 
  // module instantiation. 
 
  wire [31:0] rx_d_or_k_code; // Asserted when a K code is detected.
  wire [31:0] rx_valid_code; // Asserted whenever a valid 10b code is detected.
  wire [31:0] rx_current_rd; // Running disparity  
  wire [31:0] rx_eidle; // Asserted when electrical idle is detected.
  wire [31:0] rx_10b_code_violation; // When deasserted this bit will indicate
                                     // that a 10B code violation has occurred.
  // PCI_EXPRESS_GEN2 code start
  wire [31:0] rcvd_eie_os; // Asserted when a EIE ordered set is detected.
  wire [31:0] rcvd_eie; // Asserted when a EIE symbol is detected.
  // PCI_EXPRESS_GEN2 code end
  wire [31:0] rcvd_skp_os; // Asserted when a SKP ordered set is detected.
  wire [31:0] rcvd_idle_os; // Asserted when a IDL ordered set is detected.
  wire [31:0] rcvd_fts_os; // Asserted when a FTS ordered set is detected.
  wire [31:0] rcvd_ts1; // Asserted when a TS1 ordered set is detected.
  wire [31:0] rcvd_ts2; // Asserted when a TS2 ordered set is detected.
  wire [31:0] rcvd_lane_num; // Asserted when a valid lane number is 
                             // detected in TS1/TS2 ordered set.
  wire [31:0] rcvd_link_num; // Asserted when a valid link number is
                             // detected in TS1/TS2 ordered set.
  // PCI_EXPRESS_GEN2 code start
  wire [31:0] rcvd_gen1; // Asserted when the gen1 speed bit is set in the TS1/TS2
  wire [31:0] rcvd_gen2; // Asserted when the gen2 speed bit is set in the TS1/TS2
  wire [31:0] rcvd_autonomous; // Asserted when the autonomous bit is set in the TS1/TS2
  wire [31:0] rcvd_speed_change; // Asserted when the speed change bit is set in the TS1/TS2
  wire [31:0] rcvd_compliance_receive; // Asserted when the complaince receive bit is set in the TS1/TS2
  wire [31:0] rcvd_compliance_receive_loopback; // Asserted when the complaince receive and loopback bit are set in the TS1/TS2
  // PCI_EXPRESS_GEN2 code end
  wire [31:0] rcvd_reset; // Asserted when the reset bit in the TS1/TS2 
 
  wire [31:0] rcvd_loopback; // Asserted when loopback bit is set in TS1/TS2
  wire [31:0] rcvd_disable; // Asserted when disable bit is set in the TS1/TS2
  wire [31:0] rcvd_no_scramble; // Asserted when disable scrambling is set 
				// in TS1/TS2
  wire [31:0] rcvd_idle_data; // Asserted when idle data is detected. 
  wire [31:0] rcvd_comp_pattern;  // Asserted when compliance pattern 
				  // is detected.
  // PCI_EXPRESS_GEN2 code start
  wire [31:0] rcvd_modified_comp_pattern;
  // PCI_EXPRESS_GEN2 code end

  wire rcving_dllp_tlp; // Asserted when a DLLP or a TLP is on the link.

  wire [32 *10 - 1:0] tx_10b_data;
  wire [32 *10 - 1:0] rx_10b_data;
  wire [32 * 8 - 1:0] tx_8b_decoded_data;
  wire [32 * 8 - 1:0] rx_8b_decoded_data;
  wire [32 * 8 - 1:0] tx_descrambled_data;
  wire [32 * 8 - 1:0] rx_descrambled_data;
  wire [32 * 8 - 1:0] tx_n_fts;
  wire [32 * 8 - 1:0] rx_n_fts;

  wire [MAX_LINK_WIDTH * 8 - 1:0] int_tx_descrambled_data;
  wire [MAX_LINK_WIDTH * 8 - 1:0] int_rx_descrambled_data;
  wire [MAX_LINK_WIDTH - 1:0] int_tx_eidle;
  wire [MAX_LINK_WIDTH - 1:0] int_tx_10b_code_violation;
  // PCI_EXPRESS_GEN2 code start
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_eie_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_eie;
  // PCI_EXPRESS_GEN2 code end
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_skp_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_idle_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_fts_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_ts1;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_ts2;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_lane_num;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_link_num;
  // PCI_EXPRESS_GEN2 code start
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_gen1; 
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_gen2; 
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_autonomous; 
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_speed_change; 
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_compliance_receive; 
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_compliance_receive_loopback; 
  // PCI_EXPRESS_GEN2 code end
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_reset;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_loopback;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_disable;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_no_scramble;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_idle_data;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_comp_pattern;
  // PCI_EXPRESS_GEN2 code start
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_modified_comp_pattern;
  // PCI_EXPRESS_GEN2 code end
  wire [MAX_LINK_WIDTH - 1:0] int_tx_valid; 
  wire [MAX_LINK_WIDTH - 1:0] int_tx_d_or_k_code; 
 
  wire [MAX_LINK_WIDTH - 1:0] int_rx_valid;         
  wire [MAX_LINK_WIDTH - 1:0] int_rx_d_or_k_code;
  wire [MAX_LINK_WIDTH - 1:0] int_rx_eidle;
  wire [MAX_LINK_WIDTH - 1:0] int_rx_10b_code_violation;
  // PCI_EXPRESS_GEN2 code start
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_eie_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_eie;
  // PCI_EXPRESS_GEN2 code end
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_skp_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_idle_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_fts_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_ts1;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_ts2;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_lane_num;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_link_num;
  // PCI_EXPRESS_GEN2 code start
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_gen1; 
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_gen2; 
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_autonomous; 
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_speed_change; 
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_compliance_receive; 
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_compliance_receive_loopback; 
  // PCI_EXPRESS_GEN2 code end
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_reset;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_loopback;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_disable;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_no_scramble;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_idle_data;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_comp_pattern;
  // PCI_EXPRESS_GEN2 code start
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_modified_comp_pattern;
  // PCI_EXPRESS_GEN2 code end

  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_tx_symbols_p;
  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_tx_symbols_n;
  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_rx_symbols_p;
  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_rx_symbols_n;

  wire tx_level_select; // Transmit level select signal
  wire rx_level_select; // Receive level select signal

  wire [31:0] tx_lane_0_detected; // A logic high on any one of the bits 
				  // indicate that lane 0 is detected on 
				  // that lane 
  wire [31:0] rx_lane_0_detected; // A logic high on any one of the bits 
				  // indicate that lane 0 is detected on 
				  // that lane

  wire tlp_xmtd_tx; // TLP transmitted
  wire dllp_xmtd_tx; // DLLP transmitted
  wire [2:0] dllp_count_tx; // DLLPs transmitted in a symbol time
  wire [1:0] tlp_count_tx; // TLPs transmitted in a symbol time
  wire nullified_tlp_xmtd_tx; // Nullified TLP is transmitted
  wire tx_inc_sdp_stp;
  wire tx_inc_pad;
  wire tx_inc_end;
  wire tx_inc_stp_on_non_zero_lane;
 
  wire tlp_xmtd_rx; // TLP received 
  wire dllp_xmtd_rx; // DLLP received
  wire [2:0] dllp_count_rx; // DLLPs received in a symbol time
  wire [1:0] tlp_count_rx; // TLPs received in a symbol time
  wire nullified_tlp_xmtd_rx; // Nullified TLP is transmitted 
  wire rx_inc_sdp_stp; 
  wire rx_inc_pad;
  wire rx_inc_end; 
  wire rx_inc_stp_on_non_zero_lane;

  wire [1:0] rx_tlp_detected; // A TLP is detected
  wire [69:0] rx_tlp_pkt1; // TLP packet 1 contents
  wire [69:0] rx_tlp_pkt2; // TLP packet 2 contents
  wire [1:0] rx_malformed_tlp; // Malformed TLP
  wire [1:0] tx_tlp_detected;
  wire [69:0] tx_tlp_pkt1;
  wire [69:0] tx_tlp_pkt2;
  wire [1:0] tx_malformed_tlp;
  wire [1:0] tx_tlps_with_digests; // TLPs with TLP digest detected
  wire [1:0] tx_tlps_with_ecrc; // TLPs with ECRC detected
  wire [1:0] rx_tlps_with_digests;
  wire [1:0] rx_tlps_with_ecrc;

// Additional gen1 code start
  wire initial_cfg_started_tx;
  wire initial_cfg_started_rx;
  wire [15:0] last_captured_req_id_tx;
  wire [15:0] last_captured_req_id_rx;
  wire lock_established_tx;
  wire lock_established_rx;
  wire lock_completed_tx;
  wire lock_completed_rx;
// Additional gen1 code end

  wire tx_lane_reverse; // Lane reversal on transmit interface
  wire rx_lane_reverse; // Lane reversal on receive interface
 
  wire link_width_negotiated;
  // PCI_EXPRESS_GEN2 code start
  wire current_speed_5gt;
  wire stable_speed_5gt;
  wire [3:0] xmtd_eie_before_fts_count;
  wire [3:0] rcvd_eie_before_fts_count;
  wire changed_speed_recovery;
  // PCI_EXPRESS_GEN2 code end
  wire [5:0] link_width;
  wire [31:0] link_width_bitmap;
  wire phy_status;
  wire dll_status;
  wire [1:0] tx_retry_progress;
  wire [1:0] rx_retry_progress;
  wire [1:0] xmtd_lcrc_error;
  wire [1:0] rcvd_lcrc_error;

  // Statistics
  wire tx_dllp_ack_detected;
  wire tx_dllp_ack_ended;
  wire tx_dllp_nak_detected;
  wire tx_dllp_nak_ended;
  wire tx_dllp_pm_enter_L1_detected;
  wire tx_dllp_pm_enter_L1_ended;
  wire tx_dllp_pm_enter_L23_detected;
  wire tx_dllp_pm_enter_L23_ended;
  wire tx_dllp_pm_active_req_L0s_detected;
  wire tx_dllp_pm_active_req_L0s_ended;
  wire tx_dllp_pm_active_req_L1_detected;
  wire tx_dllp_pm_active_req_L1_ended;
  wire tx_dllp_pm_request_ack_detected;
  wire tx_dllp_pm_request_ack_ended;
  wire tx_dllp_vendor_specific_detected;
  wire tx_dllp_vendor_specific_ended;
  wire tx_dllp_initfc1_p_detected;
  wire tx_dllp_initfc1_p_ended;
  wire tx_dllp_initfc1_np_detected;
  wire tx_dllp_initfc1_np_ended;
  wire tx_dllp_initfc1_cpl_detected;
  wire tx_dllp_initfc1_cpl_ended;
  wire tx_dllp_initfc2_p_detected;
  wire tx_dllp_initfc2_p_ended;
  wire tx_dllp_initfc2_np_detected;
  wire tx_dllp_initfc2_np_ended;
  wire tx_dllp_updatefc_p_detected;
  wire tx_dllp_updatefc_p_ended;
  wire tx_dllp_updatefc_np_detected;
  wire tx_dllp_updatefc_np_ended;
  wire tx_dllp_updatefc_cpl_detected;
  wire tx_dllp_updatefc_cpl_ended;
  wire tx_detected_dllp_pkt_valid;
  wire [63:0] tx_detected_dllp_pkt;
  wire tx_ended_dllp_pkt_valid;
  wire [63:0] tx_ended_dllp_pkt;
  wire [11:0] tx_current_expected_tlp_seq_num;
  wire [11:0] tx_ack_nak_sequence_number_of_dllp;
  wire vc_tlp_transmitted;

  wire rx_dllp_ack_detected;
  wire rx_dllp_ack_ended;
  wire rx_dllp_nak_detected;
  wire rx_dllp_nak_ended;
  wire rx_dllp_pm_enter_L1_detected;
  wire rx_dllp_pm_enter_L1_ended;
  wire rx_dllp_pm_enter_L23_detected;
  wire rx_dllp_pm_enter_L23_ended;
  wire rx_dllp_pm_active_req_L0s_detected;
  wire rx_dllp_pm_active_req_L0s_ended;
  wire rx_dllp_pm_active_req_L1_detected;
  wire rx_dllp_pm_active_req_L1_ended;
  wire rx_dllp_pm_request_ack_detected;
  wire rx_dllp_pm_request_ack_ended;
  wire rx_dllp_vendor_specific_detected;
  wire rx_dllp_vendor_specific_ended;
  wire rx_dllp_initfc1_p_detected;
  wire rx_dllp_initfc1_p_ended;
  wire rx_dllp_initfc1_np_detected;
  wire rx_dllp_initfc1_np_ended;
  wire rx_dllp_initfc1_cpl_detected;
  wire rx_dllp_initfc1_cpl_ended;
  wire rx_dllp_initfc2_p_detected;
  wire rx_dllp_initfc2_p_ended;
  wire rx_dllp_initfc2_np_detected;
  wire rx_dllp_initfc2_np_ended;
  wire rx_dllp_initfc2_cpl_detected;
  wire rx_dllp_initfc2_cpl_ended;
  wire rx_dllp_updatefc_p_detected;
  wire rx_dllp_updatefc_p_ended;
  wire rx_dllp_updatefc_np_detected;
  wire rx_dllp_updatefc_np_ended;
  wire rx_dllp_updatefc_cpl_detected;
  wire rx_dllp_updatefc_cpl_ended;
  wire rx_detected_dllp_pkt_valid;
  wire [63:0] rx_detected_dllp_pkt;
  wire rx_ended_dllp_pkt_valid;
  wire [63:0] rx_ended_dllp_pkt;
  wire [11:0] rx_current_expected_tlp_seq_num;
  wire [11:0] rx_ack_nak_sequence_number_of_dllp;
  wire vc_tlp_received;

  wire [11:0] tx_num_outstanding_tlps;
  wire tx_incr_detected_duplicate_tlp;
  wire tx_incr_ended_duplicate_tlp;

  wire [11:0] rx_num_outstanding_tlps;
  wire rx_incr_detected_duplicate_tlp;
  wire rx_incr_ended_duplicate_tlp;

  wire [15:0] tx_replay_timer;
  wire [15:0] tx_acknak_timer;

  wire [15:0] rx_replay_timer;
  wire [15:0] rx_acknak_timer;

  wire [32 * 8 - 1:0] link_number_tx;
  wire [32 * 8 - 1:0] link_number_rx;

  wire disable_descramble;

  // Wire declarations for deskew

  wire deskew_fifo_flush; // To flush the deskew fifo
  wire deskew_fifo_read;
  wire deskew_fifo_read_temp;
  wire data_not_aligned; // Indicates that the data is not aligned.
  wire [31:0] deskew_fifo_full; // Full flag from deskew FIFOs.
  wire [31:0] com_read_from_fifo; // Asserted when COM is read from deskew FIFO
  wire [31:0] deskew_fifo_empty; // Empty flag from deskew FIFOs.
  wire fifo_empty; // Asserted when any of the deskew FIFOs are empty.
  wire [MAX_LINK_WIDTH - 1:0] masked_bitmap;
  wire com_read_from_all_lanes;
  wire data_aligned;
  wire r_data_aligned;
  wire [3:0] valid_bit_count;
  wire [31:0] active_lanes_bitmap;
  wire com_on_consecutive_lanes;

  // Wire declarations for transmit deskew

  wire tx_deskew_fifo_flush; // Flush the transmit FIFOs
  wire tx_deskew_fifo_read; // Enable reading of transmit FIFO
  wire tx_deskew_fifo_read_temp;
  wire tx_data_not_aligned;
  wire [31:0] tx_deskew_fifo_full;
  wire [31:0] tx_com_read_from_fifo;
  wire [31:0] tx_deskew_fifo_empty;
  wire tx_fifo_empty;
  wire [MAX_LINK_WIDTH - 1:0] tx_masked_bitmap;
  wire tx_data_aligned;
  wire r_tx_data_aligned;
  wire tx_com_read_from_all_lanes;
  wire [3:0] tx_valid_bit_count;
  wire [31:0] tx_active_lanes_bitmap;
  wire tx_com_on_consecutive_lanes;

  // Wire declarations for Power Management 

  wire xmtd_pm_active_state_nak_tlp;
  wire xmtd_pm_pme_tlp;
  wire xmtd_pme_turn_off_tlp;
  wire xmtd_pme_to_ack_tlp;
  wire [2:0] xmtd_pm_enter_command_flag;
  
  wire rcvd_pm_active_state_nak_tlp;
  wire rcvd_pm_pme_tlp; 
  wire rcvd_pme_turn_off_tlp;
  wire rcvd_pme_to_ack_tlp;
  wire [2:0] rcvd_pm_enter_command_flag;

  wire eidle_detected_tx;
  wire eidle_detected_rx;

  // Integer declarations

  integer index, index1, i, j;

  //-------------------------------------------------------------
  // Internal wires for TC/VC Mapping
  //------------------------------------------------------------

  wire [7:0] enable_vc_id_real;
  wire [7:0] tc_mapped_to_vc_id_0_real;
  wire [7:0] tc_mapped_to_vc_id_1_real;
  wire [7:0] tc_mapped_to_vc_id_2_real;
  wire [7:0] tc_mapped_to_vc_id_3_real;
  wire [7:0] tc_mapped_to_vc_id_4_real;
  wire [7:0] tc_mapped_to_vc_id_5_real;
  wire [7:0] tc_mapped_to_vc_id_6_real;
  wire [7:0] tc_mapped_to_vc_id_7_real;
  wire [7:0] tc_mapped_bitmap;
  wire compliance_check_enable;

  //-------------------------------------------------------------

//`ifxdef ZI_FOR_SEARCH
//  Currently not Supported for Search
//`endxif

`protected

    MTI!#^?[1+[meUnw+A>e'2O=Ty#oI+R;*z8jDkrpsx"k>>]})+<Z['_]>NO~pv*?3}YYE]5Y,[d>
    ri0YAVrtQ)lQv=i1J]Gs+*VueTImXZZ,m=+YE@9-O>_U'!<Ha;+qO,v=7l-pplD[Q-1jI?rBQYnT
    4$=:ETGpB;OX;R7G:#'GHiG'Krln@NpQzT!Uz<O7kaW^'DZplD2o*uzV7?(,pnIxsnD~,}]T=uH%
    Uor'f7Uj'Bd\p'@7kQW^@x}[KTGGeBp*{Q$kU!B@Uu[B8I{3^oXru[p?pp2Z+9e{$E|XG=I[~@Yd
    e@+Gzxx<*C!]0BAp>.+7u<RX$rCUJTA$#wOoevfkII?9Y1;\]aE>Bw;X~jiK?|Tsr,H_Wr$OmJ#'
    u<$7IABv{[iIZ#zJ'Oj[Y?K7n>moU+BZae~XA@YR=z!^\zljHrQxVUu-vWe#a7wHB{:g=un~Eza{
    h,5=TAOXaG=WQ;jIi+zZ-:rYQz7h\)[#W7$xXHO2O?;D$5^#Dz+DZ#m_k]j1w73'X5TAzeEzH]fw
    $XI&l+e]6;&!$-Z[[QppB?<1~G,VaEIurT1nrnKr\R2lx'~DuX2=UD;*^x=|EK>CYaYiju{?EJO{
    1oRCvc]Ds@z1pvl;v<|qZGC7'x@}1}@rI\{AG>!olmKB7nBrV^R^?Txw|}?j2fQ-WWDO@+@<H\Cx
    OAn<W[Ts2UZ]}ZEe#Wmow2?EH-OE+TLHv2^B5"uA=#zVnvf$xtOBz\W='IsK+z~Q;RogV]7o72I{
    2sm{}IVG}~XGpZl;*RA]\QU?{BVB-\uW).+=<5g=ro+*wB>]*Rip#o@]BxIImwH5Y]D!n+n=i~}2
    s@l}KUa[n\BBJOAuDDR]E*CnjV>pYRs=@Bi*k<[Y?WV7-p@!$2V1C!BnRx[E2'Qq!*,eEiV*zs?=
    HR!J#>ok#pO2v3ev#alR-r-Y?aeOACarBj5B<EI<[~33Vkv?#X]w;qvE\jeZEQZAx+]{[Ad}J$az
    {[ii^,s'=+Q}B\Ok]+JbBRk<jo]^#{jG]1-{TVKup<A=1E'w9Uoa_e\^+=]HXVYX+pkRs-r\nxox
    <SBpm,CTv[&l~V_GA}V]u,klz;<<IG{vW]!a+zT$@-W\>DW\;>IHTTzOK2{oE'1Cc%}v7mVZ{lRa
    !xV=2R.Aa,iKTao[5<2HH]-Y$Vl)2sCK^#{Z*Eku]B1Hv~jo*nQlsX2ms-nulkj;D>Q#2j#1!BDZ
    PO=:xmx-~awxz5JU~UZks?>E|/7CE!mp}}/X{Rn[;~E,j<=E;s1vQsIHCsp:iVak}n\K$sYE,W>-
    I2@EQ3R#_TmsvW^j1lJz@E<>}Y_^s[7j1Tl#uH~<xOx$[Kj16iaY+FCJ<QYr,Js<
`endprotected
  assign int_tx_symbols_p = tx_symbols_plus;
  assign int_tx_symbols_n = tx_symbols_minus;
  assign int_rx_symbols_p = rx_symbols_plus;
  assign int_rx_symbols_n = rx_symbols_minus;

  // Assign statements

  //----------------------------------------------------------------
  // TC/VC Mapping assignments
  //
  // Case 1 When VC_SUPPORT parameter is set to 0, then only VC0 is 
  // supported and all the TC's are mapped to VC0 
  // Case 2 When VC_SUPPORT parameter is set to 1, then all the VC's  
  // are supported and one to one TC/VC mapping is assumed.
  // Case 3 When VC_SUPPORT parameter is set to 2, then user has to  
  // configure the TC/VC mapping and enable the VC's.
  // TC - ID is nothing but the bit position in the 8 bit vector.
  //----------------------------------------------------------------

  assign enable_vc_id_real = (VC_SUPPORT == 0) ? 8'b1 :
         ((VC_SUPPORT == 1) ? 8'b1111_1111 : enable_vc_id); 
  assign tc_mapped_to_vc_id_0_real = (VC_SUPPORT == 0) ? 8'hFF :
         ((VC_SUPPORT == 1) ? 8'b0000_0001 : tc_mapped_to_vc_id_0); 
  assign tc_mapped_to_vc_id_1_real = (VC_SUPPORT== 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b0000_0010 : tc_mapped_to_vc_id_1);
  assign tc_mapped_to_vc_id_2_real = (VC_SUPPORT == 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b0000_0100 : tc_mapped_to_vc_id_2);
  assign tc_mapped_to_vc_id_3_real = (VC_SUPPORT == 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b0000_1000 : tc_mapped_to_vc_id_3); 
  assign tc_mapped_to_vc_id_4_real = (VC_SUPPORT == 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b0001_0000 : tc_mapped_to_vc_id_4); 
  assign tc_mapped_to_vc_id_5_real = (VC_SUPPORT == 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b0010_0000 : tc_mapped_to_vc_id_5); 
  assign tc_mapped_to_vc_id_6_real = (VC_SUPPORT == 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b0100_0000 : tc_mapped_to_vc_id_6); 
  assign tc_mapped_to_vc_id_7_real = (VC_SUPPORT == 0) ? 8'b0 :
         ((VC_SUPPORT == 1) ? 8'b1000_0000 : tc_mapped_to_vc_id_7); 

  assign tc_mapped_bitmap = (tc_mapped_to_vc_id_0_real |
                             tc_mapped_to_vc_id_1_real |
                             tc_mapped_to_vc_id_2_real |
                             tc_mapped_to_vc_id_3_real |
                             tc_mapped_to_vc_id_4_real |
                             tc_mapped_to_vc_id_5_real |
                             tc_mapped_to_vc_id_6_real |
                             tc_mapped_to_vc_id_7_real);
`protected 
    MTI!#En}>D*xwarw-rnV\$lG]p<[{F~oUu[EriNY77[q-Tn[mY{[;oV3#=#Of7>^<7B?^i'zivAK
    5~CEJZE>='2c[<^~NA-nsLF(|#RK7;,<ek7eJG2ZjsAT~7roV{a}p{wH<F*;vxfK{CiZV<pR!!-Q
    wo[AX1^5s$mX-pp-R'iQizWi+7u@vU[>&v3[{Q0EW@n73{7jrk'VV,2z@l;$ml=A\W~Y#{lvw\j|
    =W*R"<VG?lmlonRQlK_wpCb*}TlR_p\,TuGe)xeBoAUB!u=\orV3\,xiB&)L]IJotWG7<[i[=WEi
    WBu]Im5[z3jnGwQ}v?UT5G-C?^w$oXrxvmXaWG]X3^l>*+7nBaT@sY#~~?ww+[CO\z,Holn$JC5]
    R#XGZUaGeo,J?SHxXER)zx!<{-I$D?V^k\3;7{{^![*;[-Xe-}^IA7]Xru{$F@7V#$7xCJ*#$k<[
    +JB{VKHV\,;u@oeAYXnB;_5AjavBU!AQH~7V3n{JrH\kY*5-XUT$l-IEp(w5$O!v>pi^n2H]{K@>
    'xK1^'HOJH,\CEVO?#xaKvx[Ym*]rs_QlTB{O5KCQK3\mR'#JUliu;?^'D2CvjJER3Fr?]^H\K1^
    =m[VkAK}O=#b!*a{;[]lNQ?wz'*B#THJZxI_H)E5XGC][JGQ27If}}Cp7wvGl\T>IIR;97={2?{,
    Z>wesw\w+2lK>YIB]}Z@w-vn2Q=HU*$ru,Z\nl~<BArCR=~j_U85n,u*jw]Sa=5;Z+33/\<aQI^k
    BejqkIWuB>]uG?sw=$eEuTp{E#\7UeA!Hr5nY1QnH*5m@h6J{D<1}~Z?{>n-YKsCE<as~>up+w1-
    R$1B{a]}21]R?2ClmA@T]C3HemDXY**:(A\z]~aRuB7V'D*WD?r@AE,]A7O>KT-T-el$A5];[r7x
    kx=I751sDm5ij=~n7i7-'U'x$IA;5dQAb7kB<Gn+n'C=
`endprotected
  //----------------------------------------------------------------
  // This block generates the level select signals
  //----------------------------------------------------------------

  assign tx_level_select = (DOUBLE_DATA_RATE) ?
                    (~(tx_posedge_toggle ^ tx_negedge_toggle)) : 1'b1;
  assign rx_level_select = (DOUBLE_DATA_RATE) ?
                    (~(rx_posedge_toggle ^ rx_negedge_toggle)) : 1'b1;

`protected

    MTI!#e-5kVTv]xsGlK^@w2jZ],~Kp0\~7A=5oihA><[^~G@=JY~s}xIATD,mYTB[)-YD\_$xuI(T
    TV\z\;WNEm>_m}$O1B<r)Hj=ia}xo}%WeB\l;*eTD!A~'el_}wHTl?[zTEv=@*?xMP[U,@]?psLA
    aJI"!D[~<}-lI{pD{R}KV8x@K'DpH}85EVz]!mj_{*@V3EH\U7]YCjI@<r^/Q3+;VOZ=#U*J,p7e
    ,ezHnTK!E%+HrT1<R23R}\{HuHIyz\{22R*1T$7,kN-wU2wHa'y1m7>loAGt*uvUeC$[*3lw?}Dx
    i<XOV~5~Ee=^ujW*]U!va^RiOuza<]7u<'sTvsT^)O-uW1}QxI~VrD!VHo>'?,Jje%%Kh+oKrT1-
    ]*~X[aDVm9p;&(-xlmwD[s|QB>Dz2Z[jW\ZSY7o[$l>_U-Q]Y=p{3<{Y9jD@#j'z=YuVTP^212UG
    e^Y;mpIDzsX^DQ5'+k^lHw$aQKBOnxO5I17CTJ__IUXG]EX7K\Goe>ZO{'}3+WD9"{T;#=_=D-Ul
    ?*K1]weD-ZAAa5T~E8E:GGj_}rKQl-;oez^TrYwQ@V[GBzix+E-Y1KTTvmnv5~\Hx=$2InGB3<~x
    2^!}Vx-aI=D2a'+1Bpv<s2wz_zIpwvG1GU!z;H$asU}\<$lUO=W+qqUsH3!zalDDX'tjuTn9++Q@
    ?}wpK}QCi$C=$KR>cYvIvpKj+BKIa&SRwZEIA^;r+7D<*vVirYiVUKR'?GQ~>TWal5kSiO>2ERZz
    bt#GYu.E8{w]+H1v;k}@HA<+3'DiQs{nU{Oj<X9ri31.1<uHjColoK*ZoA>sp7HIAYA^mozrZVe*
    uU@a+zYGm,pXJ]]25BrW}F[gs1]#i<[Il--T5R;=xlKrkOw+{A@K/p~u1UY<~i^G2NY+ZAu{I#s1
    jY}aAKx+<rHDv[K7A2W[-}RT@!OHYru,[asIn;l'1x_vC]+C752rvrg=.GUEs'KU,aRm;x2woiVs
    T~]X]\K>X6}D[WO>!'>RE=~5mxb~Uu'Pkjn-D'eGaO*oT{xJwUIQ;$UYJ=}Ee<Ae|}*iw<\OAO[1
    mTjUxDH^;&@aQ<Ol7$~E<v!G#a5w~W!H3HGAE1wpnaaY;p\=r~jveuw*WvJYl~+pp]JBWsfoo{r6
    RH^zT-R-A1p}2]+IPBOw\D7#U/WnKroj?p<XZ>}u<xR;+B7,}
`endprotected
  //-------------------------------------------------------------------------
  // Lane reversal is done as follows.
  //-------------------------------------------------------------------------

  assign tx_lane_reverse = (tx_level_select) ? 
                           tx_lane_reverse_posedge : tx_lane_reverse_negedge;

  assign int_tx_descrambled_data = (tx_lane_reverse === 1'b1) ?
            temp_int_tx_descrambled_data : tx_descrambled_data;

  assign rx_lane_reverse = (rx_level_select) ?
                           rx_lane_reverse_posedge : rx_lane_reverse_negedge;
 
  assign int_rx_descrambled_data = (rx_lane_reverse === 1'b1) ?
            temp_int_rx_descrambled_data : rx_descrambled_data;

`protected

    MTI!#]%vlGXOn-E52@-{THH|v1'?x5zOOCK^N1;1k=Z7U[I7\=k'OQ+si>Q<D^IoQvk'11HT[B-m
    K72=o8~w*\[{J]n<RJv-'72V7pERX7T*=}A<+\,V1jRJXW&CPUjXk?7koVX5~e1x}k-RG}VU]UN6
    ahCR]?wR==~x-}Hw,=U7Y]G2|,@XpQ;3I=D{#aX{k2E5BDZ'n!_@kB}k=$,!$buYv@n$U]'O@z}k
    lG#nW[6I=-B=;Di=#+#+OR*',UT&[+{[X}1v7]+K~$IDl-][lJ[D?+lRm5,uvrsuw'}]"Z'J75~G
    =[1poek;+s+^ZG@<?eEi}W-piBz>Y;An{w5k$tE>!7Y\m]h17]iRHY\jVQEEYEax;xVe_[}V_Yiu
    $GrR)KDV;ZrBGo\jBO$Gn$WJV*--UP3H,KWr*[Yrr?ks#TE[HpH<5Jrim!mw!@mri=@nHv<w-{+p
    1[41n{+}-WkxOv'v@Vxjm@1,IWaI$1pvG31\G77$5CVoO2'lB3}=2jGV!Iknoxot/_7][Xx3]Kw>
    2a'@vP'E5KjvJJ+H-o~$=uDTEiA-VX~sC^JwJE}2ZKRY~CQ>2#O'eBaT[OzRW@n*z]1BKp-BI>?z
    }2JlTnxKvZv<A*r!<7SOJ]Ox-]m3A*1#lGkCx!OmjX=7Oz?IU=$KE=weHruWD>Coek,Ev~TIJ>~|
    TRx'pY'Ulz^+nB,V]Y{=1lmVnEzAiluJYj]!saHsCQ[^?p;B6!5BxixQ_',,-a+lUQ\@3@j\QnnQ
    T~l*!P<sG\,'u#jD1[$wvzT+=pVaDBVnueCnVaIT3?G?$ifrD\*i71u+5+@H=<x~oB38Ca!e;>sk
    *7\+)s,7^NQWQI=W]a!T<oi1?I@CUxFA,oZYKT]z~-Cr,#v]v7~#Q?+17>^@v#,ln\ZDi;B$fxU1
    Bp~]'V7X!r{@^sQu7Em7nFleYuwTB}x@-H<lv+}mX}VeuE[VJAxu]rYXQ'G[v<O[G#*nKs*\Gos>
    4,U~prEpjV*j2sp1Ww-@ZU7+]~Tz-s^npQ-5pwUo*=J+;>j{,GvH$oeQJ*v;7%T\HC#Xw>}p1uaA
    =?}r=mMK{j\Ut^\>U#]XeYZFM#+Au1z1$ERE1QDBJV-meJ=!=C'_Z+=>'n}X<5Q7W=$+D\jskr56
    pJA^[[;@-Xjp>o],FG_K$J-BnojX\YW7$;,l][_{@8S!IZxE+KKf!AX!+H^w'-m*'AwG$lwJmewJ
    I9s!o@)\_sjC2>jNl#[s'@5!c,pOU-H@$1sm^CRE2V&Vxu^g?_AYC^TaHHA^?R-l*!jHj'{^vsJI
    CD@rJB'eTpTZ!ej#R$mHSha-OZxJOu31Ar'1=xGolvEkV>H^5#k_D+m'kHG+!!yiOr~,;ZWX\*~1
    uw@E^H$1GwwaRE$=i!a#<n#o_aDn5V1I}a,#j6[ss]waR5@Yp~jK^sTEX$ormV<_1vv_Zl$GWoRD
    D^!l=OeKEOw$O3;>lXp5o22\s~Y-Hu]eB+q>>{GYa>rVnupjJ!s=OnYVwjW_~K!V7Tnv*\=cU*m?
    o@+n?sY[kB^}^%e?EU#snZ4"\O-Uv*Y]_1kYYUT?B${^lV[J!<\<HU{pzx#vOOsu@Ar^{UG1ioo}
    v*;u3Ben$OiVws@}2e>$3_o!sD7}OXv}BB\oD!'*5;XDp~>@$#+Z]^7CoR}TV@Va}1Jx,O??Kso!
    ;eZ#m][32rmswG;+Z5n^elYnAx^O'H1pwrpK,3u[2HxmErp\bR2'?O=<BrWTz3>Hn1BKXWz{{i<<
    D?*mEmaV+I,nGx$mj|48mpK$rxKrAzK^IH@,jl^BV1<A,OA[XBkj1^X7o'ZJ?avil#~!m=siX5#2
    [j'KOs*'
`endprotected
  //----------------------------------------------------------------
  // Deskew Logic
  //----------------------------------------------------------------

  // This signal will be asserted when any of the FIFOs are empty 

  assign fifo_empty =
           ((phy_status === 1'b0 &&
            |(deskew_fifo_empty & active_lanes_bitmap) === 1'b1 &&
             |active_lanes_bitmap === 1'b1) ||
           (phy_status === 1'b1 &&
            |(deskew_fifo_empty & link_width_bitmap) === 1'b1));

  // Flush the FIFO's when any of the FIFO is full or data is not
  // aligned. 
 
  assign deskew_fifo_flush =
           ((|deskew_fifo_full[MAX_LINK_WIDTH -1 :0] === 1'b1 &&
	       com_read_from_all_lanes !== 1'b1 &&
	       data_aligned === 1'b0 && fifo_empty === 1'b1)
              || (data_aligned === 1'b0 && r_data_aligned === 1'b1) ||
            (|deskew_fifo_full[MAX_LINK_WIDTH -1:0] === 1'b1 &&
              com_on_consecutive_lanes === 1'b0 &&
              |com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
	      data_aligned == 1'b0));
 
  // Masked bitmap variable disables the lanes which are not part of
  // the link.
 
  assign masked_bitmap = link_width_bitmap & com_read_from_fifo;
 
  // com_read_from_all_lanes is asserted whenever the COM symbol is
  // read from all the lanes of a configured link or all active lanes.
 
  assign com_read_from_all_lanes =
              ((phy_status === 1'b0 &&
               ((com_read_from_fifo & active_lanes_bitmap) ===
		 active_lanes_bitmap) && |active_lanes_bitmap === 1'b1) ||
              (phy_status === 1'b1 &&
               masked_bitmap === link_width_bitmap));
 
  // Alignment is said to be complete when all the FIFO's have COM
  // symbols.
 
  assign deskew_fifo_read = (INTERFACE_TYPE === 1) ?
            deskew_fifo_read_temp :
            (deskew_fifo_read_temp && valid_bit_count === 4'b1001);
 
  assign deskew_fifo_read_temp =
              ((data_aligned || com_read_from_all_lanes) &&
               data_not_aligned === 1'b0);

  // Data is said to be not aligned, when READ com is not READ from
  // all active lanes, or all lanes of the configured link.

  /*assign data_not_aligned =
               ((|com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
                ((com_read_from_fifo & active_lanes_bitmap) !==
		  active_lanes_bitmap) &&
                 phy_status === 1'b0) ||
                (|masked_bitmap === 1'b1 && phy_status === 1'b1 &&
                 masked_bitmap !== link_width_bitmap));
  */

  // Check whenther COM is detected on consecutive lanes after deskew limit
  // is reached

  assign com_on_consecutive_lanes =
               (|deskew_fifo_full[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
                |com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
                (com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'h1 || 
                 com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'h3 ||
                 com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hF ||
                 com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hFF ||
                 com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hFFF ||
                 com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hFFFF ||
                 (&(com_read_from_fifo[MAX_LINK_WIDTH - 1:0]) === 1'b1)));


  parameter ALIGN_S0 = 0;
  parameter ALIGN_S1 = 1;
  parameter ALIGN_S2 = 2;
  parameter ALIGN_S3 = 3;
  parameter ALIGN_S4 = 4;
  parameter ALIGN_S5 = 5;
  parameter NO_ALIGN_STATE = 6;

  reg [2:0] next_state_align;
  reg [2:0] present_state_align_posedge;
  reg [2:0] present_state_align_negedge;
  reg latch_compliance_pattern_detected_posedge;
  reg latch_compliance_pattern_detected_negedge;

  reg [2:0] tx_next_state_align;
  reg [2:0] tx_present_state_align_posedge;
  reg [2:0] tx_present_state_align_negedge;
  reg tx_latch_compliance_pattern_detected_posedge;
  reg tx_latch_compliance_pattern_detected_negedge;

`protected

    MTI!#Z]}@z]$pvV-?+D#JYH,QCmwvm>s,G,5=7@B!yF^!;1T]^[Y3o=E{7keUZaC[[pQxla$GK>=
    j?_X[O<#=2I>E+['l{AY}s#Y~Ei=#j?clI}5JriUT]=~A'';T$aK~C?DCzupHr-x~>x2Eb>=a=Il
    TEoKO1@={\O_}w)k+\Y&X1;8*w7+kavAl!XU%WY@U$+Zo;[^Rq=5A+!,o'$<-}BuoZ~GllUxs2zW
    5Oj2QY1i<mDKW,-U^vjIIpJa}Rt#-Y>la7j]?r?Q$Wx=Tm~B?v;kUZzn-ExQ7OC~{@oUro{ECW{i
    $VWw,3B[DGA73RxIm2ze_A^7R2}G*+k\wemUBpx+R{Q-BH2Cm[D9)B^3J=;]5[=BXUanUVZlBmD$
    o!nQ7s5u[zYZ!-VlrCBu7wx5]37kGC-KWLYBkWluY?5D'Q!IEiNaOWKQYwp
`endprotected

  wire comma_not_aligned;
  wire latch_compliance_pattern_detected;
  wire deactivate_not_all_lanes_checks;
  wire [2:0] present_state_align;
// Additional gen1 code start	   
  wire [4:0] ltssm_present_state;
  wire [4:0] ltssm_next_state;
  wire enable_ufc_counter;
  assign enable_ufc_counter = (ltssm_present_state === ZI_LTSSM_L0_STATE ||
			       ltssm_present_state === ZI_LTSSM_TX_L0s_STATE ||
			       ltssm_present_state === ZI_LTSSM_RX_L0s_STATE);
   
// Additional gen1 code end  
  wire deskew_control;
  wire parallel_valid;

  wire tx_comma_not_aligned;
  wire tx_latch_compliance_pattern_detected;
  wire tx_deactivate_not_all_lanes_checks;
  wire [2:0] tx_present_state_align;
  wire tx_parallel_valid;

  assign comma_not_aligned = ((|com_read_from_fifo[MAX_LINK_WIDTH - 1:0] &
                           ((com_read_from_fifo & active_lanes_bitmap) !==
                             active_lanes_bitmap) && phy_status === 1'b0) ||
                           (|masked_bitmap === 1'b1 && phy_status === 1'b1
                            && masked_bitmap !== link_width_bitmap));

  assign tx_comma_not_aligned = ((|tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] &
                           ((tx_com_read_from_fifo & tx_active_lanes_bitmap) !==
                             tx_active_lanes_bitmap) && phy_status === 1'b0) ||
                           (|tx_masked_bitmap === 1'b1 && phy_status === 1'b1
                            && tx_masked_bitmap !== link_width_bitmap));

  // Assert data_not_aligned only when compliance patterns are not
  // detected. Otherwise wait for 6 consecutive non alignments to
  // happen to conclude that data on the link is not aligned.
  // This is a change in the design of deciding on when the data is
  // not aligned. Earlier, as soon as a single non alignment was
  // seen, it was concluded that the link is not aligned.

  assign data_not_aligned = (next_state_align == NO_ALIGN_STATE &&
                           present_state_align != NO_ALIGN_STATE &&
                           latch_compliance_pattern_detected == 1'b0);

  assign tx_data_not_aligned = (tx_next_state_align == NO_ALIGN_STATE &&
                           tx_present_state_align != NO_ALIGN_STATE &&
                           tx_latch_compliance_pattern_detected == 1'b0);

  assign parallel_valid = (INTERFACE_TYPE) ? 1'b1 :
			  (valid_bit_count === 4'b1001);

  assign tx_parallel_valid = (INTERFACE_TYPE) ? 1'b1 :
			  (tx_valid_bit_count === 4'b1001);

  //-------------------  Muxes --------------------------------------
 
  assign latch_compliance_pattern_detected = (rx_level_select) ?
                   latch_compliance_pattern_detected_posedge :
                   latch_compliance_pattern_detected_negedge;

  assign present_state_align = (rx_level_select) ?
		   present_state_align_posedge :
		   present_state_align_negedge;

  assign tx_latch_compliance_pattern_detected = (tx_level_select) ?
                   tx_latch_compliance_pattern_detected_posedge :
                   tx_latch_compliance_pattern_detected_negedge;

  assign tx_present_state_align = (tx_level_select) ?
                   tx_present_state_align_posedge :
                   tx_present_state_align_negedge;

  //-----------------------------------------------------------------

`protected

    MTI!#XnsKJA<G8TIu>*jeXpx_}CT22pHX{PS7#*iBN|J{U7^s#ImxxBj{UE|1m+1!oUb}3n^9ejQ
    U'Xli}>IWia[xQ7wWu6GOVi#wKG5QR_wa!T1_~D$OD^3's?JVu@>5nOHemV2<V23E'z|[?QspTV3
    1AQ*O!ml1Z}{?Xu#(=_7G3rBo-s~T-=ZQRIURG1C'*i,=i=Z!v@,u7q#5D!n1'jiD]2-U*1vo,@;
    T@a^WR7AUAvS~^3IkTouk,Ojpxo$_'#',\\^]x<r2z7xxx^wRCji'!l~=_=;>|_a{a5(9m7#Ti<K
    -KX;jB_iJD$p!_RQo}G{*zTnOk-J?x}y=Oi?HY*K|A]zzr#y?}}$w5ij[V+1+sTH71>E251+^57$
    Bo\C-<=l~D5$I_=XE=k{$jGx,6T$j!FcY-T@ElJ!WG3{;QXI=RzWOX@nJv$w?A1eiaVRuln2*-p-
    nE[@fQ$uuB)5GeU*\#_B7sYvr\~Q+jGrStrv$*~a,Tu<};f11CA7>j{xnwnY2<<P9kr?kx^A_}Be
    x9Zp{G[QJK6\A^Kx35~HpXIr;xZo_TV_CVR+}n{x_WwVn;Qs]e>Y\!2^emAH<u*;VwX'k$^K$;lD
    '?xK\$Gq}7]A.DsQ$6bE5QzciI:L?'H<S4*0D?{,Wap7~piWk7G2}@T2(Y3HQu[Yk255\=zGYs?[
    {~n=B}K2n*mzER!*JKT7ZJ^_1F<z$B~$Dm,lAUW[{QG{Xsr-]X!plC1TU@I~~^}7*AC[G+Zop24v
    xi^;eAv1K5vQZ*w'jKxl^-vi1\u^s-kl}[O+*>1Vuu7oa3RJBC32xo5[UUsBs1$jQ$^xn<jH$u3Z
    I7ex#U5++R;IZ,Gx{2lwp~n{7}lyK_$mjJW3A>m=&Kw\Q2'\Qur$C=Zj]QWmHzBTeB23vYpV-~pQ
    W4_55v$uzBLvQ\#p!KAXXuQYv_>O->HW_T,ZY**{+]kg~e\TR\^,aGv\L|?|7JAGy>w~2SB+B~=i
    l$]Cn@=Q7
`endprotected
  //----------------------------------------------------------------------
  // Transmit deskew logic
  //----------------------------------------------------------------------

  // Assert tx_fifo_empty when any of the FIFOs are empty.

  assign tx_fifo_empty = 
	     ((phy_status === 1'b0 &&
	      |(tx_deskew_fifo_empty & tx_active_lanes_bitmap) === 1'b1 &&
	      |tx_active_lanes_bitmap === 1'b1) ||
              (phy_status === 1'b1 &&
	      |(tx_deskew_fifo_empty & link_width_bitmap) === 1'b1));

  // Flush the FIFOs when any of the fifo is full 

  assign tx_deskew_fifo_flush = 
	     ((|tx_deskew_fifo_full[MAX_LINK_WIDTH - 1:0] === 1'b1 && 
	       tx_com_read_from_all_lanes !== 1'b1 &&
	       tx_data_aligned === 1'b0 && tx_fifo_empty === 1'b1) ||
             (tx_data_aligned === 1'b0 && r_tx_data_aligned === 1'b1) ||
	     (|tx_deskew_fifo_full[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
	      tx_com_on_consecutive_lanes === 1'b0 &&
              |tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
               tx_data_aligned == 1'b0));

  assign tx_masked_bitmap = link_width_bitmap & tx_com_read_from_fifo;

  // tx_com_read_from_all_lanes is asserted only when COM is read from
  // all lanes of the active link or all active lanes.

  assign tx_com_read_from_all_lanes =
	      ((phy_status === 1'b0 &&
	       ((tx_com_read_from_fifo & tx_active_lanes_bitmap) ===
		 tx_active_lanes_bitmap) && |tx_active_lanes_bitmap === 1'b1) ||
               (phy_status === 1'b1 &&
		tx_masked_bitmap === link_width_bitmap));

  // Allignment is said to be complete when COM is read from all lanes.

  assign tx_deskew_fifo_read = (INTERFACE_TYPE === 1)?
		  tx_deskew_fifo_read_temp : 
		  (tx_deskew_fifo_read_temp && tx_valid_bit_count === 4'b1001);

  assign tx_deskew_fifo_read_temp = 
		((tx_data_aligned || tx_com_read_from_all_lanes) &&
		 tx_data_not_aligned === 1'b0);


  /* assign tx_data_not_aligned = 
	       ((|tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
		((tx_com_read_from_fifo & tx_active_lanes_bitmap) !==
		  tx_active_lanes_bitmap) && phy_status === 1'b0) ||
                (|tx_masked_bitmap === 1'b1 && phy_status === 1'b1 &&
		  tx_masked_bitmap !== link_width_bitmap));

  */

  // Check whenther COM is detected on consecutive lanes after deskew limit
  // is reached

  assign tx_com_on_consecutive_lanes = 
	       (|tx_deskew_fifo_full[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
		|tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1 &&
		(tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'h1 ||
		 tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'h3 ||
		 tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hF ||
		 tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hFF ||
		 tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hFFF ||
		 tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] == 32'hFFFF ||
		 (&tx_com_read_from_fifo[MAX_LINK_WIDTH - 1:0] === 1'b1))); 

  //-----------------------------------------------------------------------
  // Multiplexed signals for DOUBLE_DATA_RATE mode of operation.
  //-----------------------------------------------------------------------
 
  assign data_aligned = (rx_level_select) ?
                        data_aligned_posedge : data_aligned_negedge;
 
  assign r_data_aligned = (rx_level_select) ?
                        r_data_aligned_posedge : r_data_aligned_negedge;
 
  assign valid_bit_count = (rx_level_select) ?
                        valid_bit_count_posedge : valid_bit_count_negedge;

  assign active_lanes_bitmap = (rx_level_select) ?   
	  active_lanes_bitmap_posedge : active_lanes_bitmap_negedge;

  assign tx_data_aligned = (tx_level_select) ?
              tx_data_aligned_posedge : tx_data_aligned_negedge;

  assign r_tx_data_aligned = (tx_level_select) ?
	      r_tx_data_aligned_posedge : r_tx_data_aligned_negedge;

  assign tx_valid_bit_count = (tx_level_select) ?
	    tx_valid_bit_count_posedge : tx_valid_bit_count_negedge;

  assign tx_active_lanes_bitmap = (tx_level_select) ?
	      tx_active_lanes_bitmap_posedge : tx_active_lanes_bitmap_negedge;
 
`protected

    MTI!#lfy25UVd<>DUWD_JY_3niAj5see+_Am[MLU|"3Hx=FN7lK3'~=xL-};<>X<,/}2+?]11ru}
    12O@_re@U]7o/vp:wavTQKWwuBDzJX_iGW2{mQGr^TCBN+}?!{wura'@Q'\!sL25+kT,;<z}C~Qm
    1z7@oG_uU3=^2^L1@p~[B-uRB7?~>$G}}u\}\e,a7x@)[~j{vTZZ5Xs#&IExBe~JzBlKEz+xB~[]
    UJwA7XY]mzY#[}H^vB,Yw*Z<5@GJR'aVus@'wgZGmVJOe115iAE1Hk*_7>Oxza}1=r,XrsN*]7[z
    z~j73l5-=3}osmp?1wagY^p2=U_oUp}'?==uGoK[5a\,1$WeDAR$J$5u}JXO/.YnVZ*\'J]z#-ue
    YinH{{VI{>1=T!ei$pJE$+155Q*tEj'Ycw{Eux#IU,2Z';7DWHVAJr#x[!5I$eGei3waE-X$aH1}
    wGJ(8@,dT['E,jRDa5v[x]][z-W~Y?$O*Y}$sjsA~j3jQwT!X5zUD,OlHps[**QZ1R[HeAb~Row,
    +{?m}#BT$Sa$r<1;\U@sin{GpzNB<riKR\YzI[ABY]R2aY'gps[i<H5;xHj>j'?=El-=iBvQY?,D
    Q#-['}]oXs'~3aE2C1k}+[KAxxHoG=U^LBspz-YlA}J,2DnA?KvWjxU{]pBr[7>$kXOlunABUiUK
    D*KQ2j!xmDe!Kn}=7~<;3aR'C~^z+5_}_I}~X^-G1z}s<oKOHE71kJ<uO#1iopmr]35@_C9mRj@n
    DwnxkZ+9UrXnW^'5+{Tx$iGs5=j[5nBmZ_GZKp{^*k@>?<XGiDavX'za4X\[2o}B'1Jm\D[x$$T=
    7nv[<{V{K#+m>Tw]}kno\+n_7^voOVo,>xT7'x5Au4sED'^Gr^zUaK'riJpR?3CrOus-J{{Tz,K,
    }i\u$37>le!GJQ1_i_5^nx'e7WCTD+iE7BOC+ow_Ju/vrB]Kox?#[{pIROE7pE-YYmzITj>Qx'TK
    VXDC<<,d=;<1wYsJF7x{ln'Ri,3wx^+[!)o*A^vYk\;aT@MBQR$u<Rv}#DJjeW[i',\5K>TU'15R
    +~{C1$!O2CZi<[?)}#-;\a$<\s}^'#Z\?-^'^K^aA\J<k_5!y@<,ls1^UC;I#m\_#plV*_rA@43o
    _5]Y?@'WpDS5iGmI{>XUAW\?Hjr.FOxD}+ER?5;\uBk*GC{+>z1?v^j's,U]kGi5;^QX>m*n{j_u
    leaV5=}ZE$uBic;$^X7usXLR'i+QZj*[H~xBD2\Qra5b^njp_r\}5u2l,Ao<weG<yi_e@n,el^{,
    HpY@^x_WK,RT<D-2sxz,Z{R2^R>Gz?lvIo8u\kEC]2Aj-p]EQ*v#<s=;'uOE>zJG+x=D^=A]+zwm
    >vJ2vzK71V@Hjw!B}kGTh'T*BQmCJ%[*msAUHDB3_Dx!oC:woAGaw5_oe~K]*VuWwTo!oAwrCY#r
    z[o:<rGakG,X%D3!=#1$1$Va-e}OX]=XspnCuIjxelk!D3\2r?aE3]{oYI^VB,xoiZ-5$?jr!^wx
    +WsEWe}kwsxuoI3Y*nXzBxe*?U[_vK=<U_CnG,_a\V5_rwG7=n]oeK<UTGnRU\[7m0Rm'?nDvzFU
    7^px?YGCAlKlHVm5C~5*=,WsT@ub^QXT~6\}T=Xo#a;{~^OURr?I7Du}_Twapu#Bns;{apAlRJ]E
    TGj17K?<JX_v?k][]IX$>j>RelOl1HpA<,5\1U@B@@Dp[=m,wW7>n{*J!V_pjze<+-=C1VIIZEqx
    0GzC-?.rTu$N5UjZ,>DWZ$]#KQ=!DX2Gv22!E7DA]{J[{,<l+wKrA'?2i_ZJ*\kK'zV!:]OHQEWr
    ni5-p-I<=<Q$aEoG2+ax[]_I@+ha{j;$x-z$K1RB!]\RnHHC_1w^wei\^[n]RVaxmK#B;w>;5l7T
    Di}oV?E$]'=}TA2Xj^{sCwa8j_mCvwp~kBU*Ma>QBlaUxu$+E5u\[w,e'Hn+jHx[ey\C,l>e<^p>
    K{@vv$O#rzI2*r0YxpiG_Hpt.^$-nnl<oBvmvpG^~7r=ZJn[pT<_z=;>muD*lpB{X'~5~'WrAyzx
    2sBn[}wQna-}32&-C*~;1^QoVEOd^|)oErzxpI\IArre=5i?Elj,HATrm~1fUVpx->Q3P$*a'~Gz
    wYH$v_^1T@QDkK]a!QV7,84!*C=7?;nGTe}y#pX!|^BR\^>Y_<o5Wx1D2=&o3E2A1eu\<;!w+{Z@
    U*~{=C=~I}<f;vw+A[!^C3{X;]n@'>p30~>G-Cz$Xm^_B5RG[*OA}ol~eiGX2w<WaxR$[CT_^DpV
    #v5}[-R[UxnJjj[2\*OaVuzHIk>]2Vr\pB5Eji+1=Qox<-AjGB'u^*z_<G\p}E<wzn+=^E=jYupY
    3KsI!pU1#A'lZxvDW?En1momzGaImoOxH[?nm755_IYwp!}<v=e3aE#B*Y;p>p{oW3=+]ACV{xK!
    #1j}GTX>-3B;C/\K5'%EZ$Qu['wOZO+QxDp2QiTx,eVx'JKYVjEQKurw'Y<~nvpOr+wqDp-TU<oG
    6e@m'TCu,OxZWm]o^u=5r;R?sGn<mOjC{=nv[{}'Q;>{nD]B2?TUe?zY=,AGCFKnv1v#<ET,pD5p
    5?x<1TWlvQa-{3eejx,;Vi[;X!?v<p?w37URP}J^-dWR_T+pjQmBv\GS][$ZX[~J$ljwe7}pXso~
    W53z3CA!!1lm]bo2Bz$5nsKRwR*<rQX-3p'G=i=i;K5iOa=Pl3]mdi1Z[e"Ol+xx@=
`endprotected

  //-----------------------------------------------------------------
  // 10B/8B decoder module instantiations
  //-----------------------------------------------------------------

  qvl_pci_express_10b_8b_decoder #(
    /* Constraints_Mode */          Constraints_Mode,
    /* MAX_LINK_WIDTH */            MAX_LINK_WIDTH,
    /* TX_INTERFACE   */            1,
    /* DOUBLE_DATA_RATE */          DOUBLE_DATA_RATE)
    TX_DECODE (
	       .reset(reset),
	       .areset(areset),
	       .clk(tx_clk),
	       .level_select(tx_level_select),
	       .phy_layer_checks_disable(phy_layer_checks_disable),
	       .electrical_idle_detected(tx_eidle),
	       .pci_10b_data(tx_10b_data),
	       .pci_valid(tx_valid_code),
	       .pci_current_rd(tx_current_rd),

	       .pci_8b_data(tx_8b_decoded_data),
	       .pci_d_or_k_code(tx_d_or_k_code),
	       .pci_10b_code_violation(tx_10b_code_violation)
	       );

  qvl_pci_express_10b_8b_decoder #(
    /* Constraints_Mode */          Constraints_Mode,
    /* MAX_LINK_WIDTH */            MAX_LINK_WIDTH,
    /* TX_INTERFACE   */            0,
    /* DOUBLE_DATA_RATE */          DOUBLE_DATA_RATE)
    RX_DECODE (
	       .reset(reset),
	       .areset(areset),
	       .clk(rx_clk),
	       .level_select(rx_level_select),
	       .phy_layer_checks_disable(phy_layer_checks_disable),
	       .electrical_idle_detected(rx_eidle),
               .pci_10b_data(rx_10b_data), 
               .pci_valid(rx_valid_code), 
               .pci_current_rd(rx_current_rd),    
                
               .pci_8b_data(rx_8b_decoded_data),  
               .pci_d_or_k_code(rx_d_or_k_code),  
               .pci_10b_code_violation(rx_10b_code_violation) 
               ); 

  //-----------------------------------------------------------------
  // Lane receiver instantiations on transmit interface
  //-----------------------------------------------------------------

  // Lane 0

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode    */     Constraints_Mode,
    /* INTERFACE_TYPE      */    INTERFACE_TYPE,
    /* TX_INTERFACE        */    1, 
    /* PHY_LANE_NUMBER     */    0,
    /*DOUBLE_DATA_RATE     */    DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */    ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE00_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[0] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB0:LSB0]),
             .symbol_data_minus(int_tx_symbols_n[MSB0:LSB0]),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

	     .pci_8b_data(tx_8b_decoded_data[7:0]),
	     .pci_10b_code_violation_n(tx_10b_code_violation[0]),
	     .d_or_k_code(tx_d_or_k_code[0]),

	     .pci_10b_data(tx_10b_data[9:0]),
	     .parallel_symbol_valid(tx_valid_code[0]),
	     .current_rd(tx_current_rd[0]),

	     .deskew_fifo_read(tx_deskew_fifo_read),
	     .deskew_fifo_flush(tx_deskew_fifo_flush),
	     .com_read_from_fifo(tx_com_read_from_fifo[0]),
	     .fifo_almost_full(tx_deskew_fifo_full[0]),
	     .fifo_empty(tx_deskew_fifo_empty[0]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),  
  // PCI_EXPRESS_GEN2 code end	       
	     .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[7:0]),
             .link_number(link_number_tx[7:0]),
	     .lane_0_detected(tx_lane_0_detected[0]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[7:0]),
             .electrical_idle_detected(tx_eidle[0]),
	     .idle_data_detected(xmtd_idle_data[0]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[0]),
	     .eie_detected(xmtd_eie[0]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[0]),
             .idle_os_detected(xmtd_idle_os[0]),
             .fts_os_detected(xmtd_fts_os[0]),
             .ts1_detected(xmtd_ts1[0]),
             .ts2_detected(xmtd_ts2[0]),
             .lane_num_detected(xmtd_lane_num[0]),
             .link_num_detected(xmtd_link_num[0]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[0]),
             .gen2_data_rate_detected(xmtd_gen2[0]),
             .autonomous_data_rate_detected(xmtd_autonomous[0]),
             .speed_change_data_rate_detected(xmtd_speed_change[0]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[0]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[0]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[0]),
             .loopback_detected(xmtd_loopback[0]),
             .disable_detected(xmtd_disable[0]),
             .disable_scrambling_detected(xmtd_no_scramble[0]),
             .compliance_pattern_detected(xmtd_comp_pattern[0]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[0]),  
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 1

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode, 
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1, 
    /* PHY_LANE_NUMBER   */    1,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH, 
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE01_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[1] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB1:LSB1]),  
             .symbol_data_minus(int_tx_symbols_n[MSB1:LSB1]),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[15:8]), 
             .pci_10b_code_violation_n(tx_10b_code_violation[1]), 
             .d_or_k_code(tx_d_or_k_code[1]), 
              
             .pci_10b_data(tx_10b_data[19:10]), 
             .parallel_symbol_valid(tx_valid_code[1]),
             .current_rd(tx_current_rd[1]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[1]),
             .fifo_almost_full(tx_deskew_fifo_full[1]),
             .fifo_empty(tx_deskew_fifo_empty[1]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
 
             .descramble_enable(!disable_descramble), 
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[15:8]), 
             .link_number(link_number_tx[15:8]),
	     .lane_0_detected(tx_lane_0_detected[1]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[15:8]),
             .electrical_idle_detected(tx_eidle[1]),
	     .idle_data_detected(xmtd_idle_data[1]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[1]),
	     .eie_detected(xmtd_eie[1]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[1]),
             .idle_os_detected(xmtd_idle_os[1]),
             .fts_os_detected(xmtd_fts_os[1]),
             .ts1_detected(xmtd_ts1[1]),
             .ts2_detected(xmtd_ts2[1]),
             .lane_num_detected(xmtd_lane_num[1]),
             .link_num_detected(xmtd_link_num[1]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[1]),
             .gen2_data_rate_detected(xmtd_gen2[1]),
             .autonomous_data_rate_detected(xmtd_autonomous[1]),
             .speed_change_data_rate_detected(xmtd_speed_change[1]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[1]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[1]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[1]),
             .loopback_detected(xmtd_loopback[1]),
             .disable_detected(xmtd_disable[1]),
             .disable_scrambling_detected(xmtd_no_scramble[1]),
             .compliance_pattern_detected(xmtd_comp_pattern[1]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[1]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 2

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1, 
    /* PHY_LANE_NUMBER   */    2,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE02_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[2] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB2:LSB2]),  
             .symbol_data_minus(int_tx_symbols_n[MSB2:LSB2]),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[23:16]),               
             .pci_10b_code_violation_n(tx_10b_code_violation[2]),    
             .d_or_k_code(tx_d_or_k_code[2]),    
               
             .pci_10b_data(tx_10b_data[29:20]),  
             .parallel_symbol_valid(tx_valid_code[2]),    
             .current_rd(tx_current_rd[2]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[2]),
             .fifo_almost_full(tx_deskew_fifo_full[2]),
             .fifo_empty(tx_deskew_fifo_empty[2]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
 
             .descramble_enable(!disable_descramble), 
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[23:16]),
             .link_number(link_number_tx[23:16]),
	     .lane_0_detected(tx_lane_0_detected[2]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[23:16]),
             .electrical_idle_detected(tx_eidle[2]),
	     .idle_data_detected(xmtd_idle_data[2]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[2]),
	     .eie_detected(xmtd_eie[2]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[2]),
             .idle_os_detected(xmtd_idle_os[2]),
             .fts_os_detected(xmtd_fts_os[2]),
             .ts1_detected(xmtd_ts1[2]),
             .ts2_detected(xmtd_ts2[2]),
             .lane_num_detected(xmtd_lane_num[2]),
             .link_num_detected(xmtd_link_num[2]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[2]),
             .gen2_data_rate_detected(xmtd_gen2[2]),
             .autonomous_data_rate_detected(xmtd_autonomous[2]),
             .speed_change_data_rate_detected(xmtd_speed_change[2]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[2]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[2]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[2]),
             .loopback_detected(xmtd_loopback[2]),
             .disable_detected(xmtd_disable[2]),
             .disable_scrambling_detected(xmtd_no_scramble[2]),
             .compliance_pattern_detected(xmtd_comp_pattern[2]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[2]),    
	     .compliance_check_enable(compliance_check_enable)
             );

   // Lane 3

   qvl_pci_express_lane_receiver #( 
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,  
    /* PHY_LANE_NUMBER   */    3,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE03_TX ( 
             .reset(reset), 
             .areset(areset), 
  
             .clk(tx_clk_gate_lane[3] & tx_clk), 
             .symbol_data_plus(int_tx_symbols_p[MSB3:LSB3]),   
             .symbol_data_minus(int_tx_symbols_n[MSB3:LSB3]), 

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[31:24]),                
             .pci_10b_code_violation_n(tx_10b_code_violation[3]),       
             .d_or_k_code(tx_d_or_k_code[3]),     
                 
             .pci_10b_data(tx_10b_data[39:30]),     
             .parallel_symbol_valid(tx_valid_code[3]),     
             .current_rd(tx_current_rd[3]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[3]),
             .fifo_almost_full(tx_deskew_fifo_full[3]),
             .fifo_empty(tx_deskew_fifo_empty[3]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),  	
  // PCI_EXPRESS_GEN2 code end		
             .deskew_d_or_k_code(),
  
             .descramble_enable(!disable_descramble),  
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[31:24]),
             .link_number(link_number_tx[31:24]), 
	     .lane_0_detected(tx_lane_0_detected[3]),
             .dllp_tlp_on_link(xmting_dllp_tlp),  
             .descrambled_data(tx_descrambled_data[31:24]), 
             .electrical_idle_detected(tx_eidle[3]), 
	     .idle_data_detected(xmtd_idle_data[3]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[3]),
             .eie_detected(xmtd_eie[3]),		
  // PCI_EXPRESS_GEN2 code end		
             .skp_os_detected(xmtd_skp_os[3]),    
             .idle_os_detected(xmtd_idle_os[3]),  
             .fts_os_detected(xmtd_fts_os[3]),    
             .ts1_detected(xmtd_ts1[3]),  
             .ts2_detected(xmtd_ts2[3]),  
             .lane_num_detected(xmtd_lane_num[3]), 
             .link_num_detected(xmtd_link_num[3]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[3]),
             .gen2_data_rate_detected(xmtd_gen2[3]),
             .autonomous_data_rate_detected(xmtd_autonomous[3]),
             .speed_change_data_rate_detected(xmtd_speed_change[3]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[3]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[3]),
  // PCI_EXPRESS_GEN2 code end		
             .link_ctrl_reset_detected(xmtd_reset[3]),    
             .loopback_detected(xmtd_loopback[3]),   
             .disable_detected(xmtd_disable[3]),  
             .disable_scrambling_detected(xmtd_no_scramble[3]),   
             .compliance_pattern_detected(xmtd_comp_pattern[3]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[3]),  	
	     .compliance_check_enable(compliance_check_enable)
             );


  // Lane 4

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    4,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE04_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[4] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB4:LSB4]),
             .symbol_data_minus(int_tx_symbols_n[MSB4:LSB4]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[39:32]),
             .pci_10b_code_violation_n(tx_10b_code_violation[4]),
             .d_or_k_code(tx_d_or_k_code[4]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[4]),
             .fifo_almost_full(tx_deskew_fifo_full[4]),
             .fifo_empty(tx_deskew_fifo_empty[4]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .pci_10b_data(tx_10b_data[49:40]),
             .parallel_symbol_valid(tx_valid_code[4]),
             .current_rd(tx_current_rd[4]),
             .n_fts(tx_n_fts[39:32]), 
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
             .link_number(link_number_tx[39:32]),
	     .lane_0_detected(tx_lane_0_detected[4]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[39:32]),
             .electrical_idle_detected(tx_eidle[4]),
             .idle_data_detected(xmtd_idle_data[4]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[4]),
	     .eie_detected(xmtd_eie[4]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[4]),
             .idle_os_detected(xmtd_idle_os[4]),
             .fts_os_detected(xmtd_fts_os[4]),
             .ts1_detected(xmtd_ts1[4]),
             .ts2_detected(xmtd_ts2[4]),
             .lane_num_detected(xmtd_lane_num[4]),
             .link_num_detected(xmtd_link_num[4]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[4]),
             .gen2_data_rate_detected(xmtd_gen2[4]),
             .autonomous_data_rate_detected(xmtd_autonomous[4]),
             .speed_change_data_rate_detected(xmtd_speed_change[4]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[4]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[4]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[4]),
             .loopback_detected(xmtd_loopback[4]),
             .disable_detected(xmtd_disable[4]),
             .disable_scrambling_detected(xmtd_no_scramble[4]),
             .compliance_pattern_detected(xmtd_comp_pattern[4]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[4]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 5

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    5,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE05_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[5] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB5:LSB5]),
             .symbol_data_minus(int_tx_symbols_n[MSB5:LSB5]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[47:40]),
             .pci_10b_code_violation_n(tx_10b_code_violation[5]),
             .d_or_k_code(tx_d_or_k_code[5]),

             .pci_10b_data(tx_10b_data[59:50]),
             .parallel_symbol_valid(tx_valid_code[5]),
             .current_rd(tx_current_rd[5]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[5]),
             .fifo_almost_full(tx_deskew_fifo_full[5]),
             .fifo_empty(tx_deskew_fifo_empty[5]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
   
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[47:40]),
             .link_number(link_number_tx[47:40]),
	     .lane_0_detected(tx_lane_0_detected[5]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[47:40]),
             .electrical_idle_detected(tx_eidle[5]),
             .idle_data_detected(xmtd_idle_data[5]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[5]),
	     .eie_detected(xmtd_eie[5]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[5]),
             .idle_os_detected(xmtd_idle_os[5]),
             .fts_os_detected(xmtd_fts_os[5]),
             .ts1_detected(xmtd_ts1[5]),
             .ts2_detected(xmtd_ts2[5]),
             .lane_num_detected(xmtd_lane_num[5]),
             .link_num_detected(xmtd_link_num[5]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[5]),
             .gen2_data_rate_detected(xmtd_gen2[5]),
             .autonomous_data_rate_detected(xmtd_autonomous[5]),
             .speed_change_data_rate_detected(xmtd_speed_change[5]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[5]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[5]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[5]),
             .loopback_detected(xmtd_loopback[5]),
             .disable_detected(xmtd_disable[5]),
             .disable_scrambling_detected(xmtd_no_scramble[5]),
             .compliance_pattern_detected(xmtd_comp_pattern[5]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[5]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 6

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    6,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE06_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[6] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB6:LSB6]),
             .symbol_data_minus(int_tx_symbols_n[MSB6:LSB6]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[55:48]),
             .pci_10b_code_violation_n(tx_10b_code_violation[6]),
             .d_or_k_code(tx_d_or_k_code[6]),

             .pci_10b_data(tx_10b_data[69:60]),
             .parallel_symbol_valid(tx_valid_code[6]),
             .current_rd(tx_current_rd[6]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[6]),
             .fifo_almost_full(tx_deskew_fifo_full[6]),
             .fifo_empty(tx_deskew_fifo_empty[6]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
   
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[55:48]),
             .link_number(link_number_tx[55:48]),
	     .lane_0_detected(tx_lane_0_detected[6]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[55:48]),
             .electrical_idle_detected(tx_eidle[6]),
             .idle_data_detected(xmtd_idle_data[6]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[6]),
	     .eie_detected(xmtd_eie[6]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[6]),
             .idle_os_detected(xmtd_idle_os[6]),
             .fts_os_detected(xmtd_fts_os[6]),
             .ts1_detected(xmtd_ts1[6]),
             .ts2_detected(xmtd_ts2[6]),
             .lane_num_detected(xmtd_lane_num[6]),
             .link_num_detected(xmtd_link_num[6]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[6]),
             .gen2_data_rate_detected(xmtd_gen2[6]),
             .autonomous_data_rate_detected(xmtd_autonomous[6]),
             .speed_change_data_rate_detected(xmtd_speed_change[6]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[6]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[6]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[6]),
             .loopback_detected(xmtd_loopback[6]),
             .disable_detected(xmtd_disable[6]),
             .disable_scrambling_detected(xmtd_no_scramble[6]),
             .compliance_pattern_detected(xmtd_comp_pattern[6]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[6]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 7

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    7,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE07_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[7] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB7:LSB7]),
             .symbol_data_minus(int_tx_symbols_n[MSB7:LSB7]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[63:56]),
             .pci_10b_code_violation_n(tx_10b_code_violation[7]),
             .d_or_k_code(tx_d_or_k_code[7]),

             .pci_10b_data(tx_10b_data[79:70]),
             .parallel_symbol_valid(tx_valid_code[7]),
             .current_rd(tx_current_rd[7]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[7]),
             .fifo_almost_full(tx_deskew_fifo_full[7]),
             .fifo_empty(tx_deskew_fifo_empty[7]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
   
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[63:56]),
             .link_number(link_number_tx[63:56]),
	     .lane_0_detected(tx_lane_0_detected[7]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[63:56]),
             .electrical_idle_detected(tx_eidle[7]),
             .idle_data_detected(xmtd_idle_data[7]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[7]),
	     .eie_detected(xmtd_eie[7]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[7]),
             .idle_os_detected(xmtd_idle_os[7]),
             .fts_os_detected(xmtd_fts_os[7]),
             .ts1_detected(xmtd_ts1[7]),
             .ts2_detected(xmtd_ts2[7]),
             .lane_num_detected(xmtd_lane_num[7]),
             .link_num_detected(xmtd_link_num[7]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[7]),
             .gen2_data_rate_detected(xmtd_gen2[7]),
             .autonomous_data_rate_detected(xmtd_autonomous[7]),
             .speed_change_data_rate_detected(xmtd_speed_change[7]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[7]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[7]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[7]),
             .loopback_detected(xmtd_loopback[7]),
             .disable_detected(xmtd_disable[7]),
             .disable_scrambling_detected(xmtd_no_scramble[7]),
             .compliance_pattern_detected(xmtd_comp_pattern[7]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[7]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 8

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    8,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE08_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[8] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB8:LSB8]),
             .symbol_data_minus(int_tx_symbols_n[MSB8:LSB8]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[71:64]),
             .pci_10b_code_violation_n(tx_10b_code_violation[8]),
             .d_or_k_code(tx_d_or_k_code[8]),

             .pci_10b_data(tx_10b_data[89:80]),
             .parallel_symbol_valid(tx_valid_code[8]),
             .current_rd(tx_current_rd[8]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[8]),
             .fifo_almost_full(tx_deskew_fifo_full[8]),
             .fifo_empty(tx_deskew_fifo_empty[8]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[71:64]),
             .link_number(link_number_tx[71:64]),
             .lane_0_detected(tx_lane_0_detected[8]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[71:64]),
             .electrical_idle_detected(tx_eidle[8]),
             .idle_data_detected(xmtd_idle_data[8]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[8]),
	     .eie_detected(xmtd_eie[8]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[8]),
             .idle_os_detected(xmtd_idle_os[8]),
             .fts_os_detected(xmtd_fts_os[8]),
             .ts1_detected(xmtd_ts1[8]),
             .ts2_detected(xmtd_ts2[8]),
             .lane_num_detected(xmtd_lane_num[8]),
             .link_num_detected(xmtd_link_num[8]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[8]),
             .gen2_data_rate_detected(xmtd_gen2[8]),
             .autonomous_data_rate_detected(xmtd_autonomous[8]),
             .speed_change_data_rate_detected(xmtd_speed_change[8]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[8]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[8]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[8]),
             .loopback_detected(xmtd_loopback[8]),
             .disable_detected(xmtd_disable[8]),
             .disable_scrambling_detected(xmtd_no_scramble[8]),
             .compliance_pattern_detected(xmtd_comp_pattern[8]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[8]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 9

 qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    9,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE09_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[9] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB9:LSB9]),
             .symbol_data_minus(int_tx_symbols_n[MSB9:LSB9]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[79:72]),
             .pci_10b_code_violation_n(tx_10b_code_violation[9]),
             .d_or_k_code(tx_d_or_k_code[9]),

             .pci_10b_data(tx_10b_data[99:90]),
             .parallel_symbol_valid(tx_valid_code[9]),
             .current_rd(tx_current_rd[9]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[9]),
             .fifo_almost_full(tx_deskew_fifo_full[9]),
             .fifo_empty(tx_deskew_fifo_empty[9]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[79:72]),
             .link_number(link_number_tx[79:72]),
             .lane_0_detected(tx_lane_0_detected[9]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[79:72]),
             .electrical_idle_detected(tx_eidle[9]),
             .idle_data_detected(xmtd_idle_data[9]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[9]),
	     .eie_detected(xmtd_eie[9]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[9]),
             .idle_os_detected(xmtd_idle_os[9]),
             .fts_os_detected(xmtd_fts_os[9]),
             .ts1_detected(xmtd_ts1[9]),
             .ts2_detected(xmtd_ts2[9]),
             .lane_num_detected(xmtd_lane_num[9]),
             .link_num_detected(xmtd_link_num[9]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[9]),
             .gen2_data_rate_detected(xmtd_gen2[9]),
             .autonomous_data_rate_detected(xmtd_autonomous[9]),
             .speed_change_data_rate_detected(xmtd_speed_change[9]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[9]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[9]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[9]),
             .loopback_detected(xmtd_loopback[9]),
             .disable_detected(xmtd_disable[9]),
             .disable_scrambling_detected(xmtd_no_scramble[9]),
             .compliance_pattern_detected(xmtd_comp_pattern[9]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[9]),    
	     .compliance_check_enable(compliance_check_enable)
             ); 

  // Lane 10

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    10,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE10_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[10] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB10:LSB10]),
             .symbol_data_minus(int_tx_symbols_n[MSB10:LSB10]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[87:80]),
             .pci_10b_code_violation_n(tx_10b_code_violation[10]),
             .d_or_k_code(tx_d_or_k_code[10]),

             .pci_10b_data(tx_10b_data[109:100]),
             .parallel_symbol_valid(tx_valid_code[10]),
             .current_rd(tx_current_rd[10]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[10]),
             .fifo_almost_full(tx_deskew_fifo_full[10]),
             .fifo_empty(tx_deskew_fifo_empty[10]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[87:80]),
             .link_number(link_number_tx[87:80]),
             .lane_0_detected(tx_lane_0_detected[10]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[87:80]),
             .electrical_idle_detected(tx_eidle[10]),
             .idle_data_detected(xmtd_idle_data[10]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[10]),
	     .eie_detected(xmtd_eie[10]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[10]),
             .idle_os_detected(xmtd_idle_os[10]),
             .fts_os_detected(xmtd_fts_os[10]),
             .ts1_detected(xmtd_ts1[10]),
             .ts2_detected(xmtd_ts2[10]),
             .lane_num_detected(xmtd_lane_num[10]),
             .link_num_detected(xmtd_link_num[10]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[10]),
             .gen2_data_rate_detected(xmtd_gen2[10]),
             .autonomous_data_rate_detected(xmtd_autonomous[10]),
             .speed_change_data_rate_detected(xmtd_speed_change[10]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[10]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[10]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[10]),
             .loopback_detected(xmtd_loopback[10]),
             .disable_detected(xmtd_disable[10]),
             .disable_scrambling_detected(xmtd_no_scramble[10]),
             .compliance_pattern_detected(xmtd_comp_pattern[10]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[10]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 11

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    11,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE11_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[11] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB11:LSB11]),
             .symbol_data_minus(int_tx_symbols_n[MSB11:LSB11]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[95:88]),
             .pci_10b_code_violation_n(tx_10b_code_violation[11]),
             .d_or_k_code(tx_d_or_k_code[11]),

             .pci_10b_data(tx_10b_data[119:110]),
             .parallel_symbol_valid(tx_valid_code[11]),
             .current_rd(tx_current_rd[11]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[11]),
             .fifo_almost_full(tx_deskew_fifo_full[11]),
             .fifo_empty(tx_deskew_fifo_empty[11]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[95:88]),
             .link_number(link_number_tx[95:88]),
             .lane_0_detected(tx_lane_0_detected[11]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[95:88]),
             .electrical_idle_detected(tx_eidle[11]),
             .idle_data_detected(xmtd_idle_data[11]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[11]),
	     .eie_detected(xmtd_eie[11]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[11]),
             .idle_os_detected(xmtd_idle_os[11]),
             .fts_os_detected(xmtd_fts_os[11]),
             .ts1_detected(xmtd_ts1[11]),
             .ts2_detected(xmtd_ts2[11]),
             .lane_num_detected(xmtd_lane_num[11]),
             .link_num_detected(xmtd_link_num[11]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[11]),
             .gen2_data_rate_detected(xmtd_gen2[11]),
             .autonomous_data_rate_detected(xmtd_autonomous[11]),
             .speed_change_data_rate_detected(xmtd_speed_change[11]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[11]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[11]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[11]),
             .loopback_detected(xmtd_loopback[11]),
             .disable_detected(xmtd_disable[11]),
             .disable_scrambling_detected(xmtd_no_scramble[11]),
             .compliance_pattern_detected(xmtd_comp_pattern[11]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[11]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 12
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    12,
    /* DOUBLE_DATA_RATE   */   DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE12_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[12] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB12:LSB12]),
             .symbol_data_minus(int_tx_symbols_n[MSB12:LSB12]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[103:96]),
             .pci_10b_code_violation_n(tx_10b_code_violation[12]),
             .d_or_k_code(tx_d_or_k_code[12]),
 
             .pci_10b_data(tx_10b_data[129:120]),
             .parallel_symbol_valid(tx_valid_code[12]),
             .current_rd(tx_current_rd[12]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[12]),
             .fifo_almost_full(tx_deskew_fifo_full[12]),
             .fifo_empty(tx_deskew_fifo_empty[12]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[103:96]),
             .link_number(link_number_tx[103:96]),
             .lane_0_detected(tx_lane_0_detected[12]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[103:96]),
             .electrical_idle_detected(tx_eidle[12]),
             .idle_data_detected(xmtd_idle_data[12]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[12]),
	     .eie_detected(xmtd_eie[12]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[12]),
             .idle_os_detected(xmtd_idle_os[12]),
             .fts_os_detected(xmtd_fts_os[12]),
             .ts1_detected(xmtd_ts1[12]),
             .ts2_detected(xmtd_ts2[12]),
             .lane_num_detected(xmtd_lane_num[12]),
             .link_num_detected(xmtd_link_num[12]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[12]),
             .gen2_data_rate_detected(xmtd_gen2[12]),
             .autonomous_data_rate_detected(xmtd_autonomous[12]),
             .speed_change_data_rate_detected(xmtd_speed_change[12]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[12]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[12]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[12]),
             .loopback_detected(xmtd_loopback[12]),
             .disable_detected(xmtd_disable[12]),
             .disable_scrambling_detected(xmtd_no_scramble[12]),
             .compliance_pattern_detected(xmtd_comp_pattern[12]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[12]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 13
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    13,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE13_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[13] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB13:LSB13]),
             .symbol_data_minus(int_tx_symbols_n[MSB13:LSB13]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[111:104]),
             .pci_10b_code_violation_n(tx_10b_code_violation[13]),
             .d_or_k_code(tx_d_or_k_code[13]),
 
             .pci_10b_data(tx_10b_data[139:130]),
             .parallel_symbol_valid(tx_valid_code[13]),
             .current_rd(tx_current_rd[13]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[13]),
             .fifo_almost_full(tx_deskew_fifo_full[13]),
             .fifo_empty(tx_deskew_fifo_empty[13]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[111:104]),
             .link_number(link_number_tx[111:104]),
             .lane_0_detected(tx_lane_0_detected[13]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[111:104]),
             .electrical_idle_detected(tx_eidle[13]),
             .idle_data_detected(xmtd_idle_data[13]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[13]),
	     .eie_detected(xmtd_eie[13]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[13]),
             .idle_os_detected(xmtd_idle_os[13]),
             .fts_os_detected(xmtd_fts_os[13]),
             .ts1_detected(xmtd_ts1[13]),
             .ts2_detected(xmtd_ts2[13]),
             .lane_num_detected(xmtd_lane_num[13]),
             .link_num_detected(xmtd_link_num[13]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[13]),
             .gen2_data_rate_detected(xmtd_gen2[13]),
             .autonomous_data_rate_detected(xmtd_autonomous[13]),
             .speed_change_data_rate_detected(xmtd_speed_change[13]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[13]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[13]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[13]),
             .loopback_detected(xmtd_loopback[13]),
             .disable_detected(xmtd_disable[13]),
             .disable_scrambling_detected(xmtd_no_scramble[13]),
             .compliance_pattern_detected(xmtd_comp_pattern[13]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[13]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 14
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    14,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE14_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[14] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB14:LSB14]),
             .symbol_data_minus(int_tx_symbols_n[MSB14:LSB14]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[119:112]),
             .pci_10b_code_violation_n(tx_10b_code_violation[14]),
             .d_or_k_code(tx_d_or_k_code[14]),  
 
             .pci_10b_data(tx_10b_data[149:140]),
             .parallel_symbol_valid(tx_valid_code[14]),    
             .current_rd(tx_current_rd[14]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[14]),
             .fifo_almost_full(tx_deskew_fifo_full[14]),
             .fifo_empty(tx_deskew_fifo_empty[14]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[119:112]),
             .link_number(link_number_tx[119:112]),
             .lane_0_detected(tx_lane_0_detected[14]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[119:112]),
             .electrical_idle_detected(tx_eidle[14]),
             .idle_data_detected(xmtd_idle_data[14]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[14]),
	     .eie_detected(xmtd_eie[14]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[14]), 
             .idle_os_detected(xmtd_idle_os[14]),
             .fts_os_detected(xmtd_fts_os[14]), 
             .ts1_detected(xmtd_ts1[14]),
             .ts2_detected(xmtd_ts2[14]),
             .lane_num_detected(xmtd_lane_num[14]),
             .link_num_detected(xmtd_link_num[14]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[14]),
             .gen2_data_rate_detected(xmtd_gen2[14]),
             .autonomous_data_rate_detected(xmtd_autonomous[14]),
             .speed_change_data_rate_detected(xmtd_speed_change[14]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[14]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[14]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[14]),
             .loopback_detected(xmtd_loopback[14]),
             .disable_detected(xmtd_disable[14]),
             .disable_scrambling_detected(xmtd_no_scramble[14]),
             .compliance_pattern_detected(xmtd_comp_pattern[14]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[14]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 15
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    15,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE15_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[15] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB15:LSB15]),
             .symbol_data_minus(int_tx_symbols_n[MSB15:LSB15]),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[127:120]),
             .pci_10b_code_violation_n(tx_10b_code_violation[15]),
             .d_or_k_code(tx_d_or_k_code[15]),  
 
             .pci_10b_data(tx_10b_data[159:150]),
             .parallel_symbol_valid(tx_valid_code[15]),    
             .current_rd(tx_current_rd[15]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[15]),
             .fifo_almost_full(tx_deskew_fifo_full[15]),
             .fifo_empty(tx_deskew_fifo_empty[15]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[127:120]),
             .link_number(link_number_tx[127:120]),
             .lane_0_detected(tx_lane_0_detected[15]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[127:120]),
             .electrical_idle_detected(tx_eidle[15]),
             .idle_data_detected(xmtd_idle_data[15]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[15]),
	     .eie_detected(xmtd_eie[15]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[15]), 
             .idle_os_detected(xmtd_idle_os[15]),
             .fts_os_detected(xmtd_fts_os[15]), 
             .ts1_detected(xmtd_ts1[15]),
             .ts2_detected(xmtd_ts2[15]),
             .lane_num_detected(xmtd_lane_num[15]),
             .link_num_detected(xmtd_link_num[15]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[15]),
             .gen2_data_rate_detected(xmtd_gen2[15]),
             .autonomous_data_rate_detected(xmtd_autonomous[15]),
             .speed_change_data_rate_detected(xmtd_speed_change[15]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[15]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[15]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[15]),
             .loopback_detected(xmtd_loopback[15]),
             .disable_detected(xmtd_disable[15]),
             .disable_scrambling_detected(xmtd_no_scramble[15]),
             .compliance_pattern_detected(xmtd_comp_pattern[15]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[15]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 16

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    16,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE16_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[16] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB16:LSB16]),
             .symbol_data_minus(int_tx_symbols_n[MSB16:LSB16]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[135:128]),
             .pci_10b_code_violation_n(tx_10b_code_violation[16]),
             .d_or_k_code(tx_d_or_k_code[16]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[16]),
             .fifo_almost_full(tx_deskew_fifo_full[16]),
             .fifo_empty(tx_deskew_fifo_empty[16]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .pci_10b_data(tx_10b_data[169:160]),
             .parallel_symbol_valid(tx_valid_code[16]),
             .current_rd(tx_current_rd[16]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[135:128]),
             .link_number(link_number_tx[135:128]),
             .lane_0_detected(tx_lane_0_detected[16]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[135:128]),
             .electrical_idle_detected(tx_eidle[16]),
             .idle_data_detected(xmtd_idle_data[16]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[16]),
	     .eie_detected(xmtd_eie[16]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[16]),
             .idle_os_detected(xmtd_idle_os[16]),
             .fts_os_detected(xmtd_fts_os[16]),
             .ts1_detected(xmtd_ts1[16]),
             .ts2_detected(xmtd_ts2[16]),
             .lane_num_detected(xmtd_lane_num[16]),
             .link_num_detected(xmtd_link_num[16]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[16]),
             .gen2_data_rate_detected(xmtd_gen2[16]),
             .autonomous_data_rate_detected(xmtd_autonomous[16]),
             .speed_change_data_rate_detected(xmtd_speed_change[16]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[16]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[16]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[16]),
             .loopback_detected(xmtd_loopback[16]),
             .disable_detected(xmtd_disable[16]),
             .disable_scrambling_detected(xmtd_no_scramble[16]),
             .compliance_pattern_detected(xmtd_comp_pattern[16]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[16]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 17

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    17,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE17_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[17] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB17:LSB17]),
             .symbol_data_minus(int_tx_symbols_n[MSB17:LSB17]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[143:136]),
             .pci_10b_code_violation_n(tx_10b_code_violation[17]),
             .d_or_k_code(tx_d_or_k_code[17]),

             .pci_10b_data(tx_10b_data[179:170]),
             .parallel_symbol_valid(tx_valid_code[17]),
             .current_rd(tx_current_rd[17]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[17]),
             .fifo_almost_full(tx_deskew_fifo_full[17]),
             .fifo_empty(tx_deskew_fifo_empty[17]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[143:136]),
             .link_number(link_number_tx[143:136]),
             .lane_0_detected(tx_lane_0_detected[17]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[143:136]),
             .electrical_idle_detected(tx_eidle[17]),
             .idle_data_detected(xmtd_idle_data[17]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[17]),
	     .eie_detected(xmtd_eie[17]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[17]),
             .idle_os_detected(xmtd_idle_os[17]),
             .fts_os_detected(xmtd_fts_os[17]),
             .ts1_detected(xmtd_ts1[17]),
             .ts2_detected(xmtd_ts2[17]),
             .lane_num_detected(xmtd_lane_num[17]),
             .link_num_detected(xmtd_link_num[17]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[17]),
             .gen2_data_rate_detected(xmtd_gen2[17]),
             .autonomous_data_rate_detected(xmtd_autonomous[17]),
             .speed_change_data_rate_detected(xmtd_speed_change[17]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[17]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[17]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[17]),
             .loopback_detected(xmtd_loopback[17]),
             .disable_detected(xmtd_disable[17]),
             .disable_scrambling_detected(xmtd_no_scramble[17]),
             .compliance_pattern_detected(xmtd_comp_pattern[17]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[17]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 18

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    18,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE18_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[18] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB18:LSB18]),
             .symbol_data_minus(int_tx_symbols_n[MSB18:LSB18]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[151:144]),
             .pci_10b_code_violation_n(tx_10b_code_violation[18]),
             .d_or_k_code(tx_d_or_k_code[18]),

             .pci_10b_data(tx_10b_data[189:180]),
             .parallel_symbol_valid(tx_valid_code[18]),
             .current_rd(tx_current_rd[18]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[18]),
             .fifo_almost_full(tx_deskew_fifo_full[18]),
             .fifo_empty(tx_deskew_fifo_empty[18]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[151:144]), 
             .link_number(link_number_tx[151:144]),
             .lane_0_detected(tx_lane_0_detected[18]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[151:144]),
             .electrical_idle_detected(tx_eidle[18]),
             .idle_data_detected(xmtd_idle_data[18]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[18]),
	     .eie_detected(xmtd_eie[18]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[18]),
             .idle_os_detected(xmtd_idle_os[18]),
             .fts_os_detected(xmtd_fts_os[18]),
             .ts1_detected(xmtd_ts1[18]),
             .ts2_detected(xmtd_ts2[18]),
             .lane_num_detected(xmtd_lane_num[18]),
             .link_num_detected(xmtd_link_num[18]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[18]),
             .gen2_data_rate_detected(xmtd_gen2[18]),
             .autonomous_data_rate_detected(xmtd_autonomous[18]),
             .speed_change_data_rate_detected(xmtd_speed_change[18]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[18]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[18]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[18]),
             .loopback_detected(xmtd_loopback[18]),
             .disable_detected(xmtd_disable[18]),
             .disable_scrambling_detected(xmtd_no_scramble[18]),
             .compliance_pattern_detected(xmtd_comp_pattern[18]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[18]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 19

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    19,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK*/ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE19_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[19] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB19:LSB19]),
             .symbol_data_minus(int_tx_symbols_n[MSB19:LSB19]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[159:152]),
             .pci_10b_code_violation_n(tx_10b_code_violation[19]),
             .d_or_k_code(tx_d_or_k_code[19]),

             .pci_10b_data(tx_10b_data[199:190]),
             .parallel_symbol_valid(tx_valid_code[19]),
             .current_rd(tx_current_rd[19]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[19]),
             .fifo_almost_full(tx_deskew_fifo_full[19]),
             .fifo_empty(tx_deskew_fifo_empty[19]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[159:152]),
             .link_number(link_number_tx[159:152]),
             .lane_0_detected(tx_lane_0_detected[19]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[159:152]),
             .electrical_idle_detected(tx_eidle[19]),
             .idle_data_detected(xmtd_idle_data[19]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[19]),
	     .eie_detected(xmtd_eie[19]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[19]),
             .idle_os_detected(xmtd_idle_os[19]),
             .fts_os_detected(xmtd_fts_os[19]),
             .ts1_detected(xmtd_ts1[19]),
             .ts2_detected(xmtd_ts2[19]),
             .lane_num_detected(xmtd_lane_num[19]),
             .link_num_detected(xmtd_link_num[19]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[19]),
             .gen2_data_rate_detected(xmtd_gen2[19]),
             .autonomous_data_rate_detected(xmtd_autonomous[19]),
             .speed_change_data_rate_detected(xmtd_speed_change[19]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[19]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[19]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[19]),
             .loopback_detected(xmtd_loopback[19]),
             .disable_detected(xmtd_disable[19]),
             .disable_scrambling_detected(xmtd_no_scramble[19]),
             .compliance_pattern_detected(xmtd_comp_pattern[19]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[19]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 20

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    20,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE20_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[20] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB20:LSB20]),
             .symbol_data_minus(int_tx_symbols_n[MSB20:LSB20]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[167:160]),
             .pci_10b_code_violation_n(tx_10b_code_violation[20]),
             .d_or_k_code(tx_d_or_k_code[20]),

             .pci_10b_data(tx_10b_data[209:200]),
             .parallel_symbol_valid(tx_valid_code[20]),
             .current_rd(tx_current_rd[20]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[20]),
             .fifo_almost_full(tx_deskew_fifo_full[20]),
             .fifo_empty(tx_deskew_fifo_empty[20]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[167:160]),
             .link_number(link_number_tx[167:160]),
             .lane_0_detected(tx_lane_0_detected[20]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[167:160]),
             .electrical_idle_detected(tx_eidle[20]),
             .idle_data_detected(xmtd_idle_data[20]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[20]),
	     .eie_detected(xmtd_eie[20]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[20]),
             .idle_os_detected(xmtd_idle_os[20]),
             .fts_os_detected(xmtd_fts_os[20]),
             .ts1_detected(xmtd_ts1[20]),
             .ts2_detected(xmtd_ts2[20]),
             .lane_num_detected(xmtd_lane_num[20]),
             .link_num_detected(xmtd_link_num[20]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[20]),
             .gen2_data_rate_detected(xmtd_gen2[20]),
             .autonomous_data_rate_detected(xmtd_autonomous[20]),
             .speed_change_data_rate_detected(xmtd_speed_change[20]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[20]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[20]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[20]),
             .loopback_detected(xmtd_loopback[20]),
             .disable_detected(xmtd_disable[20]),
             .disable_scrambling_detected(xmtd_no_scramble[20]),
             .compliance_pattern_detected(xmtd_comp_pattern[20]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[20]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 21

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    21,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE21_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[21] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB21:LSB21]),
             .symbol_data_minus(int_tx_symbols_n[MSB21:LSB21]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[175:168]),
             .pci_10b_code_violation_n(tx_10b_code_violation[21]),
             .d_or_k_code(tx_d_or_k_code[21]),

             .pci_10b_data(tx_10b_data[219:210]),
             .parallel_symbol_valid(tx_valid_code[21]),
             .current_rd(tx_current_rd[21]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[21]),
             .fifo_almost_full(tx_deskew_fifo_full[21]),
             .fifo_empty(tx_deskew_fifo_empty[21]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[175:168]),
             .link_number(link_number_tx[175:168]),
             .lane_0_detected(tx_lane_0_detected[21]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[175:168]),
             .electrical_idle_detected(tx_eidle[21]),
             .idle_data_detected(xmtd_idle_data[21]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[21]),
	     .eie_detected(xmtd_eie[21]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[21]),
             .idle_os_detected(xmtd_idle_os[21]),
             .fts_os_detected(xmtd_fts_os[21]),
             .ts1_detected(xmtd_ts1[21]),
             .ts2_detected(xmtd_ts2[21]),
             .lane_num_detected(xmtd_lane_num[21]),
             .link_num_detected(xmtd_link_num[21]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[21]),
             .gen2_data_rate_detected(xmtd_gen2[21]),
             .autonomous_data_rate_detected(xmtd_autonomous[21]),
             .speed_change_data_rate_detected(xmtd_speed_change[21]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[21]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[21]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[21]),
             .loopback_detected(xmtd_loopback[21]),
             .disable_detected(xmtd_disable[21]),
             .disable_scrambling_detected(xmtd_no_scramble[21]),
             .compliance_pattern_detected(xmtd_comp_pattern[21]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[21]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 22

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    22,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE22_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[22] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB22:LSB22]),
             .symbol_data_minus(int_tx_symbols_n[MSB22:LSB22]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[183:176]),
             .pci_10b_code_violation_n(tx_10b_code_violation[22]),
             .d_or_k_code(tx_d_or_k_code[22]),

             .pci_10b_data(tx_10b_data[229:220]),
             .parallel_symbol_valid(tx_valid_code[22]),
             .current_rd(tx_current_rd[22]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[22]),
             .fifo_almost_full(tx_deskew_fifo_full[22]),
             .fifo_empty(tx_deskew_fifo_empty[22]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[183:176]),
             .link_number(link_number_tx[183:176]),
             .lane_0_detected(tx_lane_0_detected[22]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[183:176]),
             .electrical_idle_detected(tx_eidle[22]),
             .idle_data_detected(xmtd_idle_data[22]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[22]),
	     .eie_detected(xmtd_eie[22]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[22]),
             .idle_os_detected(xmtd_idle_os[22]),
             .fts_os_detected(xmtd_fts_os[22]),
             .ts1_detected(xmtd_ts1[22]),
             .ts2_detected(xmtd_ts2[22]),
             .lane_num_detected(xmtd_lane_num[22]),
             .link_num_detected(xmtd_link_num[22]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[22]),
             .gen2_data_rate_detected(xmtd_gen2[22]),
             .autonomous_data_rate_detected(xmtd_autonomous[22]),
             .speed_change_data_rate_detected(xmtd_speed_change[22]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[22]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[22]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[22]),
             .loopback_detected(xmtd_loopback[22]),
             .disable_detected(xmtd_disable[22]),
             .disable_scrambling_detected(xmtd_no_scramble[22]),
             .compliance_pattern_detected(xmtd_comp_pattern[22]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[22]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 23

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    23,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE23_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[23] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB23:LSB23]),
             .symbol_data_minus(int_tx_symbols_n[MSB23:LSB23]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[191:184]),
             .pci_10b_code_violation_n(tx_10b_code_violation[23]),
             .d_or_k_code(tx_d_or_k_code[23]),

             .pci_10b_data(tx_10b_data[239:230]),
             .parallel_symbol_valid(tx_valid_code[23]),
             .current_rd(tx_current_rd[23]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[23]),
             .fifo_almost_full(tx_deskew_fifo_full[23]),
             .fifo_empty(tx_deskew_fifo_empty[23]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[191:184]),
             .link_number(link_number_tx[191:184]),
             .lane_0_detected(tx_lane_0_detected[23]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[191:184]),
             .electrical_idle_detected(tx_eidle[23]),
             .idle_data_detected(xmtd_idle_data[23]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[23]),
	     .eie_detected(xmtd_eie[23]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[23]),
             .idle_os_detected(xmtd_idle_os[23]),
             .fts_os_detected(xmtd_fts_os[23]),
             .ts1_detected(xmtd_ts1[23]),
             .ts2_detected(xmtd_ts2[23]),
             .lane_num_detected(xmtd_lane_num[23]),
             .link_num_detected(xmtd_link_num[23]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[23]),
             .gen2_data_rate_detected(xmtd_gen2[23]),
             .autonomous_data_rate_detected(xmtd_autonomous[23]),
             .speed_change_data_rate_detected(xmtd_speed_change[23]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[23]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[23]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[23]),
             .loopback_detected(xmtd_loopback[23]),
             .disable_detected(xmtd_disable[23]),
             .disable_scrambling_detected(xmtd_no_scramble[23]),
             .compliance_pattern_detected(xmtd_comp_pattern[23]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[23]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 24

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    24,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE24_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[24] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB24:LSB24]),
             .symbol_data_minus(int_tx_symbols_n[MSB24:LSB24]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[199:192]),
             .pci_10b_code_violation_n(tx_10b_code_violation[24]),
             .d_or_k_code(tx_d_or_k_code[24]),

             .pci_10b_data(tx_10b_data[249:240]),
             .parallel_symbol_valid(tx_valid_code[24]),
             .current_rd(tx_current_rd[24]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[24]),
             .fifo_almost_full(tx_deskew_fifo_full[24]),
             .fifo_empty(tx_deskew_fifo_empty[24]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[199:192]),
             .link_number(link_number_tx[199:192]),
             .lane_0_detected(tx_lane_0_detected[24]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[199:192]),
             .electrical_idle_detected(tx_eidle[24]),
             .idle_data_detected(xmtd_idle_data[24]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[24]),
	     .eie_detected(xmtd_eie[24]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[24]),
             .idle_os_detected(xmtd_idle_os[24]),
             .fts_os_detected(xmtd_fts_os[24]),
             .ts1_detected(xmtd_ts1[24]),
             .ts2_detected(xmtd_ts2[24]),
             .lane_num_detected(xmtd_lane_num[24]),
             .link_num_detected(xmtd_link_num[24]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[24]),
             .gen2_data_rate_detected(xmtd_gen2[24]),
             .autonomous_data_rate_detected(xmtd_autonomous[24]),
             .speed_change_data_rate_detected(xmtd_speed_change[24]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[24]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[24]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[24]),
             .loopback_detected(xmtd_loopback[24]),
             .disable_detected(xmtd_disable[24]),
             .disable_scrambling_detected(xmtd_no_scramble[24]),
             .compliance_pattern_detected(xmtd_comp_pattern[24]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[24]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 25

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    25,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE25_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[25] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB25:LSB25]),
             .symbol_data_minus(int_tx_symbols_n[MSB25:LSB25]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[207:200]),
             .pci_10b_code_violation_n(tx_10b_code_violation[25]),
             .d_or_k_code(tx_d_or_k_code[25]),

             .pci_10b_data(tx_10b_data[259:250]),
             .parallel_symbol_valid(tx_valid_code[25]),
             .current_rd(tx_current_rd[25]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[25]),
             .fifo_almost_full(tx_deskew_fifo_full[25]),
             .fifo_empty(tx_deskew_fifo_empty[25]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[207:200]),
             .link_number(link_number_tx[207:200]),
             .lane_0_detected(tx_lane_0_detected[25]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[207:200]),
             .electrical_idle_detected(tx_eidle[25]),
             .idle_data_detected(xmtd_idle_data[25]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[25]),
	     .eie_detected(xmtd_eie[25]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[25]),
             .idle_os_detected(xmtd_idle_os[25]),
             .fts_os_detected(xmtd_fts_os[25]),
             .ts1_detected(xmtd_ts1[25]),
             .ts2_detected(xmtd_ts2[25]),
             .lane_num_detected(xmtd_lane_num[25]),
             .link_num_detected(xmtd_link_num[25]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[25]),
             .gen2_data_rate_detected(xmtd_gen2[25]),
             .autonomous_data_rate_detected(xmtd_autonomous[25]),
             .speed_change_data_rate_detected(xmtd_speed_change[25]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[25]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[25]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[25]),
             .loopback_detected(xmtd_loopback[25]),
             .disable_detected(xmtd_disable[25]),
             .disable_scrambling_detected(xmtd_no_scramble[25]),
             .compliance_pattern_detected(xmtd_comp_pattern[25]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[25]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 26

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    26,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE26_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[26] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB26:LSB26]),
             .symbol_data_minus(int_tx_symbols_n[MSB26:LSB26]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[215:208]),
             .pci_10b_code_violation_n(tx_10b_code_violation[26]),
             .d_or_k_code(tx_d_or_k_code[26]),

             .pci_10b_data(tx_10b_data[269:260]),
             .parallel_symbol_valid(tx_valid_code[26]),
             .current_rd(tx_current_rd[26]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[26]),
             .fifo_almost_full(tx_deskew_fifo_full[26]),
             .fifo_empty(tx_deskew_fifo_empty[26]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[215:208]),
             .link_number(link_number_tx[215:208]),
             .lane_0_detected(tx_lane_0_detected[26]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[215:208]),
             .electrical_idle_detected(tx_eidle[26]),
             .idle_data_detected(xmtd_idle_data[26]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[26]),
	     .eie_detected(xmtd_eie[26]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[26]),
             .idle_os_detected(xmtd_idle_os[26]),
             .fts_os_detected(xmtd_fts_os[26]),
             .ts1_detected(xmtd_ts1[26]),
             .ts2_detected(xmtd_ts2[26]),
             .lane_num_detected(xmtd_lane_num[26]),
             .link_num_detected(xmtd_link_num[26]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[26]),
             .gen2_data_rate_detected(xmtd_gen2[26]),
             .autonomous_data_rate_detected(xmtd_autonomous[26]),
             .speed_change_data_rate_detected(xmtd_speed_change[26]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[26]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[26]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[26]),
             .loopback_detected(xmtd_loopback[26]),
             .disable_detected(xmtd_disable[26]),
             .disable_scrambling_detected(xmtd_no_scramble[26]),
             .compliance_pattern_detected(xmtd_comp_pattern[26]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[26]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 27

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    27,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE27_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[27] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB27:LSB27]),
             .symbol_data_minus(int_tx_symbols_n[MSB27:LSB27]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[223:216]),
             .pci_10b_code_violation_n(tx_10b_code_violation[27]),
             .d_or_k_code(tx_d_or_k_code[27]),

             .pci_10b_data(tx_10b_data[279:270]),
             .parallel_symbol_valid(tx_valid_code[27]),
             .current_rd(tx_current_rd[27]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[27]),
             .fifo_almost_full(tx_deskew_fifo_full[27]),
             .fifo_empty(tx_deskew_fifo_empty[27]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[223:216]),
             .link_number(link_number_tx[223:216]),
             .lane_0_detected(tx_lane_0_detected[27]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[223:216]),
             .electrical_idle_detected(tx_eidle[27]),
             .idle_data_detected(xmtd_idle_data[27]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[27]),
	     .eie_detected(xmtd_eie[27]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[27]),
             .idle_os_detected(xmtd_idle_os[27]),
             .fts_os_detected(xmtd_fts_os[27]),
             .ts1_detected(xmtd_ts1[27]),
             .ts2_detected(xmtd_ts2[27]),
             .lane_num_detected(xmtd_lane_num[27]),
             .link_num_detected(xmtd_link_num[27]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[27]),
             .gen2_data_rate_detected(xmtd_gen2[27]),
             .autonomous_data_rate_detected(xmtd_autonomous[27]),
             .speed_change_data_rate_detected(xmtd_speed_change[27]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[27]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[27]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[27]),
             .loopback_detected(xmtd_loopback[27]),
             .disable_detected(xmtd_disable[27]),
             .disable_scrambling_detected(xmtd_no_scramble[27]),
             .compliance_pattern_detected(xmtd_comp_pattern[27]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[27]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 28

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    28,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE28_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[28] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB28:LSB28]),
             .symbol_data_minus(int_tx_symbols_n[MSB28:LSB28]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[231:224]),
             .pci_10b_code_violation_n(tx_10b_code_violation[28]),
             .d_or_k_code(tx_d_or_k_code[28]),

             .pci_10b_data(tx_10b_data[289:280]),
             .parallel_symbol_valid(tx_valid_code[28]),
             .current_rd(tx_current_rd[28]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[28]),
             .fifo_almost_full(tx_deskew_fifo_full[28]),
             .fifo_empty(tx_deskew_fifo_empty[28]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[231:224]),
             .link_number(link_number_tx[231:224]),
             .lane_0_detected(tx_lane_0_detected[28]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[231:224]),
             .electrical_idle_detected(tx_eidle[28]),
             .idle_data_detected(xmtd_idle_data[28]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[28]),
	     .eie_detected(xmtd_eie[28]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[28]),
             .idle_os_detected(xmtd_idle_os[28]),
             .fts_os_detected(xmtd_fts_os[28]),
             .ts1_detected(xmtd_ts1[28]),
             .ts2_detected(xmtd_ts2[28]),
             .lane_num_detected(xmtd_lane_num[28]),
             .link_num_detected(xmtd_link_num[28]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[28]),
             .gen2_data_rate_detected(xmtd_gen2[28]),
             .autonomous_data_rate_detected(xmtd_autonomous[28]),
             .speed_change_data_rate_detected(xmtd_speed_change[28]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[28]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[28]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[28]),
             .loopback_detected(xmtd_loopback[28]),
             .disable_detected(xmtd_disable[28]),
             .disable_scrambling_detected(xmtd_no_scramble[28]),
             .compliance_pattern_detected(xmtd_comp_pattern[28]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[28]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 29

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    29,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE29_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[29] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB29:LSB29]),
             .symbol_data_minus(int_tx_symbols_n[MSB29:LSB29]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[239:232]),
             .pci_10b_code_violation_n(tx_10b_code_violation[29]),
             .d_or_k_code(tx_d_or_k_code[29]),

             .pci_10b_data(tx_10b_data[299:290]),
             .parallel_symbol_valid(tx_valid_code[29]),
             .current_rd(tx_current_rd[29]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[29]),
             .fifo_almost_full(tx_deskew_fifo_full[29]),
             .fifo_empty(tx_deskew_fifo_empty[29]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[239:232]),
             .link_number(link_number_tx[239:232]),
             .lane_0_detected(tx_lane_0_detected[29]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[239:232]),
             .electrical_idle_detected(tx_eidle[29]),
             .idle_data_detected(xmtd_idle_data[29]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[29]),
	     .eie_detected(xmtd_eie[29]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[29]),
             .idle_os_detected(xmtd_idle_os[29]),
             .fts_os_detected(xmtd_fts_os[29]),
             .ts1_detected(xmtd_ts1[29]),
             .ts2_detected(xmtd_ts2[29]),
             .lane_num_detected(xmtd_lane_num[29]),
             .link_num_detected(xmtd_link_num[29]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[29]),
             .gen2_data_rate_detected(xmtd_gen2[29]),
             .autonomous_data_rate_detected(xmtd_autonomous[29]),
             .speed_change_data_rate_detected(xmtd_speed_change[29]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[29]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[29]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[29]),
             .loopback_detected(xmtd_loopback[29]),
             .disable_detected(xmtd_disable[29]),
             .disable_scrambling_detected(xmtd_no_scramble[29]),
             .compliance_pattern_detected(xmtd_comp_pattern[29]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[29]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 30

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    30,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE30_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[30] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB30:LSB30]),
             .symbol_data_minus(int_tx_symbols_n[MSB30:LSB30]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[247:240]),
             .pci_10b_code_violation_n(tx_10b_code_violation[30]),
             .d_or_k_code(tx_d_or_k_code[30]),

             .pci_10b_data(tx_10b_data[309:300]),
             .parallel_symbol_valid(tx_valid_code[30]),
             .current_rd(tx_current_rd[30]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[30]),
             .fifo_almost_full(tx_deskew_fifo_full[30]),
             .fifo_empty(tx_deskew_fifo_empty[30]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[247:240]),
             .link_number(link_number_tx[247:240]),
             .lane_0_detected(tx_lane_0_detected[30]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[247:240]),
             .electrical_idle_detected(tx_eidle[30]),
             .idle_data_detected(xmtd_idle_data[30]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[30]),
	     .eie_detected(xmtd_eie[30]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[30]),
             .idle_os_detected(xmtd_idle_os[30]),
             .fts_os_detected(xmtd_fts_os[30]),
             .ts1_detected(xmtd_ts1[30]),
             .ts2_detected(xmtd_ts2[30]),
             .lane_num_detected(xmtd_lane_num[30]),
             .link_num_detected(xmtd_link_num[30]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[30]),
             .gen2_data_rate_detected(xmtd_gen2[30]),
             .autonomous_data_rate_detected(xmtd_autonomous[30]),
             .speed_change_data_rate_detected(xmtd_speed_change[30]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[30]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[30]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[30]),
             .loopback_detected(xmtd_loopback[30]),
             .disable_detected(xmtd_disable[30]),
             .disable_scrambling_detected(xmtd_no_scramble[30]),
             .compliance_pattern_detected(xmtd_comp_pattern[30]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[30]),    
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 31

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    31,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */       MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE31_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[31] & tx_clk),
             .symbol_data_plus(int_tx_symbols_p[MSB31:LSB31]),
             .symbol_data_minus(int_tx_symbols_n[MSB31:LSB31]),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[255:248]),
             .pci_10b_code_violation_n(tx_10b_code_violation[31]),
             .d_or_k_code(tx_d_or_k_code[31]),

             .pci_10b_data(tx_10b_data[319:310]),
             .parallel_symbol_valid(tx_valid_code[31]),
             .current_rd(tx_current_rd[31]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[31]),
             .fifo_almost_full(tx_deskew_fifo_full[31]),
             .fifo_empty(tx_deskew_fifo_empty[31]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end	       
             .deskew_d_or_k_code(),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[255:248]),
             .link_number(link_number_tx[255:248]),
             .lane_0_detected(tx_lane_0_detected[31]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[255:248]),
             .electrical_idle_detected(tx_eidle[31]),
             .idle_data_detected(xmtd_idle_data[31]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(xmtd_eie_os[31]),
	     .eie_detected(xmtd_eie[31]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(xmtd_skp_os[31]),
             .idle_os_detected(xmtd_idle_os[31]),
             .fts_os_detected(xmtd_fts_os[31]),
             .ts1_detected(xmtd_ts1[31]),
             .ts2_detected(xmtd_ts2[31]),
             .lane_num_detected(xmtd_lane_num[31]),
             .link_num_detected(xmtd_link_num[31]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(xmtd_gen1[31]),
             .gen2_data_rate_detected(xmtd_gen2[31]),
             .autonomous_data_rate_detected(xmtd_autonomous[31]),
             .speed_change_data_rate_detected(xmtd_speed_change[31]),
	     .link_ctrl_compliance_receive_detected(xmtd_compliance_receive[31]),
             .link_ctrl_compliance_receive_loopback_detected(xmtd_compliance_receive_loopback[31]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(xmtd_reset[31]),
             .loopback_detected(xmtd_loopback[31]),
             .disable_detected(xmtd_disable[31]),
             .disable_scrambling_detected(xmtd_no_scramble[31]),
             .compliance_pattern_detected(xmtd_comp_pattern[31]),
	     .modified_compliance_pattern_detected(xmtd_modified_comp_pattern[31]),    
	     .compliance_check_enable(compliance_check_enable)
             ); 

  //------------------------------------------------------------
  // Lane receiver module instantiations on the receive interface
  //------------------------------------------------------------

  // Lane 0

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode, 
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    0,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE00_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[0] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB0:LSB0]),
             .symbol_data_minus(int_rx_symbols_n[MSB0:LSB0]),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[7:0]),
             .pci_10b_code_violation_n(rx_10b_code_violation[0]),
             .d_or_k_code(rx_d_or_k_code[0]),

             .pci_10b_data(rx_10b_data[9:0]),
             .parallel_symbol_valid(rx_valid_code[0]),
             .current_rd(rx_current_rd[0]),

	     .deskew_fifo_read(deskew_fifo_read),
	     .deskew_fifo_flush(deskew_fifo_flush),
	     .com_read_from_fifo(com_read_from_fifo[0]),
	     .fifo_almost_full(deskew_fifo_full[0]),
	     .fifo_empty(deskew_fifo_empty[0]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[7:0]),
             .link_number(link_number_rx[7:0]),
	     .lane_0_detected(rx_lane_0_detected[0]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[7:0]),
             .electrical_idle_detected(rx_eidle[0]),
	     .idle_data_detected(rcvd_idle_data[0]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[0]),
	     .eie_detected(rcvd_eie[0]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[0]),
             .idle_os_detected(rcvd_idle_os[0]),
             .fts_os_detected(rcvd_fts_os[0]),
             .ts1_detected(rcvd_ts1[0]),
             .ts2_detected(rcvd_ts2[0]),
             .lane_num_detected(rcvd_lane_num[0]),
             .link_num_detected(rcvd_link_num[0]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[0]),
             .gen2_data_rate_detected(rcvd_gen2[0]),
             .autonomous_data_rate_detected(rcvd_autonomous[0]),
             .speed_change_data_rate_detected(rcvd_speed_change[0]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[0]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[0]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[0]),
             .loopback_detected(rcvd_loopback[0]),
             .disable_detected(rcvd_disable[0]),
             .disable_scrambling_detected(rcvd_no_scramble[0]),
	     .skp_added(),
             .skp_removed(),  
             .compliance_pattern_detected(rcvd_comp_pattern[0]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[0]),    
	     .deskew_d_or_k_code(),
	     .compliance_check_enable(compliance_check_enable)
             );

   // Lane 1

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode, 
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    1,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE01_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[1] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB1:LSB1]),
             .symbol_data_minus(int_rx_symbols_n[MSB1:LSB1]),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[15:8]),
             .pci_10b_code_violation_n(rx_10b_code_violation[1]),
             .d_or_k_code(rx_d_or_k_code[1]),
 
             .pci_10b_data(rx_10b_data[19:10]),
             .parallel_symbol_valid(rx_valid_code[1]),
             .current_rd(rx_current_rd[1]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[1]),
             .fifo_almost_full(deskew_fifo_full[1]),
             .fifo_empty(deskew_fifo_empty[1]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[15:8]),
             .link_number(link_number_rx[15:8]),
	     .lane_0_detected(rx_lane_0_detected[1]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[15:8]),
             .electrical_idle_detected(rx_eidle[1]),
	     .idle_data_detected(rcvd_idle_data[1]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[1]),
	     .eie_detected(rcvd_eie[1]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[1]),
             .idle_os_detected(rcvd_idle_os[1]),
             .fts_os_detected(rcvd_fts_os[1]),
             .ts1_detected(rcvd_ts1[1]),
             .ts2_detected(rcvd_ts2[1]),
             .lane_num_detected(rcvd_lane_num[1]),
             .link_num_detected(rcvd_link_num[1]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[1]),
             .gen2_data_rate_detected(rcvd_gen2[1]),
             .autonomous_data_rate_detected(rcvd_autonomous[1]),
             .speed_change_data_rate_detected(rcvd_speed_change[1]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[1]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[1]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[1]),
             .loopback_detected(rcvd_loopback[1]),
             .disable_detected(rcvd_disable[1]),
             .disable_scrambling_detected(rcvd_no_scramble[1]),
	     .skp_added(),
             .skp_removed(),  
             .compliance_pattern_detected(rcvd_comp_pattern[1]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[1]),      
	     .deskew_d_or_k_code(),
	     .compliance_check_enable(compliance_check_enable)
             );  
 
  // Lane 2
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode, 
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    2,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE02_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[2] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB2:LSB2]),
             .symbol_data_minus(int_rx_symbols_n[MSB2:LSB2]),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[23:16]),
             .pci_10b_code_violation_n(rx_10b_code_violation[2]),
             .d_or_k_code(rx_d_or_k_code[2]),
              
             .pci_10b_data(rx_10b_data[29:20]),
             .parallel_symbol_valid(rx_valid_code[2]),
             .current_rd(rx_current_rd[2]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[2]),
             .fifo_almost_full(deskew_fifo_full[2]),
	     .fifo_empty(deskew_fifo_empty[2]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[23:16]),
             .link_number(link_number_rx[23:16]),
	     .lane_0_detected(rx_lane_0_detected[2]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[23:16]),
             .electrical_idle_detected(rx_eidle[2]),
	     .idle_data_detected(rcvd_idle_data[2]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[2]),
	     .eie_detected(rcvd_eie[2]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[2]),
             .idle_os_detected(rcvd_idle_os[2]),
             .fts_os_detected(rcvd_fts_os[2]),
             .ts1_detected(rcvd_ts1[2]),
             .ts2_detected(rcvd_ts2[2]),
             .lane_num_detected(rcvd_lane_num[2]),
             .link_num_detected(rcvd_link_num[2]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[2]),
             .gen2_data_rate_detected(rcvd_gen2[2]),
             .autonomous_data_rate_detected(rcvd_autonomous[2]),
             .speed_change_data_rate_detected(rcvd_speed_change[2]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[2]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[2]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[2]),
             .loopback_detected(rcvd_loopback[2]),
             .disable_detected(rcvd_disable[2]),
             .disable_scrambling_detected(rcvd_no_scramble[2]),
	     .skp_added(),
             .skp_removed(),  
             .compliance_pattern_detected(rcvd_comp_pattern[2]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[2]),      
	     .deskew_d_or_k_code(),
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 3
 
   qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    3,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE03_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[3] & rx_clk),    
             .symbol_data_plus(int_rx_symbols_p[MSB3:LSB3]),
             .symbol_data_minus(int_rx_symbols_n[MSB3:LSB3]),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[31:24]),
             .pci_10b_code_violation_n(rx_10b_code_violation[3]),
             .d_or_k_code(rx_d_or_k_code[3]),
              
             .pci_10b_data(rx_10b_data[39:30]),
             .parallel_symbol_valid(rx_valid_code[3]),
             .current_rd(rx_current_rd[3]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[3]),
             .fifo_almost_full(deskew_fifo_full[3]),
	     .fifo_empty(deskew_fifo_empty[3]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble), 
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[31:24]),
             .link_number(link_number_rx[31:24]),
	     .lane_0_detected(rx_lane_0_detected[3]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[31:24]),
             .electrical_idle_detected(rx_eidle[3]),
	     .idle_data_detected(rcvd_idle_data[3]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[3]),
	     .eie_detected(rcvd_eie[3]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[3]),
             .idle_os_detected(rcvd_idle_os[3]),
             .fts_os_detected(rcvd_fts_os[3]),
             .ts1_detected(rcvd_ts1[3]),
             .ts2_detected(rcvd_ts2[3]),
             .lane_num_detected(rcvd_lane_num[3]),
             .link_num_detected(rcvd_link_num[3]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[3]),
             .gen2_data_rate_detected(rcvd_gen2[3]),
             .autonomous_data_rate_detected(rcvd_autonomous[3]),
             .speed_change_data_rate_detected(rcvd_speed_change[3]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[3]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[3]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[3]),
             .loopback_detected(rcvd_loopback[3]),
             .disable_detected(rcvd_disable[3]),
             .disable_scrambling_detected(rcvd_no_scramble[3]),
	     .skp_added(),
             .skp_removed(),  
             .compliance_pattern_detected(rcvd_comp_pattern[3]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[3]),      
	     .deskew_d_or_k_code(),
	     .compliance_check_enable(compliance_check_enable)
             );

  // Lane 4

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    4,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE04_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[4] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB4:LSB4]),
             .symbol_data_minus(int_rx_symbols_n[MSB4:LSB4]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[39:32]),
             .pci_10b_code_violation_n(rx_10b_code_violation[4]),
             .d_or_k_code(rx_d_or_k_code[4]),

             .pci_10b_data(rx_10b_data[49:40]),
             .parallel_symbol_valid(rx_valid_code[4]),
             .current_rd(rx_current_rd[4]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[4]),
             .fifo_almost_full(deskew_fifo_full[4]),
	     .fifo_empty(deskew_fifo_empty[4]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 


             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[39:32]),
             .link_number(link_number_rx[39:32]),
	     .lane_0_detected(rx_lane_0_detected[4]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[39:32]),
             .electrical_idle_detected(rx_eidle[4]),
             .idle_data_detected(rcvd_idle_data[4]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[4]),
	     .eie_detected(rcvd_eie[4]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[4]),
             .idle_os_detected(rcvd_idle_os[4]),
             .fts_os_detected(rcvd_fts_os[4]),
             .ts1_detected(rcvd_ts1[4]),
             .ts2_detected(rcvd_ts2[4]),
             .lane_num_detected(rcvd_lane_num[4]),
             .link_num_detected(rcvd_link_num[4]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[4]),
             .gen2_data_rate_detected(rcvd_gen2[4]),
             .autonomous_data_rate_detected(rcvd_autonomous[4]),
             .speed_change_data_rate_detected(rcvd_speed_change[4]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[4]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[4]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[4]),
             .loopback_detected(rcvd_loopback[4]),
             .disable_detected(rcvd_disable[4]),
             .disable_scrambling_detected(rcvd_no_scramble[4]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[4]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[4])
             );

  // Lane 5

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    5,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE05_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[5] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB5:LSB5]),
             .symbol_data_minus(int_rx_symbols_n[MSB5:LSB5]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[47:40]),
             .pci_10b_code_violation_n(rx_10b_code_violation[5]),
             .d_or_k_code(rx_d_or_k_code[5]),

             .pci_10b_data(rx_10b_data[59:50]),
             .parallel_symbol_valid(rx_valid_code[5]),
             .current_rd(rx_current_rd[5]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[5]),
             .fifo_almost_full(deskew_fifo_full[5]),
	     .fifo_empty(deskew_fifo_empty[5]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[47:40]),
             .link_number(link_number_rx[47:40]),
	     .lane_0_detected(rx_lane_0_detected[5]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[47:40]),
             .electrical_idle_detected(rx_eidle[5]),
             .idle_data_detected(rcvd_idle_data[5]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[5]),
	     .eie_detected(rcvd_eie[5]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[5]),
             .idle_os_detected(rcvd_idle_os[5]),
             .fts_os_detected(rcvd_fts_os[5]),
             .ts1_detected(rcvd_ts1[5]),
             .ts2_detected(rcvd_ts2[5]),
             .lane_num_detected(rcvd_lane_num[5]),
             .link_num_detected(rcvd_link_num[5]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[5]),
             .gen2_data_rate_detected(rcvd_gen2[5]),
             .autonomous_data_rate_detected(rcvd_autonomous[5]),
             .speed_change_data_rate_detected(rcvd_speed_change[5]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[5]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[5]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[5]),
             .loopback_detected(rcvd_loopback[5]),
             .disable_detected(rcvd_disable[5]),
             .disable_scrambling_detected(rcvd_no_scramble[5]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[5]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[5])
             );

  // Lane 6
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    6,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE06_RX (
             .reset(reset),
             .areset(areset),
  
             .clk(rx_clk_gate_lane[6] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB6:LSB6]),
             .symbol_data_minus(int_rx_symbols_n[MSB6:LSB6]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[55:48]),
             .pci_10b_code_violation_n(rx_10b_code_violation[6]),
             .d_or_k_code(rx_d_or_k_code[6]),
 
             .pci_10b_data(rx_10b_data[69:60]),
             .parallel_symbol_valid(rx_valid_code[6]),
             .current_rd(rx_current_rd[6]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[6]),
             .fifo_almost_full(deskew_fifo_full[6]),
	     .fifo_empty(deskew_fifo_empty[6]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

  
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[55:48]),
             .link_number(link_number_rx[55:48]),
	     .lane_0_detected(rx_lane_0_detected[6]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[55:48]),
             .electrical_idle_detected(rx_eidle[6]),
             .idle_data_detected(rcvd_idle_data[6]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[6]),
	     .eie_detected(rcvd_eie[6]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[6]),
             .idle_os_detected(rcvd_idle_os[6]),
             .fts_os_detected(rcvd_fts_os[6]),
             .ts1_detected(rcvd_ts1[6]),
             .ts2_detected(rcvd_ts2[6]),
             .lane_num_detected(rcvd_lane_num[6]),
             .link_num_detected(rcvd_link_num[6]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[6]),
             .gen2_data_rate_detected(rcvd_gen2[6]),
             .autonomous_data_rate_detected(rcvd_autonomous[6]),
             .speed_change_data_rate_detected(rcvd_speed_change[6]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[6]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[6]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[6]),
             .loopback_detected(rcvd_loopback[6]),
             .disable_detected(rcvd_disable[6]),
             .disable_scrambling_detected(rcvd_no_scramble[6]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[6]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[6])
             );

  // Lane 7

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    7,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE07_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[7] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB7:LSB7]),
             .symbol_data_minus(int_rx_symbols_n[MSB7:LSB7]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[63:56]),
             .pci_10b_code_violation_n(rx_10b_code_violation[7]),
             .d_or_k_code(rx_d_or_k_code[7]),

             .pci_10b_data(rx_10b_data[79:70]),
             .parallel_symbol_valid(rx_valid_code[7]),
             .current_rd(rx_current_rd[7]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[7]),
             .fifo_almost_full(deskew_fifo_full[7]),
	     .fifo_empty(deskew_fifo_empty[7]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[63:56]),
             .link_number(link_number_rx[63:56]),
	     .lane_0_detected(rx_lane_0_detected[7]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[63:56]),
             .electrical_idle_detected(rx_eidle[7]),
             .idle_data_detected(rcvd_idle_data[7]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[7]),
	     .eie_detected(rcvd_eie[7]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[7]),
             .idle_os_detected(rcvd_idle_os[7]),
             .fts_os_detected(rcvd_fts_os[7]),
             .ts1_detected(rcvd_ts1[7]),
             .ts2_detected(rcvd_ts2[7]),
             .lane_num_detected(rcvd_lane_num[7]),
             .link_num_detected(rcvd_link_num[7]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[7]),
             .gen2_data_rate_detected(rcvd_gen2[7]),
             .autonomous_data_rate_detected(rcvd_autonomous[7]),
             .speed_change_data_rate_detected(rcvd_speed_change[7]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[7]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[7]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[7]),
             .loopback_detected(rcvd_loopback[7]),
             .disable_detected(rcvd_disable[7]),
             .disable_scrambling_detected(rcvd_no_scramble[7]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[7]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[7])
             ); 

  // Lane 8

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    8,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE08_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[8] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB8:LSB8]),
             .symbol_data_minus(int_rx_symbols_n[MSB8:LSB8]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[71:64]),
             .pci_10b_code_violation_n(rx_10b_code_violation[8]),
             .d_or_k_code(rx_d_or_k_code[8]),

             .pci_10b_data(rx_10b_data[89:80]),
             .parallel_symbol_valid(rx_valid_code[8]),
             .current_rd(rx_current_rd[8]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[8]),
             .fifo_almost_full(deskew_fifo_full[8]),
	     .fifo_empty(deskew_fifo_empty[8]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[71:64]),
             .link_number(link_number_rx[71:64]),
             .lane_0_detected(rx_lane_0_detected[8]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[71:64]),
             .electrical_idle_detected(rx_eidle[8]),
             .idle_data_detected(rcvd_idle_data[8]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[8]),
	     .eie_detected(rcvd_eie[8]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[8]),
             .idle_os_detected(rcvd_idle_os[8]),
             .fts_os_detected(rcvd_fts_os[8]),
             .ts1_detected(rcvd_ts1[8]),
             .ts2_detected(rcvd_ts2[8]),
             .lane_num_detected(rcvd_lane_num[8]),
             .link_num_detected(rcvd_link_num[8]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[8]),
             .gen2_data_rate_detected(rcvd_gen2[8]),
             .autonomous_data_rate_detected(rcvd_autonomous[8]),
             .speed_change_data_rate_detected(rcvd_speed_change[8]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[8]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[8]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[8]),
             .loopback_detected(rcvd_loopback[8]),
             .disable_detected(rcvd_disable[8]),
             .disable_scrambling_detected(rcvd_no_scramble[8]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[8]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[8])
             );

  // Lane 9

 qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    9,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE09_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[9] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB9:LSB9]),
             .symbol_data_minus(int_rx_symbols_n[MSB9:LSB9]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[79:72]),
             .pci_10b_code_violation_n(rx_10b_code_violation[9]),
             .d_or_k_code(rx_d_or_k_code[9]),
 
             .pci_10b_data(rx_10b_data[99:90]),
             .parallel_symbol_valid(rx_valid_code[9]),
             .current_rd(rx_current_rd[9]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[9]),
             .fifo_almost_full(deskew_fifo_full[9]),
	     .fifo_empty(deskew_fifo_empty[9]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[79:72]),
             .link_number(link_number_rx[79:72]),
             .lane_0_detected(rx_lane_0_detected[9]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[79:72]),
             .electrical_idle_detected(rx_eidle[9]),
             .idle_data_detected(rcvd_idle_data[9]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[9]),
	     .eie_detected(rcvd_eie[9]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[9]),
             .idle_os_detected(rcvd_idle_os[9]),
             .fts_os_detected(rcvd_fts_os[9]),
             .ts1_detected(rcvd_ts1[9]),
             .ts2_detected(rcvd_ts2[9]),
             .lane_num_detected(rcvd_lane_num[9]),
             .link_num_detected(rcvd_link_num[9]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[9]),
             .gen2_data_rate_detected(rcvd_gen2[9]),
             .autonomous_data_rate_detected(rcvd_autonomous[9]),
             .speed_change_data_rate_detected(rcvd_speed_change[9]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[9]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[9]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[9]),
             .loopback_detected(rcvd_loopback[9]),
             .disable_detected(rcvd_disable[9]),
             .disable_scrambling_detected(rcvd_no_scramble[9]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[9]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[9])
             );

  // Lane 10
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    10,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE10_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[10] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB10:LSB10]),
             .symbol_data_minus(int_rx_symbols_n[MSB10:LSB10]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[87:80]),
             .pci_10b_code_violation_n(rx_10b_code_violation[10]),
             .d_or_k_code(rx_d_or_k_code[10]),
 
             .pci_10b_data(rx_10b_data[109:100]),
             .parallel_symbol_valid(rx_valid_code[10]),
             .current_rd(rx_current_rd[10]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[10]),
             .fifo_almost_full(deskew_fifo_full[10]),
	     .fifo_empty(deskew_fifo_empty[10]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[87:80]),
             .link_number(link_number_rx[87:80]),
             .lane_0_detected(rx_lane_0_detected[10]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[87:80]),
             .electrical_idle_detected(rx_eidle[10]),
             .idle_data_detected(rcvd_idle_data[10]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[10]),
	     .eie_detected(rcvd_eie[10]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[10]),
             .idle_os_detected(rcvd_idle_os[10]),
             .fts_os_detected(rcvd_fts_os[10]),
             .ts1_detected(rcvd_ts1[10]),
             .ts2_detected(rcvd_ts2[10]),
             .lane_num_detected(rcvd_lane_num[10]),
             .link_num_detected(rcvd_link_num[10]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[10]),
             .gen2_data_rate_detected(rcvd_gen2[10]),
             .autonomous_data_rate_detected(rcvd_autonomous[10]),
             .speed_change_data_rate_detected(rcvd_speed_change[10]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[10]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[10]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[10]),
             .loopback_detected(rcvd_loopback[10]),
             .disable_detected(rcvd_disable[10]),
             .disable_scrambling_detected(rcvd_no_scramble[10]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[10]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[10])
             );

  // Lane 11
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    11,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE11_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[11] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB11:LSB11]),
             .symbol_data_minus(int_rx_symbols_n[MSB11:LSB11]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[95:88]),
             .pci_10b_code_violation_n(rx_10b_code_violation[11]),
             .d_or_k_code(rx_d_or_k_code[11]),
 
             .pci_10b_data(rx_10b_data[119:110]),
             .parallel_symbol_valid(rx_valid_code[11]),
             .current_rd(rx_current_rd[11]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[11]),
             .fifo_almost_full(deskew_fifo_full[11]),
	     .fifo_empty(deskew_fifo_empty[11]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[95:88]),
             .link_number(link_number_rx[95:88]),
             .lane_0_detected(rx_lane_0_detected[11]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[95:88]),
             .electrical_idle_detected(rx_eidle[11]),
             .idle_data_detected(rcvd_idle_data[11]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[11]),
	     .eie_detected(rcvd_eie[11]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[11]),
             .idle_os_detected(rcvd_idle_os[11]),
             .fts_os_detected(rcvd_fts_os[11]),
             .ts1_detected(rcvd_ts1[11]),
             .ts2_detected(rcvd_ts2[11]),
             .lane_num_detected(rcvd_lane_num[11]),
             .link_num_detected(rcvd_link_num[11]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[11]),
             .gen2_data_rate_detected(rcvd_gen2[11]),
             .autonomous_data_rate_detected(rcvd_autonomous[11]),
             .speed_change_data_rate_detected(rcvd_speed_change[11]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[11]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[11]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[11]),
             .loopback_detected(rcvd_loopback[11]),
             .disable_detected(rcvd_disable[11]),
             .disable_scrambling_detected(rcvd_no_scramble[11]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[11]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[11])
             );  

  // Lane 12

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    12,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE12_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[12] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB12:LSB12]),
             .symbol_data_minus(int_rx_symbols_n[MSB12:LSB12]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[103:96]),
             .pci_10b_code_violation_n(rx_10b_code_violation[12]),
             .d_or_k_code(rx_d_or_k_code[12]),

             .pci_10b_data(rx_10b_data[129:120]),
             .parallel_symbol_valid(rx_valid_code[12]),
             .current_rd(rx_current_rd[12]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[12]),
             .fifo_almost_full(deskew_fifo_full[12]),
	     .fifo_empty(deskew_fifo_empty[12]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[103:96]),
             .link_number(link_number_rx[103:96]),
             .lane_0_detected(rx_lane_0_detected[12]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[103:96]),
             .electrical_idle_detected(rx_eidle[12]),
             .idle_data_detected(rcvd_idle_data[12]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[12]),
	     .eie_detected(rcvd_eie[12]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[12]),
             .idle_os_detected(rcvd_idle_os[12]),
             .fts_os_detected(rcvd_fts_os[12]),
             .ts1_detected(rcvd_ts1[12]),
             .ts2_detected(rcvd_ts2[12]),
             .lane_num_detected(rcvd_lane_num[12]),
             .link_num_detected(rcvd_link_num[12]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[12]),
             .gen2_data_rate_detected(rcvd_gen2[12]),
             .autonomous_data_rate_detected(rcvd_autonomous[12]),
             .speed_change_data_rate_detected(rcvd_speed_change[12]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[12]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[12]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[12]),
             .loopback_detected(rcvd_loopback[12]),
             .disable_detected(rcvd_disable[12]),
             .disable_scrambling_detected(rcvd_no_scramble[12]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[12]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[12])
             );
 
  // Lane 13

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    13,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE13_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[13] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB13:LSB13]),
             .symbol_data_minus(int_rx_symbols_n[MSB13:LSB13]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[111:104]),
             .pci_10b_code_violation_n(rx_10b_code_violation[13]),
             .d_or_k_code(rx_d_or_k_code[13]),

             .pci_10b_data(rx_10b_data[139:130]),
             .parallel_symbol_valid(rx_valid_code[13]),    
             .current_rd(rx_current_rd[13]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[13]),
             .fifo_almost_full(deskew_fifo_full[13]),
	     .fifo_empty(deskew_fifo_empty[13]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[111:104]),
             .link_number(link_number_rx[111:104]),
             .lane_0_detected(rx_lane_0_detected[13]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[111:104]),
             .electrical_idle_detected(rx_eidle[13]),   
             .idle_data_detected(rcvd_idle_data[13]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[13]),
	     .eie_detected(rcvd_eie[13]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[13]),
             .idle_os_detected(rcvd_idle_os[13]),
             .fts_os_detected(rcvd_fts_os[13]), 
             .ts1_detected(rcvd_ts1[13]),
             .ts2_detected(rcvd_ts2[13]),
             .lane_num_detected(rcvd_lane_num[13]),
             .link_num_detected(rcvd_link_num[13]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[13]),
             .gen2_data_rate_detected(rcvd_gen2[13]),
             .autonomous_data_rate_detected(rcvd_autonomous[13]),
             .speed_change_data_rate_detected(rcvd_speed_change[13]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[13]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[13]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[13]),
             .loopback_detected(rcvd_loopback[13]),   
             .disable_detected(rcvd_disable[13]), 
             .disable_scrambling_detected(rcvd_no_scramble[13]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[13]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[13])
             );

  // Lane 14

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    14,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE14_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[14] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB14:LSB14]),
             .symbol_data_minus(int_rx_symbols_n[MSB14:LSB14]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[119:112]),
             .pci_10b_code_violation_n(rx_10b_code_violation[14]),
             .d_or_k_code(rx_d_or_k_code[14]),

             .pci_10b_data(rx_10b_data[149:140]),
             .parallel_symbol_valid(rx_valid_code[14]),    
             .current_rd(rx_current_rd[14]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[14]),
             .fifo_almost_full(deskew_fifo_full[14]),
	     .fifo_empty(deskew_fifo_empty[14]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[119:112]),
             .link_number(link_number_rx[119:112]),
             .lane_0_detected(rx_lane_0_detected[14]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[119:112]),
             .electrical_idle_detected(rx_eidle[14]),   
             .idle_data_detected(rcvd_idle_data[14]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[14]),
	     .eie_detected(rcvd_eie[14]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[14]),
             .idle_os_detected(rcvd_idle_os[14]),
             .fts_os_detected(rcvd_fts_os[14]), 
             .ts1_detected(rcvd_ts1[14]),
             .ts2_detected(rcvd_ts2[14]),
             .lane_num_detected(rcvd_lane_num[14]),
             .link_num_detected(rcvd_link_num[14]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[14]),
             .gen2_data_rate_detected(rcvd_gen2[14]),
             .autonomous_data_rate_detected(rcvd_autonomous[14]),
             .speed_change_data_rate_detected(rcvd_speed_change[14]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[14]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[14]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[14]),
             .loopback_detected(rcvd_loopback[14]),   
             .disable_detected(rcvd_disable[14]), 
             .disable_scrambling_detected(rcvd_no_scramble[14]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[14]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[14])
             );

  // Lane 15

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    15,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE15_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[15] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB15:LSB15]),
             .symbol_data_minus(int_rx_symbols_n[MSB15:LSB15]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[127:120]),
             .pci_10b_code_violation_n(rx_10b_code_violation[15]),
             .d_or_k_code(rx_d_or_k_code[15]),

             .pci_10b_data(rx_10b_data[159:150]),
             .parallel_symbol_valid(rx_valid_code[15]),    
             .current_rd(rx_current_rd[15]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[15]),
             .fifo_almost_full(deskew_fifo_full[15]),
	     .fifo_empty(deskew_fifo_empty[15]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[127:120]),
             .link_number(link_number_rx[127:120]),
             .lane_0_detected(rx_lane_0_detected[15]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[127:120]),
             .electrical_idle_detected(rx_eidle[15]),   
             .idle_data_detected(rcvd_idle_data[15]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[15]),
	     .eie_detected(rcvd_eie[15]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[15]),
             .idle_os_detected(rcvd_idle_os[15]),
             .fts_os_detected(rcvd_fts_os[15]), 
             .ts1_detected(rcvd_ts1[15]),
             .ts2_detected(rcvd_ts2[15]),
             .lane_num_detected(rcvd_lane_num[15]),
             .link_num_detected(rcvd_link_num[15]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[15]),
             .gen2_data_rate_detected(rcvd_gen2[15]),
             .autonomous_data_rate_detected(rcvd_autonomous[15]),
             .speed_change_data_rate_detected(rcvd_speed_change[15]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[15]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[15]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[15]),
             .loopback_detected(rcvd_loopback[15]),   
             .disable_detected(rcvd_disable[15]), 
             .disable_scrambling_detected(rcvd_no_scramble[15]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[15]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[15])
             );

  // Lane 16

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    16,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE16_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[16] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB16:LSB16]),
             .symbol_data_minus(int_rx_symbols_n[MSB16:LSB16]),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[135:128]),
             .pci_10b_code_violation_n(rx_10b_code_violation[16]),
             .d_or_k_code(rx_d_or_k_code[16]),
 
             .pci_10b_data(rx_10b_data[169:160]),
             .parallel_symbol_valid(rx_valid_code[16]),
             .current_rd(rx_current_rd[16]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[16]),
             .fifo_almost_full(deskew_fifo_full[16]),
	     .fifo_empty(deskew_fifo_empty[16]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[135:128]),
             .link_number(link_number_rx[135:128]),
             .lane_0_detected(rx_lane_0_detected[16]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[135:128]),
             .electrical_idle_detected(rx_eidle[16]),
             .idle_data_detected(rcvd_idle_data[16]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[16]),
	     .eie_detected(rcvd_eie[16]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[16]),
             .idle_os_detected(rcvd_idle_os[16]),
             .fts_os_detected(rcvd_fts_os[16]),
             .ts1_detected(rcvd_ts1[16]),
             .ts2_detected(rcvd_ts2[16]),
             .lane_num_detected(rcvd_lane_num[16]),
             .link_num_detected(rcvd_link_num[16]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[16]),
             .gen2_data_rate_detected(rcvd_gen2[16]),
             .autonomous_data_rate_detected(rcvd_autonomous[16]),
             .speed_change_data_rate_detected(rcvd_speed_change[16]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[16]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[16]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[16]),
             .loopback_detected(rcvd_loopback[16]),
             .disable_detected(rcvd_disable[16]),
             .disable_scrambling_detected(rcvd_no_scramble[16]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[16]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[16])
             );

  // Lane 17

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    17,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE17_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[17] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB17:LSB17]),
             .symbol_data_minus(int_rx_symbols_n[MSB17:LSB17]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[143:136]),
             .pci_10b_code_violation_n(rx_10b_code_violation[17]),
             .d_or_k_code(rx_d_or_k_code[17]),
 
             .pci_10b_data(rx_10b_data[179:170]),
             .parallel_symbol_valid(rx_valid_code[17]),
             .current_rd(rx_current_rd[17]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[17]),
             .fifo_almost_full(deskew_fifo_full[17]),
	     .fifo_empty(deskew_fifo_empty[17]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[143:136]),
             .link_number(link_number_rx[143:136]),
             .lane_0_detected(rx_lane_0_detected[17]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[143:136]),
             .electrical_idle_detected(rx_eidle[17]),
             .idle_data_detected(rcvd_idle_data[17]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[17]),
	     .eie_detected(rcvd_eie[17]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[17]),
             .idle_os_detected(rcvd_idle_os[17]),
             .fts_os_detected(rcvd_fts_os[17]),
             .ts1_detected(rcvd_ts1[17]),
             .ts2_detected(rcvd_ts2[17]),
             .lane_num_detected(rcvd_lane_num[17]),
             .link_num_detected(rcvd_link_num[17]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[17]),
             .gen2_data_rate_detected(rcvd_gen2[17]),
             .autonomous_data_rate_detected(rcvd_autonomous[17]),
             .speed_change_data_rate_detected(rcvd_speed_change[17]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[17]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[17]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[17]),
             .loopback_detected(rcvd_loopback[17]),
             .disable_detected(rcvd_disable[17]),
             .disable_scrambling_detected(rcvd_no_scramble[17]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[17]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[17])
             );

  // Lane 18
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    18,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE18_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[18] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB18:LSB18]),
             .symbol_data_minus(int_rx_symbols_n[MSB18:LSB18]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[151:144]),
             .pci_10b_code_violation_n(rx_10b_code_violation[18]),
             .d_or_k_code(rx_d_or_k_code[18]),
              
             .pci_10b_data(rx_10b_data[189:180]),
             .parallel_symbol_valid(rx_valid_code[18]),
             .current_rd(rx_current_rd[18]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[18]),
             .fifo_almost_full(deskew_fifo_full[18]),
	     .fifo_empty(deskew_fifo_empty[18]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[151:144]),
             .link_number(link_number_rx[151:144]),
             .lane_0_detected(rx_lane_0_detected[18]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[151:144]),
             .electrical_idle_detected(rx_eidle[18]),
             .idle_data_detected(rcvd_idle_data[18]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[18]),
	     .eie_detected(rcvd_eie[18]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[18]),
             .idle_os_detected(rcvd_idle_os[18]),
             .fts_os_detected(rcvd_fts_os[18]),
             .ts1_detected(rcvd_ts1[18]),
             .ts2_detected(rcvd_ts2[18]),
             .lane_num_detected(rcvd_lane_num[18]),
             .link_num_detected(rcvd_link_num[18]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[18]),
             .gen2_data_rate_detected(rcvd_gen2[18]),
             .autonomous_data_rate_detected(rcvd_autonomous[18]),
             .speed_change_data_rate_detected(rcvd_speed_change[18]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[18]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[18]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[18]),
             .loopback_detected(rcvd_loopback[18]),
             .disable_detected(rcvd_disable[18]),
             .disable_scrambling_detected(rcvd_no_scramble[18]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[18]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[18])
             );

  // Lane 19

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    19,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE19_RX (
             .reset(reset),
             .areset(areset),
              
             .clk(rx_clk_gate_lane[19] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB19:LSB19]),
             .symbol_data_minus(int_rx_symbols_n[MSB19:LSB19]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[159:152]),
             .pci_10b_code_violation_n(rx_10b_code_violation[19]),
             .d_or_k_code(rx_d_or_k_code[19]),
 
             .pci_10b_data(rx_10b_data[199:190]),
             .parallel_symbol_valid(rx_valid_code[19]),
             .current_rd(rx_current_rd[19]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[19]),
             .fifo_almost_full(deskew_fifo_full[19]),
	     .fifo_empty(deskew_fifo_empty[19]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[159:152]),
             .link_number(link_number_rx[159:152]),
             .lane_0_detected(rx_lane_0_detected[19]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[159:152]),
             .electrical_idle_detected(rx_eidle[19]),
             .idle_data_detected(rcvd_idle_data[19]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[19]),
	     .eie_detected(rcvd_eie[19]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[19]),
             .idle_os_detected(rcvd_idle_os[19]),
             .fts_os_detected(rcvd_fts_os[19]),
             .ts1_detected(rcvd_ts1[19]),
             .ts2_detected(rcvd_ts2[19]),
             .lane_num_detected(rcvd_lane_num[19]),
             .link_num_detected(rcvd_link_num[19]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[19]),
             .gen2_data_rate_detected(rcvd_gen2[19]),
             .autonomous_data_rate_detected(rcvd_autonomous[19]),
             .speed_change_data_rate_detected(rcvd_speed_change[19]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[19]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[19]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[19]),
             .loopback_detected(rcvd_loopback[19]),
             .disable_detected(rcvd_disable[19]),
             .disable_scrambling_detected(rcvd_no_scramble[19]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[19]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[19])
             );

  // Lane 20
              
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    20,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE20_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[20] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB20:LSB20]),
             .symbol_data_minus(int_rx_symbols_n[MSB20:LSB20]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[167:160]),
             .pci_10b_code_violation_n(rx_10b_code_violation[20]),
             .d_or_k_code(rx_d_or_k_code[20]),
 
             .pci_10b_data(rx_10b_data[209:200]),
             .parallel_symbol_valid(rx_valid_code[20]),
             .current_rd(rx_current_rd[20]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[20]),
             .fifo_almost_full(deskew_fifo_full[20]),
	     .fifo_empty(deskew_fifo_empty[20]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[167:160]),
             .link_number(link_number_rx[167:160]),
             .lane_0_detected(rx_lane_0_detected[20]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[167:160]),
             .electrical_idle_detected(rx_eidle[20]),
             .idle_data_detected(rcvd_idle_data[20]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[20]),
	     .eie_detected(rcvd_eie[20]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[20]),
             .idle_os_detected(rcvd_idle_os[20]),
             .fts_os_detected(rcvd_fts_os[20]),
             .ts1_detected(rcvd_ts1[20]),
             .ts2_detected(rcvd_ts2[20]),
             .lane_num_detected(rcvd_lane_num[20]),
             .link_num_detected(rcvd_link_num[20]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[20]),
             .gen2_data_rate_detected(rcvd_gen2[20]),
             .autonomous_data_rate_detected(rcvd_autonomous[20]),
             .speed_change_data_rate_detected(rcvd_speed_change[20]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[20]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[20]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[20]),
             .loopback_detected(rcvd_loopback[20]),
             .disable_detected(rcvd_disable[20]),
             .disable_scrambling_detected(rcvd_no_scramble[20]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[20]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[20])
             );

  // Lane 21

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    21,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE21_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[21] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB21:LSB21]),
             .symbol_data_minus(int_rx_symbols_n[MSB21:LSB21]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[175:168]),
             .pci_10b_code_violation_n(rx_10b_code_violation[21]),
             .d_or_k_code(rx_d_or_k_code[21]),
 
             .pci_10b_data(rx_10b_data[219:210]),
             .parallel_symbol_valid(rx_valid_code[21]),
             .current_rd(rx_current_rd[21]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[21]),
             .fifo_almost_full(deskew_fifo_full[21]),
	     .fifo_empty(deskew_fifo_empty[21]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[175:168]),
             .link_number(link_number_rx[175:168]),
             .lane_0_detected(rx_lane_0_detected[21]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[175:168]),
             .electrical_idle_detected(rx_eidle[21]),
             .idle_data_detected(rcvd_idle_data[21]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[21]),
	     .eie_detected(rcvd_eie[21]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[21]),
             .idle_os_detected(rcvd_idle_os[21]),
             .fts_os_detected(rcvd_fts_os[21]),
             .ts1_detected(rcvd_ts1[21]),
             .ts2_detected(rcvd_ts2[21]),
             .lane_num_detected(rcvd_lane_num[21]),
             .link_num_detected(rcvd_link_num[21]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[21]),
             .gen2_data_rate_detected(rcvd_gen2[21]),
             .autonomous_data_rate_detected(rcvd_autonomous[21]),
             .speed_change_data_rate_detected(rcvd_speed_change[21]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[21]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[21]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[21]),
             .loopback_detected(rcvd_loopback[21]),
             .disable_detected(rcvd_disable[21]),
             .disable_scrambling_detected(rcvd_no_scramble[21]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[21]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[21])
             );

  // Lane 22
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    22,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE22_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[22] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB22:LSB22]),
             .symbol_data_minus(int_rx_symbols_n[MSB22:LSB22]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[183:176]),
             .pci_10b_code_violation_n(rx_10b_code_violation[22]),
             .d_or_k_code(rx_d_or_k_code[22]),
     
             .pci_10b_data(rx_10b_data[229:220]),
             .parallel_symbol_valid(rx_valid_code[22]),
             .current_rd(rx_current_rd[22]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[22]),
             .fifo_almost_full(deskew_fifo_full[22]),
	     .fifo_empty(deskew_fifo_empty[22]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[183:176]),
             .link_number(link_number_rx[183:176]),
             .lane_0_detected(rx_lane_0_detected[22]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[183:176]),
             .electrical_idle_detected(rx_eidle[22]),
             .idle_data_detected(rcvd_idle_data[22]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[22]),
	     .eie_detected(rcvd_eie[22]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[22]),
             .idle_os_detected(rcvd_idle_os[22]),
             .fts_os_detected(rcvd_fts_os[22]),
             .ts1_detected(rcvd_ts1[22]),
             .ts2_detected(rcvd_ts2[22]),
             .lane_num_detected(rcvd_lane_num[22]),
             .link_num_detected(rcvd_link_num[22]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[22]),
             .gen2_data_rate_detected(rcvd_gen2[22]),
             .autonomous_data_rate_detected(rcvd_autonomous[22]),
             .speed_change_data_rate_detected(rcvd_speed_change[22]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[22]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[22]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[22]),
             .loopback_detected(rcvd_loopback[22]),
             .disable_detected(rcvd_disable[22]),
             .disable_scrambling_detected(rcvd_no_scramble[22]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[22]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[22])
             );

  // Lane 23
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    23,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE23_RX (
             .reset(reset),
             .areset(areset),
              
             .clk(rx_clk_gate_lane[23] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB23:LSB23]),
             .symbol_data_minus(int_rx_symbols_n[MSB23:LSB23]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[191:184]),
             .pci_10b_code_violation_n(rx_10b_code_violation[23]),
             .d_or_k_code(rx_d_or_k_code[23]),
 
             .pci_10b_data(rx_10b_data[239:230]),
             .parallel_symbol_valid(rx_valid_code[23]),
             .current_rd(rx_current_rd[23]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[23]),
             .fifo_almost_full(deskew_fifo_full[23]),
	     .fifo_empty(deskew_fifo_empty[23]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[191:184]),
             .link_number(link_number_rx[191:184]),
             .lane_0_detected(rx_lane_0_detected[23]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[191:184]),
             .electrical_idle_detected(rx_eidle[23]),
             .idle_data_detected(rcvd_idle_data[23]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[23]),
	     .eie_detected(rcvd_eie[23]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[23]),
             .idle_os_detected(rcvd_idle_os[23]),
             .fts_os_detected(rcvd_fts_os[23]),
             .ts1_detected(rcvd_ts1[23]),
             .ts2_detected(rcvd_ts2[23]),
             .lane_num_detected(rcvd_lane_num[23]),
             .link_num_detected(rcvd_link_num[23]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[23]),
             .gen2_data_rate_detected(rcvd_gen2[23]),
             .autonomous_data_rate_detected(rcvd_autonomous[23]),
             .speed_change_data_rate_detected(rcvd_speed_change[23]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[23]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[23]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[23]),
             .loopback_detected(rcvd_loopback[23]),
             .disable_detected(rcvd_disable[23]),
             .disable_scrambling_detected(rcvd_no_scramble[23]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[23]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[23])
             );

  // Lane 24
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    24,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE24_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[24] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB24:LSB24]),
             .symbol_data_minus(int_rx_symbols_n[MSB24:LSB24]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[199:192]),
             .pci_10b_code_violation_n(rx_10b_code_violation[24]),
             .d_or_k_code(rx_d_or_k_code[24]),
 
             .pci_10b_data(rx_10b_data[249:240]),
             .parallel_symbol_valid(rx_valid_code[24]),
             .current_rd(rx_current_rd[24]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[24]),
             .fifo_almost_full(deskew_fifo_full[24]),
	     .fifo_empty(deskew_fifo_empty[24]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[199:192]),
             .link_number(link_number_rx[199:192]),
             .lane_0_detected(rx_lane_0_detected[24]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[199:192]),
             .electrical_idle_detected(rx_eidle[24]),
             .idle_data_detected(rcvd_idle_data[24]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[24]),
	     .eie_detected(rcvd_eie[24]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[24]),
             .idle_os_detected(rcvd_idle_os[24]),
             .fts_os_detected(rcvd_fts_os[24]),
             .ts1_detected(rcvd_ts1[24]),
             .ts2_detected(rcvd_ts2[24]),
             .lane_num_detected(rcvd_lane_num[24]),
             .link_num_detected(rcvd_link_num[24]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[24]),
             .gen2_data_rate_detected(rcvd_gen2[24]),
             .autonomous_data_rate_detected(rcvd_autonomous[24]),
             .speed_change_data_rate_detected(rcvd_speed_change[24]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[24]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[24]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[24]),
             .loopback_detected(rcvd_loopback[24]),
             .disable_detected(rcvd_disable[24]),
             .disable_scrambling_detected(rcvd_no_scramble[24]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[24]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[24])  
             );

  // Lane 25
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    25,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE25_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[25] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB25:LSB25]),
             .symbol_data_minus(int_rx_symbols_n[MSB25:LSB25]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[207:200]),
             .pci_10b_code_violation_n(rx_10b_code_violation[25]),
             .d_or_k_code(rx_d_or_k_code[25]),
 
             .pci_10b_data(rx_10b_data[259:250]),
             .parallel_symbol_valid(rx_valid_code[25]),
             .current_rd(rx_current_rd[25]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[25]),
             .fifo_almost_full(deskew_fifo_full[25]),
	     .fifo_empty(deskew_fifo_empty[25]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[207:200]),
             .link_number(link_number_rx[207:200]),
             .lane_0_detected(rx_lane_0_detected[25]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[207:200]),
             .electrical_idle_detected(rx_eidle[25]),
             .idle_data_detected(rcvd_idle_data[25]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[25]),
	     .eie_detected(rcvd_eie[25]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[25]),
             .idle_os_detected(rcvd_idle_os[25]),
             .fts_os_detected(rcvd_fts_os[25]),
             .ts1_detected(rcvd_ts1[25]),
             .ts2_detected(rcvd_ts2[25]),
             .lane_num_detected(rcvd_lane_num[25]),
             .link_num_detected(rcvd_link_num[25]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[25]),
             .gen2_data_rate_detected(rcvd_gen2[25]),
             .autonomous_data_rate_detected(rcvd_autonomous[25]),
             .speed_change_data_rate_detected(rcvd_speed_change[25]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[25]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[25]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[25]),
             .loopback_detected(rcvd_loopback[25]),
             .disable_detected(rcvd_disable[25]),
             .disable_scrambling_detected(rcvd_no_scramble[25]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[25]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[25])  
             );

  // Lane 26
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    26,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE26_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[26] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB26:LSB26]),
             .symbol_data_minus(int_rx_symbols_n[MSB26:LSB26]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[215:208]),
             .pci_10b_code_violation_n(rx_10b_code_violation[26]),
             .d_or_k_code(rx_d_or_k_code[26]),
 
             .pci_10b_data(rx_10b_data[269:260]),
             .parallel_symbol_valid(rx_valid_code[26]),
             .current_rd(rx_current_rd[26]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[26]),
             .fifo_almost_full(deskew_fifo_full[26]),
	     .fifo_empty(deskew_fifo_empty[26]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[215:208]),
             .link_number(link_number_rx[215:208]),
             .lane_0_detected(rx_lane_0_detected[26]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[215:208]),
             .electrical_idle_detected(rx_eidle[26]),
             .idle_data_detected(rcvd_idle_data[26]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[26]),
	     .eie_detected(rcvd_eie[26]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[26]),
             .idle_os_detected(rcvd_idle_os[26]),
             .fts_os_detected(rcvd_fts_os[26]),
             .ts1_detected(rcvd_ts1[26]),
             .ts2_detected(rcvd_ts2[26]),
             .lane_num_detected(rcvd_lane_num[26]),
             .link_num_detected(rcvd_link_num[26]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[26]),
             .gen2_data_rate_detected(rcvd_gen2[26]),
             .autonomous_data_rate_detected(rcvd_autonomous[26]),
             .speed_change_data_rate_detected(rcvd_speed_change[26]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[26]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[26]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[26]),
             .loopback_detected(rcvd_loopback[26]),
             .disable_detected(rcvd_disable[26]),
             .disable_scrambling_detected(rcvd_no_scramble[26]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[26]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[26])  
             );

  // Lane 27

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    27,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE27_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[27] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB27:LSB27]),
             .symbol_data_minus(int_rx_symbols_n[MSB27:LSB27]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[223:216]),
             .pci_10b_code_violation_n(rx_10b_code_violation[27]),
             .d_or_k_code(rx_d_or_k_code[27]),
 
             .pci_10b_data(rx_10b_data[279:270]),
             .parallel_symbol_valid(rx_valid_code[27]),
             .current_rd(rx_current_rd[27]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[27]),
             .fifo_almost_full(deskew_fifo_full[27]),
	     .fifo_empty(deskew_fifo_empty[27]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[223:216]),
             .link_number(link_number_rx[223:216]),
             .lane_0_detected(rx_lane_0_detected[27]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[223:216]),
             .electrical_idle_detected(rx_eidle[27]),
             .idle_data_detected(rcvd_idle_data[27]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[27]),
	     .eie_detected(rcvd_eie[27]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[27]),
             .idle_os_detected(rcvd_idle_os[27]),
             .fts_os_detected(rcvd_fts_os[27]),
             .ts1_detected(rcvd_ts1[27]),
             .ts2_detected(rcvd_ts2[27]),
             .lane_num_detected(rcvd_lane_num[27]),
             .link_num_detected(rcvd_link_num[27]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[27]),
             .gen2_data_rate_detected(rcvd_gen2[27]),
             .autonomous_data_rate_detected(rcvd_autonomous[27]),
             .speed_change_data_rate_detected(rcvd_speed_change[27]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[27]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[27]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[27]),
             .loopback_detected(rcvd_loopback[27]),
             .disable_detected(rcvd_disable[27]),
             .disable_scrambling_detected(rcvd_no_scramble[27]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[27]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[27])  
             );

  // Lane 28
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    28,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE28_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[28] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB28:LSB28]),
             .symbol_data_minus(int_rx_symbols_n[MSB28:LSB28]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[231:224]),
             .pci_10b_code_violation_n(rx_10b_code_violation[28]),
             .d_or_k_code(rx_d_or_k_code[28]),
 
             .pci_10b_data(rx_10b_data[289:280]),
             .parallel_symbol_valid(rx_valid_code[28]),
             .current_rd(rx_current_rd[28]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[28]),
             .fifo_almost_full(deskew_fifo_full[28]),
	     .fifo_empty(deskew_fifo_empty[28]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
             .link_number(link_number_rx[231:224]),
	     .n_fts(rx_n_fts[231:224]),
             .lane_0_detected(rx_lane_0_detected[28]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[231:224]),
             .electrical_idle_detected(rx_eidle[28]),
             .idle_data_detected(rcvd_idle_data[28]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[28]),
	     .eie_detected(rcvd_eie[28]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[28]),
             .idle_os_detected(rcvd_idle_os[28]),
             .fts_os_detected(rcvd_fts_os[28]),
             .ts1_detected(rcvd_ts1[28]),
             .ts2_detected(rcvd_ts2[28]),
             .lane_num_detected(rcvd_lane_num[28]),
             .link_num_detected(rcvd_link_num[28]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[28]),
             .gen2_data_rate_detected(rcvd_gen2[28]),
             .autonomous_data_rate_detected(rcvd_autonomous[28]),
             .speed_change_data_rate_detected(rcvd_speed_change[28]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[28]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[28]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[28]),
             .loopback_detected(rcvd_loopback[28]),
             .disable_detected(rcvd_disable[28]),
             .disable_scrambling_detected(rcvd_no_scramble[28]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[28]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[28])  
             );
  // Lane 29
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    29,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE29_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[29] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB29:LSB29]),
             .symbol_data_minus(int_rx_symbols_n[MSB29:LSB29]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[239:232]),
             .pci_10b_code_violation_n(rx_10b_code_violation[29]),
             .d_or_k_code(rx_d_or_k_code[29]),
 
             .pci_10b_data(rx_10b_data[299:290]),
             .parallel_symbol_valid(rx_valid_code[29]),
             .current_rd(rx_current_rd[29]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[29]),
             .fifo_almost_full(deskew_fifo_full[29]),
	     .fifo_empty(deskew_fifo_empty[29]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[239:232]),
             .link_number(link_number_rx[239:232]),
             .lane_0_detected(rx_lane_0_detected[29]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[239:232]),
             .electrical_idle_detected(rx_eidle[29]),
             .idle_data_detected(rcvd_idle_data[29]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[29]),
	     .eie_detected(rcvd_eie[29]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[29]),
             .idle_os_detected(rcvd_idle_os[29]),
             .fts_os_detected(rcvd_fts_os[29]),
             .ts1_detected(rcvd_ts1[29]),
             .ts2_detected(rcvd_ts2[29]),
             .lane_num_detected(rcvd_lane_num[29]),
             .link_num_detected(rcvd_link_num[29]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[29]),
             .gen2_data_rate_detected(rcvd_gen2[29]),
             .autonomous_data_rate_detected(rcvd_autonomous[29]),
             .speed_change_data_rate_detected(rcvd_speed_change[29]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[29]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[29]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[29]),
             .loopback_detected(rcvd_loopback[29]),
             .disable_detected(rcvd_disable[29]),
             .disable_scrambling_detected(rcvd_no_scramble[29]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[29]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[29])  
             );

  // Lane 30

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    30,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE30_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[30] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB30:LSB30]),
             .symbol_data_minus(int_rx_symbols_n[MSB30:LSB30]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[247:240]),
             .pci_10b_code_violation_n(rx_10b_code_violation[30]),
             .d_or_k_code(rx_d_or_k_code[30]),
 
             .pci_10b_data(rx_10b_data[309:300]),
             .parallel_symbol_valid(rx_valid_code[30]),
             .current_rd(rx_current_rd[30]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[30]),
             .fifo_almost_full(deskew_fifo_full[30]),
	     .fifo_empty(deskew_fifo_empty[30]),
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[247:240]),
             .link_number(link_number_rx[247:240]),
             .lane_0_detected(rx_lane_0_detected[30]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[247:240]),
             .electrical_idle_detected(rx_eidle[30]),
             .idle_data_detected(rcvd_idle_data[30]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[30]),
	     .eie_detected(rcvd_eie[30]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[30]),
             .idle_os_detected(rcvd_idle_os[30]),
             .fts_os_detected(rcvd_fts_os[30]),
             .ts1_detected(rcvd_ts1[30]),
             .ts2_detected(rcvd_ts2[30]),
             .lane_num_detected(rcvd_lane_num[30]),
             .link_num_detected(rcvd_link_num[30]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[30]),
             .gen2_data_rate_detected(rcvd_gen2[30]),
             .autonomous_data_rate_detected(rcvd_autonomous[30]),
             .speed_change_data_rate_detected(rcvd_speed_change[30]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[30]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[30]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[30]),
             .loopback_detected(rcvd_loopback[30]),
             .disable_detected(rcvd_disable[30]),
             .disable_scrambling_detected(rcvd_no_scramble[30]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[30]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[30])  
             );

  // Lane 31

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     Constraints_Mode,
    /* INTERFACE_TYPE    */    INTERFACE_TYPE,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    31,
    /* DOUBLE_DATA_RATE     */ DOUBLE_DATA_RATE,
    /* ELECTRICAL_IDLE_VAL */  ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */           0,
    /* ENABLE_DATA_PLUS_MINUS_CHECK */ ENABLE_DATA_PLUS_MINUS_CHECK,
    /* PCI_EXPRESS_GEN2 */       PCI_EXPRESS_GEN2)
    LANE31_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[31] & rx_clk),
             .symbol_data_plus(int_rx_symbols_p[MSB31:LSB31]),
             .symbol_data_minus(int_rx_symbols_n[MSB31:LSB31]),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[255:248]),
             .pci_10b_code_violation_n(rx_10b_code_violation[31]),
             .d_or_k_code(rx_d_or_k_code[31]),
 
             .pci_10b_data(rx_10b_data[319:310]),
             .parallel_symbol_valid(rx_valid_code[31]),
             .current_rd(rx_current_rd[31]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[31]),
             .fifo_almost_full(deskew_fifo_full[31]),
	     .fifo_empty(deskew_fifo_empty[31]), 
  // PCI_EXPRESS_GEN2 code start
             .current_speed_5gt(current_speed_5gt),
	     .stable_speed_5gt(stable_speed_5gt),    
  // PCI_EXPRESS_GEN2 code end
	     .rx_valid_in (1'b0), // Specific to PIPE 
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[255:248]),
             .link_number(link_number_rx[255:248]),
             .lane_0_detected(rx_lane_0_detected[31]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[255:248]),
             .electrical_idle_detected(rx_eidle[31]),
             .idle_data_detected(rcvd_idle_data[31]),
  // PCI_EXPRESS_GEN2 code start
	     .eie_os_detected(rcvd_eie_os[31]),
	     .eie_detected(rcvd_eie[31]),  
  // PCI_EXPRESS_GEN2 code end	       
             .skp_os_detected(rcvd_skp_os[31]),
             .idle_os_detected(rcvd_idle_os[31]),
             .fts_os_detected(rcvd_fts_os[31]),
             .ts1_detected(rcvd_ts1[31]),
             .ts2_detected(rcvd_ts2[31]),
             .lane_num_detected(rcvd_lane_num[31]),
             .link_num_detected(rcvd_link_num[31]),
  // PCI_EXPRESS_GEN2 code start					  
             .gen1_data_rate_detected(rcvd_gen1[31]),
             .gen2_data_rate_detected(rcvd_gen2[31]),
             .autonomous_data_rate_detected(rcvd_autonomous[31]),
             .speed_change_data_rate_detected(rcvd_speed_change[31]),
	     .link_ctrl_compliance_receive_detected(rcvd_compliance_receive[31]),
             .link_ctrl_compliance_receive_loopback_detected(rcvd_compliance_receive_loopback[31]),
  // PCI_EXPRESS_GEN2 code end	       
             .link_ctrl_reset_detected(rcvd_reset[31]),
             .loopback_detected(rcvd_loopback[31]),
             .disable_detected(rcvd_disable[31]),
             .disable_scrambling_detected(rcvd_no_scramble[31]),
	     .skp_added(),
             .skp_removed(),   
	     .compliance_check_enable(compliance_check_enable),
	     .deskew_d_or_k_code(),
             .compliance_pattern_detected(rcvd_comp_pattern[31]),
	     .modified_compliance_pattern_detected(rcvd_modified_comp_pattern[31])  
             );

  //----------------------------------------------------------
  // Link training module instantiations
  //----------------------------------------------------------

  assign int_tx_eidle = tx_eidle;
  assign int_tx_10b_code_violation = tx_10b_code_violation;
  // PCI_EXPRESS_GEN2 code start
  assign int_xmtd_eie_os = xmtd_eie_os;
  assign int_xmtd_eie = xmtd_eie;  
   // PCI_EXPRESS_GEN2 code end   
  assign int_xmtd_skp_os = xmtd_skp_os;
  assign int_xmtd_idle_os = xmtd_idle_os;
  assign int_xmtd_fts_os = xmtd_fts_os;
  assign int_xmtd_ts1 = xmtd_ts1;
  assign int_xmtd_ts2 = xmtd_ts2;
  assign int_xmtd_lane_num = xmtd_lane_num;
  assign int_xmtd_link_num = xmtd_link_num;
  // PCI_EXPRESS_GEN2 code start
  assign int_xmtd_gen1 = xmtd_gen1; 
  assign int_xmtd_gen2 = xmtd_gen2;
  assign int_xmtd_autonomous = xmtd_autonomous; 
  assign int_xmtd_speed_change = xmtd_speed_change; 
  assign int_xmtd_compliance_receive = xmtd_compliance_receive; 
  assign int_xmtd_compliance_receive_loopback = xmtd_compliance_receive_loopback; 
  // PCI_EXPRESS_GEN2 code end   
  assign int_xmtd_reset = xmtd_reset;
  assign int_xmtd_loopback = xmtd_loopback;
  assign int_xmtd_disable = xmtd_disable;
  assign int_xmtd_no_scramble = xmtd_no_scramble;
  assign int_xmtd_idle_data = xmtd_idle_data;
  assign int_xmtd_comp_pattern = xmtd_comp_pattern;
  // PCI_EXPRESS_GEN2 code start 
  assign int_xmtd_modified_comp_pattern = xmtd_modified_comp_pattern;
  // PCI_EXPRESS_GEN2 code end
   
  assign int_rx_eidle = rx_eidle; 
  assign int_rx_10b_code_violation = rx_10b_code_violation;
   
  // PCI_EXPRESS_GEN2 code start
  assign int_rcvd_eie_os = rcvd_eie_os;
  assign int_rcvd_eie = rcvd_eie;  
   // PCI_EXPRESS_GEN2 code end
  assign int_rcvd_skp_os = rcvd_skp_os; 
  assign int_rcvd_idle_os = rcvd_idle_os; 
  assign int_rcvd_fts_os = rcvd_fts_os;
  assign int_rcvd_ts1 = rcvd_ts1; 
  assign int_rcvd_ts2 = rcvd_ts2;
  assign int_rcvd_lane_num = rcvd_lane_num;    
  assign int_rcvd_link_num = rcvd_link_num;
  // PCI_EXPRESS_GEN2 code start
  assign int_rcvd_gen1 = rcvd_gen1; 
  assign int_rcvd_gen2 = rcvd_gen2;
  assign int_rcvd_autonomous = rcvd_autonomous; 
  assign int_rcvd_speed_change = rcvd_speed_change; 
  assign int_rcvd_compliance_receive = rcvd_compliance_receive; 
  assign int_rcvd_compliance_receive_loopback = rcvd_compliance_receive_loopback; 
  // PCI_EXPRESS_GEN2 code end   
  assign int_rcvd_reset = rcvd_reset; 
  assign int_rcvd_loopback = rcvd_loopback; 
  assign int_rcvd_disable = rcvd_disable; 
  assign int_rcvd_no_scramble = rcvd_no_scramble;
  assign int_rcvd_idle_data = rcvd_idle_data; 
  assign int_rcvd_comp_pattern = rcvd_comp_pattern;
  // PCI_EXPRESS_GEN2 code start 
  assign int_rcvd_modified_comp_pattern = rcvd_modified_comp_pattern;
  // PCI_EXPRESS_GEN2 code end  

  // tx link training module instantiation

  qvl_pci_express_link_training_monitor #(
    /* Constraints_Mode  */          Constraints_Mode,
    /* LINK_WIDTH           */       MAX_LINK_WIDTH,
    /* PCI_EXPRESS_DEVICE_TYPE */    PCI_EXPRESS_DEVICE_TYPE,
    /* DOUBLE_DATA_RATE      */      DOUBLE_DATA_RATE,
    /* MIN_TS1_COUNT */              MIN_TS1_COUNT,
    /*ZI_L1_40NS_COUNT*/             (INTERFACE_TYPE == 0 ? 100 : 10),	// GEN2 parameter				  
    /* PCI_EXPRESS_GEN2 */           PCI_EXPRESS_GEN2)                  // GEN2 parameter

              LINK_TRAIN(
			   .reset(reset),
                           .areset(areset),
                           .clk(tx_clk),
			   .rx_clk(rx_clk),
			   .level_select(tx_level_select),
			   .rx_level_select(rx_level_select),
			   .skip_link_training(skip_link_training),
			   .phy_layer_checks_disable(phy_layer_checks_disable),
			   .extended_fts_sequence(extended_sync_enable),
			   .tx_valid(int_tx_valid),
                           .tx_eidle(int_tx_eidle), 
			   .tx_code_violation(int_tx_10b_code_violation),
  // PCI_EXPRESS_GEN2 code start			 
			   .xmtd_eie_ordered_set(int_xmtd_eie_os),
			   .xmtd_eie_sym(int_xmtd_eie),
  // PCI_EXPRESS_GEN2 code end			 
                           .xmtd_skip_ordered_set(int_xmtd_skp_os), 
                           .xmtd_idle_os(int_xmtd_idle_os), 
                           .xmtd_fts_os(int_xmtd_fts_os), 
                           .xmtd_ts1(int_xmtd_ts1),
                           .xmtd_ts2(int_xmtd_ts2), 
                           .xmtd_lane_num(int_xmtd_lane_num),
                           .xmtd_link_num(int_xmtd_link_num),
  // PCI_EXPRESS_GEN2 code start
                           .xmtd_gen1(int_xmtd_gen1), 
                           .xmtd_gen2(int_xmtd_gen2),
                           .xmtd_autonomous(int_xmtd_autonomous), 
                           .xmtd_speed_change(int_xmtd_speed_change), 
                           .xmtd_compliance_receive(int_xmtd_compliance_receive), 
                           .xmtd_compliance_receive_loopback(int_xmtd_compliance_receive_loopback), 
  // PCI_EXPRESS_GEN2 code end			 
                           .xmtd_reset(int_xmtd_reset),
			   .xmtd_loopback(int_xmtd_loopback),
			   .xmtd_disable(int_xmtd_disable),
			   .xmtd_no_scramble(int_xmtd_no_scramble),
			   .xmtd_idle_data(int_xmtd_idle_data),
			   .xmtd_compliance_pattern(int_xmtd_comp_pattern),
			   .tx_dllp_tlp_on_link(xmting_dllp_tlp),
// PCI_EXPRESS_GEN2 code start			 
			   .tx_tlp(tlp_xmtd_tx), 
			   .tx_dllp(dllp_xmtd_tx),
// PCI_EXPRESS_GEN2 code end                           
                           // Input ports

                           .int_rx_valid(int_rx_valid),
                           .int_rx_eidle(int_rx_eidle),
			   .int_rx_10b_code_violation(int_rx_10b_code_violation),
  // PCI_EXPRESS_GEN2 code start			 
			   .int_rcvd_eie_ordered_set(int_rcvd_eie_os),
			   .int_rcvd_eie_sym(int_rcvd_eie),
  // PCI_EXPRESS_GEN2 code end
			   .int_rcvd_skip_ordered_set(int_rcvd_skp_os),
			   .int_rcvd_idle_os(int_rcvd_idle_os),
			   .int_rcvd_fts_os(int_rcvd_fts_os),
			   .int_rcvd_ts1(int_rcvd_ts1),
			   .int_rcvd_ts2(int_rcvd_ts2),
			   .int_rcvd_lane_num(int_rcvd_lane_num),
                           .int_rcvd_link_num(int_rcvd_link_num),
  // PCI_EXPRESS_GEN2 code start
                           .int_rcvd_gen1(int_rcvd_gen1), 
                           .int_rcvd_gen2(int_rcvd_gen2),
                           .int_rcvd_autonomous(int_rcvd_autonomous), 
                           .int_rcvd_speed_change(int_rcvd_speed_change), 
                           .int_rcvd_compliance_receive(int_rcvd_compliance_receive), 
                           .int_rcvd_compliance_receive_loopback(int_rcvd_compliance_receive_loopback), 
  // PCI_EXPRESS_GEN2 code end			 
			   .int_rcvd_reset(int_rcvd_reset),
			   .int_rcvd_loopback(int_rcvd_loopback),
			   .int_rcvd_disable(int_rcvd_disable),
			   .int_rcvd_no_scramble(int_rcvd_no_scramble),
			   .int_rcvd_idle_data(int_rcvd_idle_data),
			   .rx_dllp_tlp_on_link(rcving_dllp_tlp),
// PCI_EXPRESS_GEN2 code start			 
			   .rx_tlp(tlp_xmtd_rx), 
			   .rx_dllp(dllp_xmtd_rx),
// PCI_EXPRESS_GEN2 code end			 
	                   .tx_n_fts_field_not_same(tx_n_fts_field_not_same),
                           .rx_n_fts_field_not_same(rx_n_fts_field_not_same),
  // Additional gen1 code start			  
			   .tx_link_num_field_not_same(tx_link_num_field_not_same),
                           .rx_link_num_field_not_same(rx_link_num_field_not_same),
			   .tx_link_num(link_number_tx[7:0]),
			   .rx_link_num(link_number_rx[7:0]),
  // Additional gen1 code end
                           .rx_n_fts(rx_n_fts[7:0]),

                           .xmtd_pm_enter_command_flag(xmtd_pm_enter_command_flag),
                           .rcvd_pm_enter_command_flag(rcvd_pm_enter_command_flag),

			   .L0s_entry_supported(L0s_entry_supported),

			   // Output ports

                           .disable_descramble(disable_descramble),
			   .link_width_negotiated(link_width_negotiated),
  // PCI_EXPRESS_GEN2 code start
                           .current_speed_5gt(current_speed_5gt),
			   .stable_speed_5gt(stable_speed_5gt),
			   .xmtd_eie_before_fts_count(xmtd_eie_before_fts_count),
			   .rcvd_eie_before_fts_count(rcvd_eie_before_fts_count),
			   .changed_speed_recovery(changed_speed_recovery),
  // PCI_EXPRESS_GEN2 code end
                           .tx_link_width(link_width),
			   .link_width_bitmap(link_width_bitmap),
                           .tx_phy_status(phy_status),
			   .enable_compliance_pattern_check(compliance_check_enable),
  // Additional gen1 code start			  			 
			   .ltssm_present_state(ltssm_present_state),
			   .ltssm_next_state(ltssm_next_state),
  // Additional gen1 code end			  			 
                           .deskew_control(deskew_control)
                           );

  //-----------------------------------------------------------------
  // TX and RX monitor module instantiations
  //-----------------------------------------------------------------

  assign int_tx_valid = (tx_valid_code & link_width_bitmap);
  assign int_tx_d_or_k_code = tx_d_or_k_code;
 
  assign int_rx_valid = (rx_valid_code & link_width_bitmap);
  assign int_rx_d_or_k_code = rx_d_or_k_code;

  assign eidle_detected_tx = ((phy_status === 1'b0 &&
		   |(int_tx_eidle & active_lanes_bitmap) === 1'b1) ||
		   (phy_status === 1'b1 &&
		   |(int_tx_eidle & link_width_bitmap) === 1'b1));

  assign eidle_detected_rx = ((phy_status === 1'b0 &&
                   |(int_rx_eidle & active_lanes_bitmap) === 1'b1) ||
                   (phy_status === 1'b1 &&
                   |(int_rx_eidle & link_width_bitmap) === 1'b1)); 

  // tx monitor module instantiations

  qvl_pci_express_phy_monitor #(
    /* Constraints_Mode */         0,
    /* MAX_LINK_WIDTH */           MAX_LINK_WIDTH,
    /* DOUBLE_DATA_RATE */         DOUBLE_DATA_RATE,
    /* PCI_EXPRESS_DEVICE_TYPE */  PCI_EXPRESS_DEVICE_TYPE,
    /* TX_INTERFACE */             1,
    /* INTERFACE_TYPE */           INTERFACE_TYPE,
    /* PCI_EXPRESS_GEN2 */         PCI_EXPRESS_GEN2)
              TX_PHY_MON (
                         .reset(reset),
		         .areset(areset),
			 .clk(tx_clk),
                         .level_select(tx_level_select),
			 .phy_layer_checks_disable(phy_layer_checks_disable),
			 .descrambled_data(int_tx_descrambled_data),
                         .d_or_k_code(int_tx_d_or_k_code),
			 .valid(int_tx_valid),
			 .data_10b_code_violation_n(int_tx_10b_code_violation),
			 .link_width(link_width),
			 .phy_status(phy_status),
			 .dll_status(dll_status),
  // PCI_EXPRESS_GEN2 code start			 
			 .eie_os_detected(|int_xmtd_eie_os),
  // PCI_EXPRESS_GEN2 code end			  
                         .skp_os_detected(|int_xmtd_skp_os),
			 .fts_os_detected(|int_xmtd_fts_os),
                         .idle_data_detected(|int_xmtd_idle_data),
			 .idle_os_detected(|int_xmtd_idle_os),
                         .electrical_idle_detected(eidle_detected_tx),
			 .no_check_edb(1'b0),  // Only for PIPE
			 .xmting_dllp_tlp(xmting_dllp_tlp),
			 .tlp_xmtd(tlp_xmtd_tx),
			 .tlp_count(tlp_count_tx),
			 .dllp_xmtd(dllp_xmtd_tx),
			 .dllp_count(dllp_count_tx),
			 .nullified_tlp_xmtd(nullified_tlp_xmtd_tx),
			 .inc_sdp_stp(tx_inc_sdp_stp),
			 .inc_pad(tx_inc_pad),
			 .inc_end(tx_inc_end),
			 .inc_stp_on_non_zero_lane(tx_inc_stp_on_non_zero_lane)
		         );

  // rx monitor module instantiations

  qvl_pci_express_phy_monitor #(
    /* Constraints_Mode */         Constraints_Mode,
    /* LINK_WIDTH */               MAX_LINK_WIDTH,
    /* DOUBLE_DATA_RATE */         DOUBLE_DATA_RATE,
    /* PCI_EXPRESS_DEVICE_TYPE */  PCI_EXPRESS_DEVICE_TYPE,
    /* TX_INTERFACE */             0,
    /* INTERFACE_TYPE */           INTERFACE_TYPE,
    /* PCI_EXPRESS_GEN2 */         PCI_EXPRESS_GEN2)
             RX_PHY_MON (
                         .reset(reset),
			 .areset(areset),
			 .clk(rx_clk),
                         .level_select(rx_level_select),
			 .phy_layer_checks_disable(phy_layer_checks_disable),
			 .descrambled_data(int_rx_descrambled_data),
                         .d_or_k_code(int_rx_d_or_k_code),
			 .valid(int_rx_valid),
			 .data_10b_code_violation_n(int_rx_10b_code_violation),
                         .link_width(link_width),
                         .phy_status(phy_status),
			 .dll_status(dll_status),
  // PCI_EXPRESS_GEN2 code start			 
			 .eie_os_detected(|int_rcvd_eie_os),
  // PCI_EXPRESS_GEN2 code end
                         .skp_os_detected(|int_rcvd_skp_os),
			 .fts_os_detected(|int_rcvd_fts_os),
                         .idle_data_detected(|int_rcvd_idle_data),
		         .idle_os_detected(|int_rcvd_idle_os),
	                 .electrical_idle_detected(eidle_detected_rx),
			 .no_check_edb(1'b0), // Only for PIPE 
			 .xmting_dllp_tlp(rcving_dllp_tlp),
			 .tlp_xmtd(tlp_xmtd_rx),
			 .tlp_count(tlp_count_rx),
			 .dllp_xmtd(dllp_xmtd_rx),
			 .dllp_count(dllp_count_rx),
			 .nullified_tlp_xmtd(nullified_tlp_xmtd_rx),
			 .inc_sdp_stp(rx_inc_sdp_stp),
			 .inc_pad(rx_inc_pad),
			 .inc_end(rx_inc_end),
			 .inc_stp_on_non_zero_lane(rx_inc_stp_on_non_zero_lane)
			 );


  //-----------------------------------------------------------------
  // Transaction layer blocks instantiation 
  //-----------------------------------------------------------------

  wire [7:0] fc_init1_done;
  wire [7:0] fc_init2_done;
  // If STP is detected then tlp_detected_tx_rx goes 1. 
  wire tlp_detected_tx_rx = ((tx_descrambled_data[7:0] === 8'hfb && tx_d_or_k_code === 1'b1) || 
			     (rx_descrambled_data[7:0] === 8'hfb && rx_d_or_k_code === 1'b1)); 
 
  qvl_pci_express_transaction_layer_pkt_monitor #(
  /* Constraints_Mode */                0,
  /* PCI_EXPRESS_DEVICE_TYPE */         PCI_EXPRESS_DEVICE_TYPE,
  /* MAX_LINK_WIDTH */                  MAX_LINK_WIDTH,       
  /* TX_INTERFACE */                             1,
  /* DOUBLE_DATA_RATE */                DOUBLE_DATA_RATE,
  /* RESERVED_FIELD_CHECK_ENABLE */     RESERVED_FIELD_CHECK_ENABLE,
  /* VENDOR_SPECIFIC_ENCODING_ENABLE */ VENDOR_SPECIFIC_ENCODING_ENABLE,
  /* HOT_PLUG_MESSAGE_ENABLE */         HOT_PLUG_MESSAGE_ENABLE,
  /* PCI_EXPRESS_GEN2 */                PCI_EXPRESS_GEN2)
 
  TRAN_TX(
          .reset(reset | eidle_detected_tx),
          .areset(areset),
          .level_select(tx_level_select),
          .clk(tx_clk),
	  .transaction_layer_checks_disable(transaction_layer_checks_disable),
          .descrambled_data(int_tx_descrambled_data),
          .data_d_or_k_code(int_tx_d_or_k_code),
          .data_10b_code_violation_n(int_tx_10b_code_violation),
          .valid_code(int_tx_valid),
          .link_width(link_width),
          .dll_status(dll_status),
  // Additional gen1 code start			  			 
	  .phy_status(phy_status),
	  .tc_mapped_to_vc_id_0(tc_mapped_to_vc_id_0_real),
	  .tc_mapped_to_vc_id_1(tc_mapped_to_vc_id_1_real),
	  .tc_mapped_to_vc_id_2(tc_mapped_to_vc_id_2_real),
	  .tc_mapped_to_vc_id_3(tc_mapped_to_vc_id_3_real),
	  .tc_mapped_to_vc_id_4(tc_mapped_to_vc_id_4_real),
	  .tc_mapped_to_vc_id_5(tc_mapped_to_vc_id_5_real),
	  .tc_mapped_to_vc_id_6(tc_mapped_to_vc_id_6_real),
	  .tc_mapped_to_vc_id_7(tc_mapped_to_vc_id_7_real),
	  .fc_init1_done(fc_init1_done),
  // Additional gen1 code end	  
          .extended_tag_field_enable(device_control_register[8]),
          .max_payload_size((device_capabilities_register[2:0] > device_control_register[7:5])? device_control_register[7:5] : device_capabilities_register[2:0]),
	  .max_read_req_size(device_control_register[14:12]),
          .tc_mapped_bitmap(tc_mapped_bitmap),
  // PCI_EXPRESS_GEN2 code start	  
	  .acs_translation_blocking_enable(acs_translation_blocking_enable),
  // PCI_EXPRESS_GEN2 code end	  
	  .no_check_edb(1'b0),  // Only for PIPE
// Additional gen1 code start		  
	  .initial_cfg_started_other_dev(initial_cfg_started_rx),
	  .last_captured_req_id_other_dev(last_captured_req_id_rx),
	  .lock_established_other_device(lock_established_rx),
	  .lock_completed_other_device(lock_completed_rx),
// Additional gen1 code end	  
          .tlp_packet_detected(tx_tlp_detected),
          .tlp_pkt1(tx_tlp_pkt1),
          .tlp_pkt2(tx_tlp_pkt2),
          .malformed_tlp_detected(tx_malformed_tlp),
	  .inc_tlps_with_digests(tx_tlps_with_digests),
	  .inc_tlps_with_ecrc(tx_tlps_with_ecrc),
// Additional gen1 code start		  
	  .initial_cfg_started(initial_cfg_started_tx),
	  .last_captured_req_id(last_captured_req_id_tx),
	  .lock_established(lock_established_tx),
	  .lock_completed(lock_completed_tx),
// Additional gen1 code end	  
          .pm_active_state_nak_detected(xmtd_pm_active_state_nak_tlp),
          .pm_pme_detected(xmtd_pm_pme_tlp),
          .pme_turn_off_detected(xmtd_pme_turn_off_tlp),
          .pme_to_ack_detected(xmtd_pme_to_ack_tlp)
         );

  qvl_pci_express_transaction_layer_pkt_monitor #(
  /* Constraints_Mode */               Constraints_Mode,
  /* PCI_EXPRESS_DEVICE_TYPE */        PCI_EXPRESS_DEVICE_TYPE,
  /* MAXIMUM_LINK_WIDTH */             MAX_LINK_WIDTH,
  /* TX_INTERFACE */                             0,
  /* DOUBLE_DATA_RATE */               DOUBLE_DATA_RATE,
  /* RESERVED_FIELD_CHECK_ENABLE */    RESERVED_FIELD_CHECK_ENABLE,
  /* VENDOR_SPECIFIC_ENCODING_ENABLE */ VENDOR_SPECIFIC_ENCODING_ENABLE,
  /* HOT_PLUG_MESSAGE_ENABLE */         HOT_PLUG_MESSAGE_ENABLE,
  /* PCI_EXPRESS_GEN2 */                PCI_EXPRESS_GEN2)

  TRAN_RX(
          .reset(reset | eidle_detected_rx),
          .areset(areset),
          .level_select(rx_level_select),
          .clk(rx_clk),
	  .transaction_layer_checks_disable(transaction_layer_checks_disable),
          .descrambled_data(int_rx_descrambled_data),
          .data_d_or_k_code(int_rx_d_or_k_code),
          .data_10b_code_violation_n(int_rx_10b_code_violation),
          .valid_code(int_rx_valid),
          .link_width(link_width),
          .dll_status(dll_status),
  // Additional gen1 code start			  			 
	  .phy_status(phy_status),
	  .tc_mapped_to_vc_id_0(tc_mapped_to_vc_id_0_real),
	  .tc_mapped_to_vc_id_1(tc_mapped_to_vc_id_1_real),
	  .tc_mapped_to_vc_id_2(tc_mapped_to_vc_id_2_real),
	  .tc_mapped_to_vc_id_3(tc_mapped_to_vc_id_3_real),
	  .tc_mapped_to_vc_id_4(tc_mapped_to_vc_id_4_real),
	  .tc_mapped_to_vc_id_5(tc_mapped_to_vc_id_5_real),
	  .tc_mapped_to_vc_id_6(tc_mapped_to_vc_id_6_real),
	  .tc_mapped_to_vc_id_7(tc_mapped_to_vc_id_7_real),
	  .fc_init1_done(fc_init1_done),
  // Additional gen1 code end
          .extended_tag_field_enable(device_control_register[8]),
          .max_payload_size((device_capabilities_register[2:0] > device_control_register[7:5])? device_control_register[7:5] : device_capabilities_register[2:0]),
	  .max_read_req_size(device_control_register[14:12]),
          .tc_mapped_bitmap(tc_mapped_bitmap),
  // PCI_EXPRESS_GEN2 code start	  
	  .acs_translation_blocking_enable(acs_translation_blocking_enable),
  // PCI_EXPRESS_GEN2 code end
	  .no_check_edb(1'b0),  // Only for PIPE
// Additional gen1 code start		  
	  .initial_cfg_started_other_dev(initial_cfg_started_tx),
	  .last_captured_req_id_other_dev(last_captured_req_id_tx),
	  .lock_established_other_device(lock_established_tx),
	  .lock_completed_other_device(lock_completed_tx),
// Additional gen1 code end	  
          .tlp_packet_detected(rx_tlp_detected),
          .tlp_pkt1(rx_tlp_pkt1),
          .tlp_pkt2(rx_tlp_pkt2),
          .malformed_tlp_detected(rx_malformed_tlp),
	  .inc_tlps_with_digests(rx_tlps_with_digests), 
	  .inc_tlps_with_ecrc(rx_tlps_with_ecrc),
// Additional gen1 code start		  
	  .initial_cfg_started(initial_cfg_started_rx),
	  .last_captured_req_id(last_captured_req_id_rx),
	  .lock_established(lock_established_rx),
	  .lock_completed(lock_completed_rx),
// Additional gen1 code end	  
          .pm_active_state_nak_detected(rcvd_pm_active_state_nak_tlp), 
          .pm_pme_detected(rcvd_pm_pme_tlp), 
          .pme_turn_off_detected(rcvd_pme_turn_off_tlp),  
          .pme_to_ack_detected(rcvd_pme_to_ack_tlp) 
         );

  // Transaction monitor instantiation

  qvl_pci_express_transaction_monitor #(
    /* Constraints_Mode */         Constraints_Mode, 
    /* DOUBLE_DATA_RATE */         DOUBLE_DATA_RATE,
    /* MAX_REQUESTS_ADDR_WIDTH */  MAX_REQUESTS_ADDR_WIDTH,
    /* PCI_EXPRESS_GEN2 */         PCI_EXPRESS_GEN2,
				   CPL_TIMEOUT_CLK)
 
  TRAN_MON(
           .reset(reset),
           .areset(areset),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
	   .transaction_layer_checks_disable(transaction_layer_checks_disable),
	   .disable_cpl_timeout(disable_cpl_timeout),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
 
           .dll_status(dll_status),
	   .phy_status(phy_status)
           );

  //-----------------------------------------------------------------
  // Statistics module instantiation
  //-----------------------------------------------------------------

  qvl_pci_express_statistics #(
  /* DOUBLE_DATA_RATE */        DOUBLE_DATA_RATE,
  /* PCI_EXPRESS_GEN2 */        PCI_EXPRESS_GEN2)

         TX_STATS(
         .reset(reset),
         .areset(areset),
         .clk(tx_clk),
         .phy_status(phy_status),
         .descrambled_data(tx_descrambled_data[7:0]),
         .d_or_k_code(tx_d_or_k_code[0]),
         .valid(tx_valid_code[0]),
         .inc_tlp(tlp_xmtd_tx),
	 .tlp_count(tlp_count_tx),
         .inc_dllp(dllp_xmtd_tx),
	 .dllp_count(dllp_count_tx),
         .inc_nullified_tlp(nullified_tlp_xmtd_tx),
         .inc_ts1_os(|int_xmtd_ts1),
         .inc_ts2_os(|int_xmtd_ts2),
  // PCI_EXPRESS_GEN2 code start
         .inc_gen1(|int_xmtd_gen1), 
         .inc_gen2(|int_xmtd_gen2),
         .inc_autonomous(|int_xmtd_autonomous), 
         .inc_speed_change(|int_xmtd_speed_change), 
         .inc_compliance_receive(|int_xmtd_compliance_receive), 
         .inc_compliance_receive_loopback(|int_xmtd_compliance_receive_loopback), 
  // PCI_EXPRESS_GEN2 code end		  
         .inc_reset(|int_xmtd_reset),
         .inc_loopback(|int_xmtd_loopback),
         .inc_disable(|int_xmtd_disable),
         .inc_no_scramble(|int_xmtd_no_scramble),
         .inc_fts_os(|int_xmtd_fts_os),
         .inc_idle_os(|int_xmtd_idle_os),
  // PCI_EXPRESS_GEN2 code start
	 .inc_modified_compliance_pattern(|int_xmtd_modified_comp_pattern), 		  
	 .inc_eie_os(|int_xmtd_eie_os),
	 .inc_eie(|int_xmtd_eie),	  
  // PCI_EXPRESS_GEN2 code end		  
         .inc_skp_os(|int_xmtd_skp_os),
         .link_width(link_width),
         .link_number(link_number_tx[7:0]),
         .inc_pad(tx_inc_pad), 
         .inc_sdp_stp(tx_inc_sdp_stp),
	 .inc_end(tx_inc_end),
	 .inc_stp_on_non_zero_lane(tx_inc_stp_on_non_zero_lane),
         .inc_idle_data(|int_xmtd_idle_data),
  // PCI_EXPRESS_GEN2 code start
         .current_speed_5gt(current_speed_5gt),
	 .inc_eie_before_fts_count(xmtd_eie_before_fts_count),
	 .changed_speed_recovery(changed_speed_recovery),	  
  // PCI_EXPRESS_GEN2 code end		  
         .level_select(tx_level_select),
         .tlp_packet_detected(tx_tlp_detected),
         .tlp_pkt1(tx_tlp_pkt1),
         .tlp_pkt2(tx_tlp_pkt2),
         .inc_tlps_with_digests(tx_tlps_with_digests),
         .inc_tlps_with_ecrc(tx_tlps_with_ecrc),
	 .inc_tlps_with_lcrc(xmtd_lcrc_error),
	 .inc_malformed_tlps(tx_malformed_tlp),
  // Additional gen1 code start			  			 
	 .ltssm_present_state(ltssm_present_state),
	 .ltssm_next_state(ltssm_next_state),
  // Additional gen1 code end		  
          // DLL Statistics
         .dllp_ack_detected(tx_dllp_ack_detected),
         .dllp_ack_ended(tx_dllp_ack_ended),
         .dllp_nak_detected(tx_dllp_nak_detected),
         .dllp_nak_ended(tx_dllp_nak_ended),
         .dllp_pm_enter_L1_detected(tx_dllp_pm_enter_L1_detected),
         .dllp_pm_enter_L1_ended(tx_dllp_pm_enter_L1_ended),
         .dllp_pm_enter_L23_detected(tx_dllp_pm_enter_L23_detected),
         .dllp_pm_enter_L23_ended(tx_dllp_pm_enter_L23_ended),
         .dllp_pm_active_req_L0s_detected(tx_dllp_pm_active_req_L0s_detected),
         .dllp_pm_active_req_L0s_ended(tx_dllp_pm_active_req_L0s_ended),
         .dllp_pm_active_req_L1_detected(tx_dllp_pm_active_req_L1_detected),
         .dllp_pm_active_req_L1_ended(tx_dllp_pm_active_req_L1_ended),
         .dllp_pm_request_ack_detected(tx_dllp_pm_request_ack_detected),
         .dllp_pm_request_ack_ended(tx_dllp_pm_request_ack_ended),
         .dllp_vendor_specific_detected(tx_dllp_vendor_specific_detected),
         .dllp_vendor_specific_ended(tx_dllp_vendor_specific_ended),
         .dllp_initfc1_p_detected(tx_dllp_initfc1_p_detected),
         .dllp_initfc1_p_ended(tx_dllp_initfc1_p_ended),
         .dllp_initfc1_np_detected(tx_dllp_initfc1_np_detected),
         .dllp_initfc1_np_ended(tx_dllp_initfc1_np_ended),
         .dllp_initfc1_cpl_detected(tx_dllp_initfc1_cpl_detected),
         .dllp_initfc1_cpl_ended(tx_dllp_initfc1_cpl_ended),
         .dllp_initfc2_p_detected(tx_dllp_initfc2_p_detected),
         .dllp_initfc2_p_ended(tx_dllp_initfc2_p_ended),
         .dllp_initfc2_np_detected(tx_dllp_initfc2_np_detected),
         .dllp_initfc2_np_ended(tx_dllp_initfc2_np_ended),
         .dllp_initfc2_cpl_detected(tx_dllp_initfc2_cpl_detected),
         .dllp_initfc2_cpl_ended(tx_dllp_initfc2_cpl_ended),
         .dllp_updatefc_p_detected(tx_dllp_updatefc_p_detected),
         .dllp_updatefc_p_ended(tx_dllp_updatefc_p_ended),
         .dllp_updatefc_np_detected(tx_dllp_updatefc_np_detected),
         .dllp_updatefc_np_ended(tx_dllp_updatefc_np_ended),
         .dllp_updatefc_cpl_detected(tx_dllp_updatefc_cpl_detected),
         .dllp_updatefc_cpl_ended(tx_dllp_updatefc_cpl_ended),
         .detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
         .ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
         .detected_retry_progress(tx_retry_progress[1]),
         .ended_retry_progress(tx_retry_progress[0]),
         .current_expected_tlp_seq_num(tx_current_expected_tlp_seq_num),
         .ack_nak_sequence_number_of_dllp(tx_ack_nak_sequence_number_of_dllp),
         .replay_timer(tx_replay_timer),
         .acknak_timer(tx_acknak_timer),
         .num_outstanding_tlps(tx_num_outstanding_tlps),
         .incr_detected_duplicate_tlp(1'b0),
         .incr_ended_duplicate_tlp(1'b0),
         .vc_tlp_detected(vc_tlp_transmitted)
               );
 
  qvl_pci_express_statistics #(
  /* DOUBLE_DATA_RATE */          DOUBLE_DATA_RATE,
  /* PCI_EXPRESS_GEN2 */          PCI_EXPRESS_GEN2)

         RX_STATS(
         .reset(reset),
         .areset(areset),
         .clk(rx_clk),
         .phy_status(phy_status),
         .descrambled_data(rx_descrambled_data[7:0]),
         .d_or_k_code(rx_d_or_k_code[0]),
         .valid(rx_valid_code[0]),
         .inc_tlp(tlp_xmtd_rx),
	 .tlp_count(tlp_count_rx),
         .inc_dllp(dllp_xmtd_rx),
	 .dllp_count(dllp_count_rx),
         .inc_nullified_tlp(nullified_tlp_xmtd_rx),
         .inc_ts1_os(|int_rcvd_ts1),
         .inc_ts2_os(|int_rcvd_ts2),
  // PCI_EXPRESS_GEN2 code start
         .inc_gen1(|int_rcvd_gen1), 
         .inc_gen2(|int_rcvd_gen2),
         .inc_autonomous(|int_rcvd_autonomous), 
         .inc_speed_change(|int_rcvd_speed_change), 
         .inc_compliance_receive(|int_rcvd_compliance_receive), 
         .inc_compliance_receive_loopback(|int_rcvd_compliance_receive_loopback), 
  // PCI_EXPRESS_GEN2 code end		  
         .inc_reset(|int_rcvd_reset),
         .inc_loopback(|int_rcvd_loopback),
         .inc_disable(|int_rcvd_disable),
         .inc_no_scramble(|int_rcvd_no_scramble),
         .inc_fts_os(|int_rcvd_fts_os),
         .inc_idle_os(|int_rcvd_idle_os),
  // PCI_EXPRESS_GEN2 code start
	 .inc_modified_compliance_pattern(|int_rcvd_modified_comp_pattern), 	  
	 .inc_eie_os(|int_rcvd_eie_os),
	 .inc_eie(|int_rcvd_eie),	  
  // PCI_EXPRESS_GEN2 code end
         .inc_skp_os(|int_rcvd_skp_os),
         .link_width(link_width),
         .link_number(link_number_rx[7:0]),
         .inc_pad(rx_inc_pad),
         .inc_sdp_stp(rx_inc_sdp_stp),
	 .inc_end(rx_inc_end),    
         .inc_stp_on_non_zero_lane(rx_inc_stp_on_non_zero_lane),
         .inc_idle_data(|int_rcvd_idle_data),
  // PCI_EXPRESS_GEN2 code start
         .current_speed_5gt(current_speed_5gt),
	 .inc_eie_before_fts_count(rcvd_eie_before_fts_count),
	 .changed_speed_recovery(changed_speed_recovery),	  
  // PCI_EXPRESS_GEN2 code end		  
         .level_select(rx_level_select),
         .tlp_packet_detected(rx_tlp_detected),
         .tlp_pkt1(rx_tlp_pkt1),
         .tlp_pkt2(rx_tlp_pkt2),
         .inc_tlps_with_digests(rx_tlps_with_digests),
         .inc_tlps_with_ecrc(rx_tlps_with_ecrc),
         .inc_tlps_with_lcrc(rcvd_lcrc_error),
         .inc_malformed_tlps(rx_malformed_tlp),
  // Additional gen1 code start			  			 
	 .ltssm_present_state(5'b0),
	 .ltssm_next_state(5'b0),
  // Additional gen1 code end		  
          // DLL Statistics
         .dllp_ack_detected(rx_dllp_ack_detected),
         .dllp_ack_ended(rx_dllp_ack_ended),
         .dllp_nak_detected(rx_dllp_nak_detected),
         .dllp_nak_ended(rx_dllp_nak_ended),
         .dllp_pm_enter_L1_detected(rx_dllp_pm_enter_L1_detected),
         .dllp_pm_enter_L1_ended(rx_dllp_pm_enter_L1_ended),
         .dllp_pm_enter_L23_detected(rx_dllp_pm_enter_L23_detected),
         .dllp_pm_enter_L23_ended(rx_dllp_pm_enter_L23_ended),
         .dllp_pm_active_req_L0s_detected(rx_dllp_pm_active_req_L0s_detected),
         .dllp_pm_active_req_L0s_ended(rx_dllp_pm_active_req_L0s_ended),
         .dllp_pm_active_req_L1_detected(rx_dllp_pm_active_req_L1_detected),
         .dllp_pm_active_req_L1_ended(rx_dllp_pm_active_req_L1_ended),
         .dllp_pm_request_ack_detected(rx_dllp_pm_request_ack_detected),
         .dllp_pm_request_ack_ended(rx_dllp_pm_request_ack_ended),
         .dllp_vendor_specific_detected(rx_dllp_vendor_specific_detected),
         .dllp_vendor_specific_ended(rx_dllp_vendor_specific_ended),
         .dllp_initfc1_p_detected(rx_dllp_initfc1_p_detected),
         .dllp_initfc1_p_ended(rx_dllp_initfc1_p_ended),
         .dllp_initfc1_np_detected(rx_dllp_initfc1_np_detected),
         .dllp_initfc1_np_ended(rx_dllp_initfc1_np_ended),
         .dllp_initfc1_cpl_detected(rx_dllp_initfc1_cpl_detected),
         .dllp_initfc1_cpl_ended(rx_dllp_initfc1_cpl_ended),
         .dllp_initfc2_p_detected(rx_dllp_initfc2_p_detected),
         .dllp_initfc2_p_ended(rx_dllp_initfc2_p_ended),
         .dllp_initfc2_np_detected(rx_dllp_initfc2_np_detected),
         .dllp_initfc2_np_ended(rx_dllp_initfc2_np_ended),
         .dllp_initfc2_cpl_detected(rx_dllp_initfc2_cpl_detected),
         .dllp_initfc2_cpl_ended(rx_dllp_initfc2_cpl_ended),
         .dllp_updatefc_p_detected(rx_dllp_updatefc_p_detected),
         .dllp_updatefc_p_ended(rx_dllp_updatefc_p_ended),
         .dllp_updatefc_np_detected(rx_dllp_updatefc_np_detected),
         .dllp_updatefc_np_ended(rx_dllp_updatefc_np_ended),
         .dllp_updatefc_cpl_detected(rx_dllp_updatefc_cpl_detected),
         .dllp_updatefc_cpl_ended(rx_dllp_updatefc_cpl_ended),
         .detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
         .ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
         .detected_retry_progress(rx_retry_progress[1]),
         .ended_retry_progress(rx_retry_progress[0]),
         .current_expected_tlp_seq_num(rx_current_expected_tlp_seq_num),
         .ack_nak_sequence_number_of_dllp(rx_ack_nak_sequence_number_of_dllp),
         .replay_timer(rx_replay_timer),
         .acknak_timer(rx_acknak_timer),
         .num_outstanding_tlps(rx_num_outstanding_tlps),
         .incr_detected_duplicate_tlp(rx_incr_detected_duplicate_tlp),
         .incr_ended_duplicate_tlp(rx_incr_ended_duplicate_tlp),
         .vc_tlp_detected(vc_tlp_received)
         ); 

  //-----------------------------------------------------------------
  // Data Link layer monitor instantiation.
  //-----------------------------------------------------------------

  qvl_pci_express_link_layer_monitor #(
  /* Constraints_Mode */                Constraints_Mode,
  /* NUMBER_OF_LANES  */                MAX_LINK_WIDTH,
  /* DOUBLE_DATA_RATE */                DOUBLE_DATA_RATE,
  /* RESERVED_FIELD_CHECK_ENABLE */     RESERVED_FIELD_CHECK_ENABLE,
  /* VENDOR_SPECIFIC_ENCODING_ENABLE */ VENDOR_SPECIFIC_ENCODING_ENABLE,
  /* OVERRIDE_TIMER_VALUE */            OVERRIDE_TIMER_VALUE,
  /* REPLAY_TIMER_VALUE */              REPLAY_TIMER_VALUE,
  /* ACKNAK_TIMER_VALUE */              ACKNAK_TIMER_VALUE,
  /* DEVICE_TYPE */                     PCI_EXPRESS_DEVICE_TYPE,
  /* PCI_EXPRESS_GEN2 */                PCI_EXPRESS_GEN2)
          LINK_LAYER_MONITOR(
         .areset(areset),
         .reset(reset),
         .phy_status(phy_status),
         .link_layer_checks_disable(link_layer_checks_disable),
         .tx_10b_code_violation(!(&(int_tx_10b_code_violation | ~(link_width_bitmap)))),
	 .tx_link_clk(tx_clk),
         .tx_level_select(tx_level_select),
         .tx_descrambled_data(int_tx_descrambled_data),
         .tx_d_or_k_code(int_tx_d_or_k_code),
         .tx_valid_code(int_tx_valid),
         .rx_10b_code_violation(!(&(int_rx_10b_code_violation | ~(link_width_bitmap)))),
	 .rx_link_clk(rx_clk),
         .rx_level_select(rx_level_select),
         .rx_descrambled_data(int_rx_descrambled_data),
         .rx_d_or_k_code(int_rx_d_or_k_code),
         .rx_valid_code(int_rx_valid),
         .max_payload_size(device_control_register[7:5]),
	 .maximum_max_payload_size(device_capabilities_register[2:0]),
	 .max_read_req_size(device_control_register[14:12]),
         .link_operating_width(link_width),
// PCI_EXPRESS_GEN2 code start
         .current_speed_5gt(current_speed_5gt),
// PCI_EXPRESS_GEN2 code end			     
         .link_up(dll_status),
         .tx_replay_timer_elapsed(),
         .tx_replay_num_elapsed(),
         // P,NP,Cpl DLL Type
         .tx_detected_lcrc_error(xmtd_lcrc_error[1]),
	 .tx_ended_lcrc_error(xmtd_lcrc_error[0]),
	 .tx_detected_retry_progress(tx_retry_progress[1]),
	 .tx_ended_retry_progress(tx_retry_progress[0]),
	 .rx_replay_timer_elapsed(),
	 .rx_replay_num_elapsed(),
         // P,NP,Cpl DLL Type
         .rx_detected_lcrc_error(rcvd_lcrc_error[1]),
         .rx_ended_lcrc_error(rcvd_lcrc_error[0]),
         .rx_detected_retry_progress(rx_retry_progress[1]),
	 .rx_ended_retry_progress(rx_retry_progress[0]),
         // Statistics
         .tx_dllp_ack_detected(tx_dllp_ack_detected),
         .tx_dllp_ack_ended(tx_dllp_ack_ended),
         .tx_dllp_nak_detected(tx_dllp_nak_detected),
         .tx_dllp_nak_ended(tx_dllp_nak_ended),
         .tx_dllp_pm_enter_L1_detected(tx_dllp_pm_enter_L1_detected),
         .tx_dllp_pm_enter_L1_ended(tx_dllp_pm_enter_L1_ended),
         .tx_dllp_pm_enter_L23_detected(tx_dllp_pm_enter_L23_detected),
         .tx_dllp_pm_enter_L23_ended(tx_dllp_pm_enter_L23_ended),
       .tx_dllp_pm_active_req_L0s_detected(tx_dllp_pm_active_req_L0s_detected),
         .tx_dllp_pm_active_req_L0s_ended(tx_dllp_pm_active_req_L0s_ended),
         .tx_dllp_pm_active_req_L1_detected(tx_dllp_pm_active_req_L1_detected),
         .tx_dllp_pm_active_req_L1_ended(tx_dllp_pm_active_req_L1_ended),
         .tx_dllp_pm_request_ack_detected(tx_dllp_pm_request_ack_detected),
         .tx_dllp_pm_request_ack_ended(tx_dllp_pm_request_ack_ended),
         .tx_dllp_vendor_specific_detected(tx_dllp_vendor_specific_detected),
         .tx_dllp_vendor_specific_ended(tx_dllp_vendor_specific_ended),
         .tx_dllp_initfc1_p_detected(tx_dllp_initfc1_p_detected),
         .tx_dllp_initfc1_p_ended(tx_dllp_initfc1_p_ended),
         .tx_dllp_initfc1_np_detected(tx_dllp_initfc1_np_detected),
         .tx_dllp_initfc1_np_ended(tx_dllp_initfc1_np_ended),
         .tx_dllp_initfc1_cpl_detected(tx_dllp_initfc1_cpl_detected),
         .tx_dllp_initfc1_cpl_ended(tx_dllp_initfc1_cpl_ended),
         .tx_dllp_initfc2_p_detected(tx_dllp_initfc2_p_detected),
         .tx_dllp_initfc2_p_ended(tx_dllp_initfc2_p_ended),
         .tx_dllp_initfc2_np_detected(tx_dllp_initfc2_np_detected),
         .tx_dllp_initfc2_np_ended(tx_dllp_initfc2_np_ended),
         .tx_dllp_initfc2_cpl_detected(tx_dllp_initfc2_cpl_detected),
         .tx_dllp_initfc2_cpl_ended(tx_dllp_initfc2_cpl_ended),
         .tx_dllp_updatefc_p_detected(tx_dllp_updatefc_p_detected),
         .tx_dllp_updatefc_p_ended(tx_dllp_updatefc_p_ended),
         .tx_dllp_updatefc_np_detected(tx_dllp_updatefc_np_detected),
         .tx_dllp_updatefc_np_ended(tx_dllp_updatefc_np_ended),
         .tx_dllp_updatefc_cpl_detected(tx_dllp_updatefc_cpl_detected),
         .tx_dllp_updatefc_cpl_ended(tx_dllp_updatefc_cpl_ended),
         .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
	 .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
         .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
	 .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
         .tx_next_tlp_seq_num(tx_current_expected_tlp_seq_num),
       .tx_ack_nak_sequence_number_of_dllp(tx_ack_nak_sequence_number_of_dllp),
         .tx_replay_timer(tx_replay_timer),
         .tx_acknak_timer(tx_acknak_timer),
         .tx_num_outstanding_tlps(tx_num_outstanding_tlps),
         .tx_incr_detected_duplicate_tlp(tx_incr_detected_duplicate_tlp),
         .tx_incr_ended_duplicate_tlp(tx_incr_ended_duplicate_tlp),
         .vc_tlp_transmitted(vc_tlp_transmitted),
         .rx_dllp_ack_detected(rx_dllp_ack_detected),
         .rx_dllp_ack_ended(rx_dllp_ack_ended),
         .rx_dllp_nak_detected(rx_dllp_nak_detected),
         .rx_dllp_nak_ended(rx_dllp_nak_ended),
         .rx_dllp_pm_enter_L1_detected(rx_dllp_pm_enter_L1_detected),
         .rx_dllp_pm_enter_L1_ended(rx_dllp_pm_enter_L1_ended),
         .rx_dllp_pm_enter_L23_detected(rx_dllp_pm_enter_L23_detected),
         .rx_dllp_pm_enter_L23_ended(rx_dllp_pm_enter_L23_ended),
       .rx_dllp_pm_active_req_L0s_detected(rx_dllp_pm_active_req_L0s_detected),
       .rx_dllp_pm_active_req_L0s_ended(rx_dllp_pm_active_req_L0s_ended),
         .rx_dllp_pm_active_req_L1_detected(rx_dllp_pm_active_req_L1_detected),
         .rx_dllp_pm_active_req_L1_ended(rx_dllp_pm_active_req_L1_ended),
         .rx_dllp_pm_request_ack_detected(rx_dllp_pm_request_ack_detected),
         .rx_dllp_pm_request_ack_ended(rx_dllp_pm_request_ack_ended),
         .rx_dllp_vendor_specific_detected(rx_dllp_vendor_specific_detected),
         .rx_dllp_vendor_specific_ended(rx_dllp_vendor_specific_ended),
         .rx_dllp_initfc1_p_detected(rx_dllp_initfc1_p_detected),
         .rx_dllp_initfc1_p_ended(rx_dllp_initfc1_p_ended),
         .rx_dllp_initfc1_np_detected(rx_dllp_initfc1_np_detected),
         .rx_dllp_initfc1_np_ended(rx_dllp_initfc1_np_ended),
         .rx_dllp_initfc1_cpl_detected(rx_dllp_initfc1_cpl_detected),
         .rx_dllp_initfc1_cpl_ended(rx_dllp_initfc1_cpl_ended),
         .rx_dllp_initfc2_p_detected(rx_dllp_initfc2_p_detected),
         .rx_dllp_initfc2_p_ended(rx_dllp_initfc2_p_ended),
         .rx_dllp_initfc2_np_detected(rx_dllp_initfc2_np_detected),
         .rx_dllp_initfc2_np_ended(rx_dllp_initfc2_np_ended),
         .rx_dllp_initfc2_cpl_detected(rx_dllp_initfc2_cpl_detected),
         .rx_dllp_initfc2_cpl_ended(rx_dllp_initfc2_cpl_ended),
         .rx_dllp_updatefc_p_detected(rx_dllp_updatefc_p_detected),
         .rx_dllp_updatefc_p_ended(rx_dllp_updatefc_p_ended),
         .rx_dllp_updatefc_np_detected(rx_dllp_updatefc_np_detected),
         .rx_dllp_updatefc_np_ended(rx_dllp_updatefc_np_ended),
         .rx_dllp_updatefc_cpl_detected(rx_dllp_updatefc_cpl_detected),
         .rx_dllp_updatefc_cpl_ended(rx_dllp_updatefc_cpl_ended),
         .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
	 .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
         .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
	 .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
         .rx_next_tlp_seq_num(rx_current_expected_tlp_seq_num),
       .rx_ack_nak_sequence_number_of_dllp(rx_ack_nak_sequence_number_of_dllp),
         .rx_replay_timer(rx_replay_timer),
         .rx_acknak_timer(rx_acknak_timer),
         .rx_num_outstanding_tlps(rx_num_outstanding_tlps),
         .rx_incr_detected_duplicate_tlp(rx_incr_detected_duplicate_tlp),
         .rx_incr_ended_duplicate_tlp(rx_incr_ended_duplicate_tlp),
         .vc_tlp_received(vc_tlp_received),
	 .extended_sync_enable(extended_sync_enable),
	 .L0s_entry_supported(L0s_entry_supported),
	 .tx_n_fts(tx_n_fts[7:0]),
	 .rx_n_fts(rx_n_fts[7:0]),
	 .fc_init1_done(fc_init1_done[0]),
	 .fc_init2_done(fc_init2_done[0])
         );

  //--------------------------------------------------------------
  // Flow control module instantiation for VC0
  //--------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            0,
  /* VC_ID_STRING */                     "0.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK*/          UPDATE_FC_30US_TIMER_CLK)
     VC0_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[0]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_0_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
 	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[0]),
           .fc_init2_done(fc_init2_done[0])
           ); 

  //---------------------------------------------------------------
  // Flow control module instantiation for VC1
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            1,
  /* VC_ID_STRING */                     "1.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC1_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[1]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_1_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[1]),
           .fc_init2_done(fc_init2_done[1])
           ); 

  //---------------------------------------------------------------
  // Flow control module instantiation for VC2
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            2,
  /* VC_ID_STRING */                     "2.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC2_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[2]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_2_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[2]),
           .fc_init2_done(fc_init2_done[2])
           );

  //---------------------------------------------------------------
  // Flow control module instantiation for VC3
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            3,
  /* VC_ID_STRING */                     "3.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC3_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[3]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_3_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[3]),
           .fc_init2_done(fc_init2_done[3])
           );

  //---------------------------------------------------------------
  // Flow control module instantiation for VC4
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            4,
  /* VC_ID_STRING */                     "4.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC4_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[4]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_4_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[4]),
           .fc_init2_done(fc_init2_done[4])
           ); 

  //---------------------------------------------------------------  
  // Flow control module instantiation for VC5
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            5,
  /* VC_ID_STRING */                     "5.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC5_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[5]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_5_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[5]),
           .fc_init2_done(fc_init2_done[5])
           );

  //---------------------------------------------------------------  
  // Flow control module instantiation for VC6
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            6,
  /* VC_ID_STRING */                     "6.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC6_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[6]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_6_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[6]),
           .fc_init2_done(fc_init2_done[6])
           );

  //---------------------------------------------------------------  
  // Flow control module instantiation for VC7
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            7,
  /* VC_ID_STRING */                     "7.",
  /* ZI_DOUBLE_DATA_RATE */              DOUBLE_DATA_RATE,
  /* UPDATE_FC_30US_TIMER_CLK */         UPDATE_FC_30US_TIMER_CLK)
     VC7_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(tx_clk),
           .rx_clk(rx_clk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[7]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_7_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
// Additional gen1 code start			    
	   .enable_ufc_counter(enable_ufc_counter),
	   .extended_sync_enable(extended_sync_enable),
	   .tlp_detected_tx_rx(tlp_detected_tx_rx),	    	    
// Additional gen1 code end		    
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(fc_init1_done[7]),
           .fc_init2_done(fc_init2_done[7])
           );

  //---------------------------------------------------------------
  // Power management module instantiation.
  //---------------------------------------------------------------

  qvl_pci_express_power_management_monitor #(
  /* Constraints_Mode   */              Constraints_Mode,
  /* PCI_EXPRESS_DEVICE_TYPE */         PCI_EXPRESS_DEVICE_TYPE,
  /* DOUBLE_DATA_RATE */                DOUBLE_DATA_RATE,
  /* MAX_LINK_WIDTH */                  MAX_LINK_WIDTH,
  /* PCI_EXPRESS_GEN2 */                PCI_EXPRESS_GEN2)
		PM_MONITOR (.reset(reset),
    .areset(areset),
    .tx_clk(tx_clk),
    .tx_level_select(tx_level_select),
    .xmtd_pm_active_state_nak_tlp(xmtd_pm_active_state_nak_tlp),
    .xmtd_pm_pme_tlp(xmtd_pm_pme_tlp),
    .xmtd_pme_turn_off_tlp(xmtd_pme_turn_off_tlp),
    .xmtd_pme_to_ack_tlp(xmtd_pme_to_ack_tlp),
    .xmtd_tlp(|tx_tlp_detected),
    .xmtd_idle_os(int_xmtd_idle_os),
    .tx_dllp_pm_enter_l1_detected(tx_dllp_pm_enter_L1_detected),
    .tx_dllp_pm_enter_l1_ended(tx_dllp_pm_enter_L1_ended),
    .tx_dllp_pm_enter_l23_detected(tx_dllp_pm_enter_L23_detected),
    .tx_dllp_pm_enter_l23_ended(tx_dllp_pm_enter_L23_ended),
    .tx_dllp_pm_active_req_l1_detected(tx_dllp_pm_active_req_L1_detected),
    .tx_dllp_pm_active_req_l1_ended(tx_dllp_pm_active_req_L1_ended),
    .tx_dllp_pm_request_ack_detected(tx_dllp_pm_request_ack_detected),
    .tx_dllp_pm_request_ack_ended(tx_dllp_pm_request_ack_ended),
    .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
    .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
    .tx_num_outstanding_tlps(tx_num_outstanding_tlps),

    .rx_clk(rx_clk),
    .rx_level_select(rx_level_select),
    .rcvd_pm_active_state_nak_tlp(rcvd_pm_active_state_nak_tlp),
    .rcvd_pm_pme_tlp(rcvd_pm_pme_tlp),
    .rcvd_pme_turn_off_tlp(rcvd_pme_turn_off_tlp),
    .rcvd_pme_to_ack_tlp(rcvd_pme_to_ack_tlp),
    .rcvd_tlp(|rx_tlp_detected),
    .rcvd_idle_os(int_rcvd_idle_os),
    .rx_dllp_pm_enter_l1_detected(rx_dllp_pm_enter_L1_detected),
    .rx_dllp_pm_enter_l1_ended(rx_dllp_pm_enter_L1_ended),
    .rx_dllp_pm_enter_l23_detected(rx_dllp_pm_enter_L23_detected),
    .rx_dllp_pm_enter_l23_ended(rx_dllp_pm_enter_L23_ended),
    .rx_dllp_pm_active_req_l1_detected(rx_dllp_pm_active_req_L1_detected),
    .rx_dllp_pm_active_req_l1_ended(rx_dllp_pm_active_req_L1_ended),
    .rx_dllp_pm_request_ack_detected(rx_dllp_pm_request_ack_detected),
    .rx_dllp_pm_request_ack_ended(rx_dllp_pm_request_ack_ended),
    .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
    .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
    .rx_num_outstanding_tlps(rx_num_outstanding_tlps),

    .pm_checks_disable(link_layer_checks_disable | transaction_layer_checks_disable),

    // Output ports

    .xmtd_pm_enter_command_flag(xmtd_pm_enter_command_flag),
    .rcvd_pm_enter_command_flag(rcvd_pm_enter_command_flag)

     );

  //--------------------------------------------------------------------------
  // OVL SVA Assertions are included here
  //--------------------------------------------------------------------------
`include "qvl_pci_express_monitor_assertions.inc"

`ifdef ZI_INLINED_PSL
`include "0in_ac_inline_for_mod_qvl_pci_express_monitor.inc"
`endif
`ifdef ZI_INLINED_CHX
`include "qvl_pci_express_monitor.zi_chx.inc"
`else
`ifdef ZI_INLINED_CHX_qvl_pci_express_monitor
`include "qvl_pci_express_monitor.zi_chx.inc"
`endif
`endif

`qvlendmodule // end of qvl_pci_express_logic

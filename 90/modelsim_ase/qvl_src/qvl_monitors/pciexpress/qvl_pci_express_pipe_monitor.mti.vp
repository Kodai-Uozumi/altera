//              Copyright 2006-2008 Mentor Graphics Corporation
//                           All Rights Reserved.
//
//              THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY
//            INFORMATION WHICH IS THE PROPERTY OF MENTOR GRAPHICS
//           CORPORATION OR ITS LICENSORS AND IS SUBJECT TO LICENSE
//                                  TERMS.
//
//                   Questa Verification Library (QVL)
//

/*************************************************************************
*
* PURPOSE     This file is part of Questa Verification Library (QVL).
*
* DESCRIPTION This monitor checks the PCI Express PIPE interface for 
*             compliance with PCI Express Base specification. 
*
* REFERENCES  PCI Express Base Specification, Revision 1.0a, July 22, 2002.
*             PCI Express Base Specification, Revision 1.1, March 28, 2005.
*             PHY Interface for the PCI Express architecture, Version 1.00,
*             June 19, 2003.
*
* INPUTS
*             areset_n                    - Asynchronous reset, active low 
*             reset_n                     - Synchronous reset, active low 
*
*             pclk                        - Parallel interface clock.
*             tx_data                     - Parallel PCI Express data input 
*     					    to the PHY Device.
*             tx_data_k                   - Data/Control signal for symbols 
*                                           on 'tx_data'. 
*             tx_detect_rx_loopback       - Signal which indicates when to
*                                           start receiver detection and 
*                                           loopback.
*             tx_elecidle                 - Signal which indicates when to
*                                           drive electrical idle.
*             tx_compliance               - Signal which indicates when to 
*                                           set the running disparity to 
*                                           -ve, while transmitting the
*                                           compliance pattern.
*             rx_polarity                 - Signal which indicates when to
*                                           perform polarity inversion on 
*                                           the received data.
*             power_down                  - Command which transits the power
*                                           states of the PHY.
*             rx_data                     - Parallel PCI Express data output 
*                                           from the PHY Device.
*             rx_data_k                   - Data/Control signal for symbols 
*                                           on 'rx_data'.
*             rx_valid                    - Signal which indicates that 
* 					    valid data is available on the
*                                           'rx_data'.
*             rx_elecidle                 - Signal which indicates that 
*                                           electrical idle is detected.
*             rx_status                   - Signal that encodes the receiver
*                                           status.
*             phystatus                   - Signal which indicates the
*                                           succesful poer state transitions.
*             disable_descrambler         - When set, disables the
*                                           descrambling.
*             skip_link_training          - When set, the monitor
*                                           does not track the link 
*                                           training sequence. The
*                                           LTSSM state machine is inactive 
*                                           and default link width is maximum
*                                           link width specified by the user.
*                                           Monitor tracks all the training 
*                                           ordered sets as well as  
*                                           other ordered sets. 
*             extended_sync_enable        - Extended Synch bit of the Link
*                                           control register(offset 10h).
*             L0s_entry_supported         - Signal which indicates whether 
*                                           transition to L0s ASPM state is 
*                                           supported. 
*             device_control_register     - Device control register.
*                                           (Off set 08h)
*
*             device_capabilities_register - Device capabilities register.
*                                           (Off set 04h)
*
*             phy_layer_checks_disable    - Disables all the physical layer
*                                           checks.
*
*             link_layer_checks_disable   - Disables all the link layer checks.
*
*             transaction_layer_checks_disable 
*
*                                         - Disables all the transaction layer
*                                           checks.
*             enable_vc_id                - A logic high in a bit enables
*                                           corresponding VC ID
*             tc_mapped_to_vc_id_0        - TC's mapped to VC ID 0
*             tc_mapped_to_vc_id_1        - TC's mapped to VC ID 1
*             tc_mapped_to_vc_id_2        - TC's mapped to VC ID 2
*             tc_mapped_to_vc_id_3        - TC's mapped to VC ID 3
*             tc_mapped_to_vc_id_4        - TC's mapped to VC ID 4
*             tc_mapped_to_vc_id_5        - TC's mapped to VC ID 5
*             tc_mapped_to_vc_id_6        - TC's mapped to VC ID 6
*             tc_mapped_to_vc_id_7        - TC's mapped to VC ID 7
*
* MONITOR INSTANTIATION
*
*       1. In a MAC Layer device : 
*       --------------------------
*
*       +---------------+                 +-----------------+
*       | MAC Layer     |  Transmit       |                 |
*       |       +---+   |  Interface      |                 |
*       |       | M |<--|---------------->|   PHY Layer     |
*       |       | O |   |                 |                 |
*       |       | N |   |                 |                 |
*       |       | I |   |                 |                 |
*       |       | T |   |  Receive        |                 |
*       |       | O |   |  Interface      |                 |
*       |       | R |<--|<----------------|                 |
*       |       +---+   |                 |                 |
*       |               |                 |                 |
*       +---------------+                 +-----------------+
*
*       2. In an PHY Layer device :
*       ---------------------------
*
*       +---------------+                 +-----------------+
*       |  MAC Layer    |  Transmit       | PHY Layer       |
*       |               |  Interface      |  +---+          |
*       |               |---------------->|->| M |          |
*       |               |                 |  | O |          |
*       |               |                 |  | N |          |
*       |               |                 |  | I |          |
*       |               |  Receive        |  | T |          |
*       |               |  Interface      |  | O |          |
*       |               |<----------------|->| R |          |
*       |               |                 |  +---+          |
*       |               |                 |                 |
*       +---------------+                 +-----------------+
*
*     Last Modified Data : Sep 30, 2005 
*
**************************************************************************/

`ifdef ZiCwDebug
`define ZiCwDebugDelay1 #1
`define ZiCwQuietIfNoCwDebug
`else
`define ZiCwDebugDelay1
`define ZiCwQuietIfNoCwDebug -quiet
`endif //ZiCwDebug

`ifdef QVL_SVA_INTERFACE
`define qvlmodule interface
`define qvlendmodule endinterface
`else
`define qvlmodule module
`define qvlendmodule endmodule
`endif


`ifdef QVL_ASSERT_ON
`define OVL_ASSERT_ON
`define OVL_SVA
`endif

`ifdef QVL_COVER_ON
  `ifdef QVL_SV_COVERGROUP_OFF
    // Do nothing
  `else
    `define QVL_SV_COVERGROUP
  `endif

  `ifdef QVL_MW_FINAL_COVER_OFF
    // Do nothing
  `else
    `define QVL_MW_FINAL_COVER
   `endif
`endif

`qvlmodule qvl_pci_express_pipe_monitor (
				 reset_n,
				 areset_n,
				 pclk,

				 // MAC Layer to PHY Layer signals
				 tx_data,
                                 tx_data_k,
				 tx_detect_rx_loopback,
				 tx_elecidle,
				 tx_compliance,
				 rx_polarity,
                                 power_down,

				 // PHY Layer to MAC Layer signals

				 rx_data,
				 rx_data_k,
				 rx_valid,
				 rx_elecidle,
				 rx_status,
				 phystatus,

				 // Monitor configuration inputs
         
				 disable_descrambler,
                                 skip_link_training,
				 extended_sync_enable,
				 device_control_register,
				 device_capabilities_register,
				 L0s_entry_supported,
				 phy_layer_checks_disable,
				 link_layer_checks_disable,
				 transaction_layer_checks_disable,

				 // VC Configuration

				 enable_vc_id,
				 tc_mapped_to_vc_id_0,
				 tc_mapped_to_vc_id_1,
				 tc_mapped_to_vc_id_2,
				 tc_mapped_to_vc_id_3,
				 tc_mapped_to_vc_id_4,
				 tc_mapped_to_vc_id_5,
				 tc_mapped_to_vc_id_6,
				 tc_mapped_to_vc_id_7
				 );

  // Parameter Constraints_Mode = 1, will configure some checks in this
  // monitor as constraints during 0-In Search.
 
  parameter Constraints_Mode = 0;
  wire [31:0] pw_Constraints_Mode = Constraints_Mode;

  // Parameter PCI_EXPRESS_DEVICE_TYPE specifies the device type where the 
  // monitor is instantiated. This parameter has to be set based on the 
  // PCI Express device in which monitor is instantiated.
  // 
  // Parameter value         Device
  //     0                   PCI Express end point.
  //     1                   Legacy PCI Express end point.
  //     4                   PCI Express Root Complex.
  //     5                   PCI Express switch, upstream port.
  //     6                   PCI Express switch, downstream port.
  //     7                   PCI Express to PCI/PCI-X bridge.
  //
  // By default, monitor is instantiated on the PCI Express end point
  // This information along with the Constraints_Mode will decide which checks
  // are to be turned into constraints during 0-In Search.
 
  parameter PCI_EXPRESS_DEVICE_TYPE = 0;
  wire [31:0] pw_PCI_EXPRESS_DEVICE_TYPE = PCI_EXPRESS_DEVICE_TYPE;

  // Parameter MAC_LAYER_SIDE configures the device where the monitor is 
  // instantiated. Set this parameter to 1 if the monitor is instantiated 
  // on the MAC_LAYER. By default, monitor is instantiated on the PHY_LAYER.

  parameter MAC_LAYER_SIDE = 1;
  wire [31:0] pw_MAC_LAYER_SIDE = MAC_LAYER_SIDE;

  // Parameter INTERFACE_TYPE specifies whether the PIPE interface is 16 bits
  // or 8 bits. Set this to 1 if the PIPE interface is 16 bits. By default 
  // the monitor is configured for 8 bit PIPE interface.

  parameter INTERFACE_TYPE = 0; 
  wire [31:0] pw_INTERFACE_TYPE = INTERFACE_TYPE;

  // Parameter MAX_LINK_WIDTH specifies the maximum width supported by the
  // PCI Express link. The link widths supported are 1,2,4,8,12,16 and 32.

  parameter MAX_LINK_WIDTH = 1;                                            
  wire [31:0] pw_MAX_LINK_WIDTH = MAX_LINK_WIDTH;

  // Parameter MAX_REQUESTS_ADDR_WIDTH specifies the number of address bits
  // required to address the outstanding requests. This parameter in turn
  // configures the maximum number of outstanding requests. By default, the
  // maximum number of outstanding requests can be 32.
 
  parameter MAX_REQUESTS_ADDR_WIDTH = 5;
  wire [31:0] pw_MAX_REQUESTS_ADDR_WIDTH = MAX_REQUESTS_ADDR_WIDTH;

  // Parameter RESERVED_FIELD_CHECK_ENABLE configures the monitor to track the
  // reserved field of the transaction layer packets (TLPs), Data link layer
  // packets and other reserved fields. Set this parameter to 1 if the monitor
  // has to track for any non zero value in the reserved fields. By default,
  // the monitor does not tracks for existence of non zero value in the reserved
  // field.

  parameter RESERVED_FIELD_CHECK_ENABLE = 1;
  wire [31:0] pw_RESERVED_FIELD_CHECK_ENABLE = RESERVED_FIELD_CHECK_ENABLE;

  // Parameter VENDOR_SPECIFIC_ENCODING_ENABLE = 0 configures the monitor to
  // allow the usage of vendor specific encodings in the DLL packet type as
  // well as the vendor specific message codes.

  parameter VENDOR_SPECIFIC_ENCODING_ENABLE = 0;
  wire [31:0] pw_VENDOR_SPECIFIC_ENCODING_ENABLE = 
					     VENDOR_SPECIFIC_ENCODING_ENABLE;

  parameter OVERRIDE_TIMER_VALUE = 0;
  wire [31:0] pw_OVERRIDE_TIMER_VALUE = OVERRIDE_TIMER_VALUE;

  parameter REPLAY_TIMER_VALUE = 711;
  wire [31:0] pw_REPLAY_TIMER_VALUE = REPLAY_TIMER_VALUE;

  parameter ACKNAK_TIMER_VALUE = 237;
  wire [31:0] pw_ACKNAK_TIMER_VALUE = ACKNAK_TIMER_VALUE;

  // Parameter MIN_TS1_COUNT configures the minimum number of TS1 ordered sets
  // that must be transmitted before transitioning into Polling.Configuration
  // state from Polling.active state.

  parameter MIN_TS1_COUNT = 1024;
  wire [31:0] pw_MIN_TS1_COUNT = MIN_TS1_COUNT;

  // Parameter DESKEW_SUPPORT configures the monitor to support multi lane
  // deskew on the receive side. By default, multi lane deskew is not 
  // supported.

  parameter DESKEW_SUPPORT = 0;
  wire [31:0] pw_DESKEW_SUPPORT = DESKEW_SUPPORT;

  // Parameter VC_SUPPORT configures the TC/VC mapping.
  // By default, only VC0 is supported and all the TC's are mapped to VC0.
  // Set this parameter to 1, to support all the VC's and one to one
  // mapping between TC and VC. I,e TC0/VC0, TC1/VC1, TC2/VC2 ....
  // Set this parameter to 2, to enable required VC's and to specify the TC/VC
  // mapping through ports.

  parameter VC_SUPPORT = 0;
  wire [31:0] pw_VC_SUPPORT = VC_SUPPORT;

  // Parameter HOT_PLUG_MESSAGE_ENABLE allows hot plug signaling messages.
  // By default, monitor does not allow the transmission of hot plug
  // signaling messages as per PCIE 1.1 specification.

  parameter HOT_PLUG_MESSAGE_ENABLE = 0;

  // Parameter TX_SKEW_SUPPORT configures the monitor to support skew on
  // transmit lanes. By default, skew on transmit lanes is not supported.

  parameter TX_SKEW_SUPPORT = 0;

  //----------------------------------------------------------------
  // Internal parameters for PIPE
  //----------------------------------------------------------------

  // All the modules operate in DDR mode when the PIPE interface is
  // 16 bits wide. In 8 bit mode of operation the PIPE interface is
  // always uses rising edge.

  parameter ZI_DOUBLE_DATA_RATE  = (INTERFACE_TYPE == 1) ? 1 : 0;
  wire [31:0] pw_DOUBLE_DATA_RATE = ZI_DOUBLE_DATA_RATE;

  parameter ZI_PORT_WIDTH = (INTERFACE_TYPE == 1) ?
		    (2 * 8 * MAX_LINK_WIDTH) : (8 * MAX_LINK_WIDTH);
  parameter ZI_D_OR_K_PORT_WIDTH = (INTERFACE_TYPE == 1) ?
		    (2 * MAX_LINK_WIDTH) : MAX_LINK_WIDTH;

  parameter ZI_ELECTRICAL_IDLE_VAL = 0;

  parameter PHY_LAYER_CONSTRAINT =
                   (Constraints_Mode == 1 && MAC_LAYER_SIDE == 0);
  parameter MAC_LAYER_CONSTRAINT =
                   (Constraints_Mode == 1 && MAC_LAYER_SIDE == 1);

  //----------------------------------------------------------------

  // Input declarations 

  input reset_n; // Global synchronous reset signal
  input areset_n; // Global asynchronous reset signal
  input pclk; // Parallel interface lock

  // MAC Layer to PHY layer signals

  input [ZI_PORT_WIDTH - 1 :0] tx_data;
  input [ZI_D_OR_K_PORT_WIDTH - 1:0] tx_data_k;
  input tx_detect_rx_loopback;
  input [MAX_LINK_WIDTH - 1:0] tx_elecidle;
  input [MAX_LINK_WIDTH - 1:0] tx_compliance;
  input [MAX_LINK_WIDTH - 1:0] rx_polarity; 
  input [1:0] power_down;

  // PHY Layer to MAC layer signals

  input [ZI_PORT_WIDTH - 1 :0] rx_data;
  input [ZI_D_OR_K_PORT_WIDTH - 1 :0] rx_data_k;
  input [MAX_LINK_WIDTH - 1:0] rx_valid;
  input [MAX_LINK_WIDTH - 1:0] rx_elecidle;
  input [(3*MAX_LINK_WIDTH) - 1 :0] rx_status;
  input phystatus;

  input disable_descrambler;
  input skip_link_training;
  input extended_sync_enable;
  input L0s_entry_supported;
  input [15:0] device_control_register;
  input [31:0] device_capabilities_register;
  input phy_layer_checks_disable;
  input link_layer_checks_disable;
  input transaction_layer_checks_disable;

  // VC Configuration

  input [7:0] enable_vc_id;
  input [7:0] tc_mapped_to_vc_id_0;
  input [7:0] tc_mapped_to_vc_id_1;
  input [7:0] tc_mapped_to_vc_id_2;
  input [7:0] tc_mapped_to_vc_id_3;
  input [7:0] tc_mapped_to_vc_id_4;
  input [7:0] tc_mapped_to_vc_id_5;
  input [7:0] tc_mapped_to_vc_id_6;
  input [7:0] tc_mapped_to_vc_id_7;

  // Internal parameter declarations

  parameter ZI_SYMBOL_DATA_WIDTH = (INTERFACE_TYPE) ? 10 : 1;
 
  // Register declarations

  reg tx_posedge_toggle;
  reg tx_negedge_toggle;
  reg rx_posedge_toggle;
  reg rx_negedge_toggle;
  reg tx_lane_reverse_posedge;
  reg tx_lane_reverse_negedge;
  reg [MAX_LINK_WIDTH * 8 - 1:0] temp_int_tx_descrambled_data;
  reg rx_lane_reverse_posedge;
  reg rx_lane_reverse_negedge;
  reg [MAX_LINK_WIDTH * 8 - 1:0] temp_int_rx_descrambled_data;

  // Register declarations for gate signals

  reg [31:0] tx_clk_gate_lane;
  reg [31:0] rx_clk_gate_lane;

  // Register parameter_checks_active ensures that the
  // checks on the parameter fires only once.

  reg parameter_checks_active;

  reg [7:0] tx_n_fts_temp;
  reg [7:0] rx_n_fts_temp;
  reg tx_n_fts_field_not_same;
  reg rx_n_fts_field_not_same;

  // Register declarations for deskew support

  reg data_aligned_posedge; // Indicates that the data is aligned.
  reg r_data_aligned_posedge;
  reg [3:0] valid_bit_count_posedge;
  reg [31:0] active_lanes_bitmap_posedge;
 
  reg data_aligned_negedge;
  reg r_data_aligned_negedge;
  reg [3:0] valid_bit_count_negedge;
  reg [31:0] active_lanes_bitmap_negedge;

  reg tx_data_aligned_posedge;
  reg r_tx_data_aligned_posedge;
  reg [3:0] tx_valid_bit_count_posedge;
  reg [31:0] tx_active_lanes_bitmap_posedge;
  
  reg tx_data_aligned_negedge;
  reg r_tx_data_aligned_negedge;
  reg [3:0] tx_valid_bit_count_negedge;
  reg [31:0] tx_active_lanes_bitmap_negedge;

  // Wire declarations

  // Transmit interface signals. All these signals are outputs from the
  // lane receiver modules. Each bit corresponds to a lane receiver
  // module instantiation.

  wire [31:0] tx_d_or_k_code; // Asserted when a K code is detected. 
  wire [31:0] tx_deskew_d_or_k_code; // Deskewed d_or_k_code_signal (PIPE only)
  wire [31:0] tx_valid_code; // Asserted whenever a valid 10b code is detected.
  wire [31:0] tx_current_rd; // Running disparity
  wire [31:0] tx_eidle; // Asserted when electrical idle is detected.
  wire [31:0] tx_10b_code_violation; // When deasserted this bit will indicate
                                     // that a 10B code violation has occurred.
  wire [31:0] xmtd_skp_os; // Asserted when a SKP ordered set is detected.
  wire [31:0] xmtd_idle_os; // Asserted when a IDL ordered set is detected.
  wire [31:0] xmtd_fts_os; // Asserted when a FTS ordered set is detected.
  wire [31:0] xmtd_ts1; // Asserted when a TS1 ordered set is detected.
  wire [31:0] xmtd_ts2; // Asserted when a TS2 ordered set is detected.
  wire [31:0] xmtd_lane_num; // Asserted when a valid lane number is 
                             // detected in TS1/TS2 ordered set.
  wire [31:0] xmtd_link_num; // Asserted when a valid link number is 
			     // detected in TS1/TS2 ordered set.
  wire [31:0] xmtd_reset; // Asserted when the reset bit in the TS1/TS2 

  wire [31:0] xmtd_loopback; // Asserted when loopback bit is set in TS1/TS2
  wire [31:0] xmtd_disable; // Asserted when disable bit is set in the TS1/TS2
  wire [31:0] xmtd_no_scramble; // Asserted when disable scrambling is set 
				// in TS1/TS2
  wire [31:0] xmtd_idle_data; // Asserted when idle data is detected.
  wire [31:0] xmtd_comp_pattern;  // Asserted when compliance pattern 
				  // is detected.
  wire xmting_dllp_tlp; // Asserted when a DLLP or a TLP is on the link.

  // Receive interface signals. All these signals are outputs from the
  // lane receiver modules. Each bit corresponds to a lane receiver 
  // module instantiation. 
 
  wire [31:0] rx_d_or_k_code; // Asserted when a K code is detected.
  wire [31:0] rx_deskew_d_or_k_code; // Deskewed d_or_k_code_signal (PIPE only)
  wire [31:0] rx_valid_code; // Asserted whenever a valid 10b code is detected.
  wire [31:0] rx_current_rd; // Running disparity  
  wire [31:0] rx_eidle; // Asserted when electrical idle is detected.
  wire [31:0] rx_10b_code_violation; // When deasserted this bit will indicate
                                     // that a 10B code violation has occurred. 
  wire [31:0] rcvd_skp_os; // Asserted when a SKP ordered set is detected.
  wire [31:0] rcvd_idle_os; // Asserted when a IDL ordered set is detected.
  wire [31:0] rcvd_fts_os; // Asserted when a FTS ordered set is detected.
  wire [31:0] rcvd_ts1; // Asserted when a TS1 ordered set is detected.
  wire [31:0] rcvd_ts2; // Asserted when a TS2 ordered set is detected.
  wire [31:0] rcvd_lane_num; // Asserted when a valid lane number is 
                             // detected in TS1/TS2 ordered set.
  wire [31:0] rcvd_link_num; // Asserted when a valid link number is
                             // detected in TS1/TS2 ordered set. 
  wire [31:0] rcvd_reset; // Asserted when the reset bit in the TS1/TS2 
 
  wire [31:0] rcvd_loopback; // Asserted when loopback bit is set in TS1/TS2
  wire [31:0] rcvd_disable; // Asserted when disable bit is set in the TS1/TS2
  wire [31:0] rcvd_no_scramble; // Asserted when disable scrambling is set 
				// in TS1/TS2
  wire [31:0] rcvd_idle_data; // Asserted when idle data is detected. 
  wire [31:0] rcvd_comp_pattern;  // Asserted when compliance pattern 
				  // is detected.
  wire rcving_dllp_tlp; // Asserted when a DLLP or a TLP is on the link.

  wire [32 *10 - 1:0] tx_10b_data;
  wire [32 *10 - 1:0] rx_10b_data;
  wire [32 * 8 - 1:0] tx_8b_decoded_data;
  wire [32 * 8 - 1:0] rx_8b_decoded_data;
  wire [32 * 8 - 1:0] tx_descrambled_data;
  wire [32 * 8 - 1:0] rx_descrambled_data;
  wire [32 * 8 - 1:0] tx_n_fts;
  wire [32 * 8 - 1:0] rx_n_fts;

  wire [MAX_LINK_WIDTH * 8 - 1:0] int_tx_descrambled_data;
  wire [MAX_LINK_WIDTH * 8 - 1:0] int_rx_descrambled_data;
  wire [MAX_LINK_WIDTH - 1:0] int_tx_eidle;
  wire [MAX_LINK_WIDTH - 1:0] int_tx_10b_code_violation;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_skp_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_idle_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_fts_os;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_ts1;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_ts2;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_lane_num;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_link_num;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_reset;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_loopback;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_disable;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_no_scramble;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_idle_data;
  wire [MAX_LINK_WIDTH - 1:0] int_xmtd_comp_pattern;
  wire [MAX_LINK_WIDTH - 1:0] int_tx_valid; 
  wire [MAX_LINK_WIDTH - 1:0] int_tx_d_or_k_code; 
 
  wire [MAX_LINK_WIDTH - 1:0] int_rx_valid;         
  wire [MAX_LINK_WIDTH - 1:0] int_rx_d_or_k_code;
  wire [MAX_LINK_WIDTH - 1:0] int_rx_eidle;
  wire [MAX_LINK_WIDTH - 1:0] int_rx_10b_code_violation;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_skp_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_idle_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_fts_os;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_ts1;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_ts2;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_lane_num;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_link_num;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_reset;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_loopback;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_disable;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_no_scramble;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_idle_data;
  wire [MAX_LINK_WIDTH - 1:0] int_rcvd_comp_pattern;

  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_tx_symbols_p;
  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_tx_symbols_n;
  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_rx_symbols_p;
  wire [32 * ZI_SYMBOL_DATA_WIDTH - 1:0] int_rx_symbols_n;

  wire tx_level_select; // Transmit level select signal
  wire rx_level_select; // Receive level select signal

  wire [31:0] tx_lane_0_detected; // A logic high on any one of the bits 
				  // indicate that lane 0 is detected on 
				  // that lane 
  wire [31:0] rx_lane_0_detected; // A logic high on any one of the bits 
				  // indicate that lane 0 is detected on 
				  // that lane

  wire tlp_xmtd_tx; // TLP transmitted
  wire dllp_xmtd_tx; // DLLP transmitted
  wire [2:0] dllp_count_tx; // DLLPs transmitted in a symbol time
  wire [1:0] tlp_count_tx; // TLPs transmitted in a symbol time
  wire nullified_tlp_xmtd_tx; // Nullified TLP is transmitted
  wire tx_inc_sdp_stp;
  wire tx_inc_pad;
  wire tx_inc_end;
  wire tx_inc_stp_on_non_zero_lane;
 
  wire tlp_xmtd_rx; // TLP received 
  wire dllp_xmtd_rx; // DLLP received
  wire [2:0] dllp_count_rx; // DLLPs received in a symbol time
  wire [1:0] tlp_count_rx; // TLPs received in a symbol time
  wire nullified_tlp_xmtd_rx; // Nullified TLP is transmitted 
  wire rx_inc_sdp_stp; 
  wire rx_inc_pad;
  wire rx_inc_end; 
  wire rx_inc_stp_on_non_zero_lane;

  wire [1:0] rx_tlp_detected; // A TLP is detected
  wire [69:0] rx_tlp_pkt1; // TLP packet 1 contents
  wire [69:0] rx_tlp_pkt2; // TLP packet 2 contents
  wire [1:0] rx_malformed_tlp; // Malformed TLP
  wire [1:0] tx_tlp_detected;
  wire [69:0] tx_tlp_pkt1;
  wire [69:0] tx_tlp_pkt2;
  wire [1:0] tx_malformed_tlp;
  wire [1:0] tx_tlps_with_digests; // TLPs with TLP digest detected
  wire [1:0] tx_tlps_with_ecrc; // TLPs with ECRC detected
  wire [1:0] rx_tlps_with_digests;
  wire [1:0] rx_tlps_with_ecrc;
 
  wire tx_lane_reverse; // Lane reversal on transmit interface
  wire rx_lane_reverse; // Lane reversal on receive interface
 
  wire link_width_negotiated; 
  wire [5:0] link_width;
  wire [31:0] link_width_bitmap;
  wire phy_status;
  wire dll_status;
  wire [1:0] tx_retry_progress;
  wire [1:0] rx_retry_progress;
  wire [1:0] xmtd_lcrc_error;
  wire [1:0] rcvd_lcrc_error;

  // Statistics
  wire tx_dllp_ack_detected;
  wire tx_dllp_ack_ended;
  wire tx_dllp_nak_detected;
  wire tx_dllp_nak_ended;
  wire tx_dllp_pm_enter_L1_detected;
  wire tx_dllp_pm_enter_L1_ended;
  wire tx_dllp_pm_enter_L23_detected;
  wire tx_dllp_pm_enter_L23_ended;
  wire tx_dllp_pm_active_req_L0s_detected;
  wire tx_dllp_pm_active_req_L0s_ended;
  wire tx_dllp_pm_active_req_L1_detected;
  wire tx_dllp_pm_active_req_L1_ended;
  wire tx_dllp_pm_request_ack_detected;
  wire tx_dllp_pm_request_ack_ended;
  wire tx_dllp_vendor_specific_detected;
  wire tx_dllp_vendor_specific_ended;
  wire tx_dllp_initfc1_p_detected;
  wire tx_dllp_initfc1_p_ended;
  wire tx_dllp_initfc1_np_detected;
  wire tx_dllp_initfc1_np_ended;
  wire tx_dllp_initfc1_cpl_detected;
  wire tx_dllp_initfc1_cpl_ended;
  wire tx_dllp_initfc2_p_detected;
  wire tx_dllp_initfc2_p_ended;
  wire tx_dllp_initfc2_np_detected;
  wire tx_dllp_initfc2_np_ended;
  wire tx_dllp_updatefc_p_detected;
  wire tx_dllp_updatefc_p_ended;
  wire tx_dllp_updatefc_np_detected;
  wire tx_dllp_updatefc_np_ended;
  wire tx_dllp_updatefc_cpl_detected;
  wire tx_dllp_updatefc_cpl_ended;
  wire tx_detected_dllp_pkt_valid;
  wire [63:0] tx_detected_dllp_pkt;
  wire tx_ended_dllp_pkt_valid;
  wire [63:0] tx_ended_dllp_pkt;
  wire [11:0] tx_current_expected_tlp_seq_num;
  wire [11:0] tx_ack_nak_sequence_number_of_dllp;
  wire vc_tlp_transmitted;

  wire rx_dllp_ack_detected;
  wire rx_dllp_ack_ended;
  wire rx_dllp_nak_detected;
  wire rx_dllp_nak_ended;
  wire rx_dllp_pm_enter_L1_detected;
  wire rx_dllp_pm_enter_L1_ended;
  wire rx_dllp_pm_enter_L23_detected;
  wire rx_dllp_pm_enter_L23_ended;
  wire rx_dllp_pm_active_req_L0s_detected;
  wire rx_dllp_pm_active_req_L0s_ended;
  wire rx_dllp_pm_active_req_L1_detected;
  wire rx_dllp_pm_active_req_L1_ended;
  wire rx_dllp_pm_request_ack_detected;
  wire rx_dllp_pm_request_ack_ended;
  wire rx_dllp_vendor_specific_detected;
  wire rx_dllp_vendor_specific_ended;
  wire rx_dllp_initfc1_p_detected;
  wire rx_dllp_initfc1_p_ended;
  wire rx_dllp_initfc1_np_detected;
  wire rx_dllp_initfc1_np_ended;
  wire rx_dllp_initfc1_cpl_detected;
  wire rx_dllp_initfc1_cpl_ended;
  wire rx_dllp_initfc2_p_detected;
  wire rx_dllp_initfc2_p_ended;
  wire rx_dllp_initfc2_np_detected;
  wire rx_dllp_initfc2_np_ended;
  wire rx_dllp_initfc2_cpl_detected;
  wire rx_dllp_initfc2_cpl_ended;
  wire rx_dllp_updatefc_p_detected;
  wire rx_dllp_updatefc_p_ended;
  wire rx_dllp_updatefc_np_detected;
  wire rx_dllp_updatefc_np_ended;
  wire rx_dllp_updatefc_cpl_detected;
  wire rx_dllp_updatefc_cpl_ended;
  wire rx_detected_dllp_pkt_valid;
  wire [63:0] rx_detected_dllp_pkt;
  wire rx_ended_dllp_pkt_valid;
  wire [63:0] rx_ended_dllp_pkt;
  wire [11:0] rx_current_expected_tlp_seq_num;
  wire [11:0] rx_ack_nak_sequence_number_of_dllp;
  wire vc_tlp_received;

  wire [11:0] tx_num_outstanding_tlps;
  wire tx_incr_detected_duplicate_tlp;
  wire tx_incr_ended_duplicate_tlp;

  wire [11:0] rx_num_outstanding_tlps;
  wire rx_incr_detected_duplicate_tlp;
  wire rx_incr_ended_duplicate_tlp;

  wire [15:0] tx_replay_timer;
  wire [15:0] tx_acknak_timer;

  wire [15:0] rx_replay_timer;
  wire [15:0] rx_acknak_timer;

  wire [7:0] link_number_tx;
  wire [7:0] link_number_rx;

  wire int_disable_descramble;
  wire disable_descramble;

  // Wire declarations for deskew

  wire deskew_fifo_flush; // To flush the deskew fifo
  wire deskew_fifo_read;
  wire deskew_fifo_read_temp;
  wire data_not_aligned; // Indicates that the data is not aligned.
  wire [31:0] deskew_fifo_full; // Full flag from deskew FIFOs.
  wire [31:0] com_read_from_fifo; // Asserted when COM is read from deskew FIFO
  wire [31:0] deskew_fifo_empty; // Empty flag from deskew FIFOs.
  wire fifo_empty; // Asserted when any of the deskew FIFOs are empty.
  wire [MAX_LINK_WIDTH - 1:0] masked_bitmap;
  wire com_read_from_all_lanes;
  wire data_aligned;
  wire r_data_aligned;
  wire [3:0] valid_bit_count;
  wire [31:0] active_lanes_bitmap;
  wire com_on_consecutive_lanes;

  wire tx_deskew_fifo_flush; // Flush the transmit FIFOs
  wire tx_deskew_fifo_read; // Enable reading of transmit FIFO
  wire tx_deskew_fifo_read_temp;
  wire tx_data_not_aligned;
  wire [31:0] tx_deskew_fifo_full;
  wire [31:0] tx_com_read_from_fifo;
  wire [31:0] tx_deskew_fifo_empty;
  wire tx_fifo_empty;
  wire [MAX_LINK_WIDTH - 1:0] tx_masked_bitmap;
  wire tx_data_aligned;
  wire r_tx_data_aligned;
  wire tx_com_read_from_all_lanes;
  wire [3:0] tx_valid_bit_count;
  wire [31:0] tx_active_lanes_bitmap;
  wire tx_com_on_consecutive_lanes;

  // Wire declarations for Power Management 

  wire xmtd_pm_active_state_nak_tlp;
  wire xmtd_pm_pme_tlp;
  wire xmtd_pme_turn_off_tlp;
  wire xmtd_pme_to_ack_tlp;
  wire [2:0] xmtd_pm_enter_command_flag;
  
  wire rcvd_pm_active_state_nak_tlp;
  wire rcvd_pm_pme_tlp; 
  wire rcvd_pme_turn_off_tlp;
  wire rcvd_pme_to_ack_tlp;
  wire [2:0] rcvd_pm_enter_command_flag;

  wire eidle_detected_tx;
  wire eidle_detected_rx;

  wire reset;
  wire areset;

  // Integer declarations

  integer index, index1, i, j, a, b, c;

  //-------------------- PIPE Support --------------------------
  // Declarations for PIPE interface support
  //------------------------------------------------------------

  reg [MAX_LINK_WIDTH * 8 - 1 :0] tx_data_low_byte;
  reg [MAX_LINK_WIDTH * 8 - 1 :0] tx_data_high_byte;
  reg [MAX_LINK_WIDTH * 8 - 1 :0] rx_data_low_byte;
  reg [MAX_LINK_WIDTH * 8 - 1 :0] rx_data_high_byte;

  reg [(MAX_LINK_WIDTH + 1) * 8 - 1:0] temp_tx_data_low_byte;
  reg [(MAX_LINK_WIDTH + 1) * 8 - 1:0] temp_tx_data_high_byte;
  reg [(MAX_LINK_WIDTH + 1) * 8 - 1:0] temp_rx_data_low_byte;
  reg [(MAX_LINK_WIDTH + 1) * 8 - 1:0] temp_rx_data_high_byte;
  reg [15:0] temp_tx_data;
  reg [15:0] temp_rx_data;

  reg [MAX_LINK_WIDTH - 1:0] tx_data_k_low_byte;
  reg [MAX_LINK_WIDTH - 1:0] tx_data_k_high_byte;
  reg [1:0] temp_tx_data_k;

  reg [MAX_LINK_WIDTH - 1:0] rx_data_k_low_byte;
  reg [MAX_LINK_WIDTH - 1:0] rx_data_k_high_byte;
  reg [1:0] temp_rx_data_k;

  reg no_check_for_edb_without_stp;

  wire [MAX_LINK_WIDTH * 8 - 1 :0] tx_data_8_bit;
  wire [MAX_LINK_WIDTH * 8 - 1 :0] rx_data_8_bit;

  wire [31:0] int_tx_elecidle;
  wire [31:0] int_rx_elecidle;
  wire [31:0] rx_valid_in;

  //-------------------------------------------------------------
  // Internal wires for TC/VC Mapping
  //------------------------------------------------------------

  wire [7:0] enable_vc_id_real;
  wire [7:0] tc_mapped_to_vc_id_0_real;
  wire [7:0] tc_mapped_to_vc_id_1_real;
  wire [7:0] tc_mapped_to_vc_id_2_real;
  wire [7:0] tc_mapped_to_vc_id_3_real;
  wire [7:0] tc_mapped_to_vc_id_4_real;
  wire [7:0] tc_mapped_to_vc_id_5_real;
  wire [7:0] tc_mapped_to_vc_id_6_real;
  wire [7:0] tc_mapped_to_vc_id_7_real;
  wire [7:0] tc_mapped_bitmap;

  //-------------------------------------------------------------

  wire compliance_check_enable;


//`ifxdef ZI_FOR_SEARCH
//  Currently not Supported for Search
//`endxif

`protected

    MTI!#$'5YmHQ^LTzUVuOi72*\oQDQa'z25C7Dir?Tz7"A<+2YB#J<1R<_=*i'a5R}B{[s]GJIGj7
    Z51<}#$O~N-rJQ1+!u>|pmHjo;sKeW-nW1[[n[XBIT{?AGz7zAr@m'KJz,n1)p@n-a9m{m}2w5{0
    IaQ\]Q''^r^@[mG5Frjp2#ROx3pzrKTap%;DQsC{n3Z=pX<,R$!^sJmxua_77PAs@OCKnsI*Borx
    Vo.Vv,pIZ\w\Y\}?7v@H<Tm:{xTr~C}TxYnprTC^?O*A_$l!KUnZl_X!DlY*BnY=QW<-DOo[i*+~
    >XT'U'QIj@pi@x,aLb"knOp\J@7G5AxnnI'$sis'a;ERKU]i=#Xs!_xs1Ep~j=C}3~J_,!+l#}As
    <eD~Bsud$oI+IjB72lU#IKo+y13xiH_CQ<CUUlCVpOm=]?\Q{!,'Osv5O2H7k_<Kp_[\\deiJ[]@
    YWxKrVCkvZB,{BG^R-irWjkDWe^xmlj^s^2Q]^E1A7e{KB?8[I*=~$Y5e]_E|IEkD$HnUxX[!QeG
    U&'[AAG<{GWCO<GJWV\AAa2>@\HO-$$DpZx_Qm'}KOQoY2sUQs3^k?xR$JMvo_~wsanSA1^I{{2Y
    X{+oMaO_~n-*pK-Dl,Z(]J{o;pGzvi+@]>VjOn~BaYk_Fp7p@Y~2EIkICpue-TR^{e;<ZCK1j>GZ
    kf>sl@^iz-8nz}vT5!5X'jw=J+pO@]<ve;~YV-U(:1VjlC?=>~*AT@|kaRY@s~+.IT,[7!o[]np\
    B;pnH^@W>,s!o*s['6S}hCEYjHT,D_hIuO^$VZ?E<A?8]{pQ!$;{r3D?-<J1zs*!<DxD[m+n>pe^
    C15[_j5QQz>upiUuHoJCo]ipe'f|z<WVOA7le+<B+*Q^++wOU[kTM}*-5&?T5[$YkD*>Zams_{QG
    -s.N<{X<1U'5l1;Cs_37)lRz!@Tx\tT8"UzAY2YDDzG2JE-Y>72]@EIxXAVo]DwjQZO#$UDH_^i^
    ]@vY!mVE[*B@lwVj[?YsBXe@AeTK3$TH]o+~*Z}@Jp]-QBrs{AVa}ssaa9g9IZ-;u>u71BeYe<3p
    Xoz2[.p\kB3z-uV,?{IKp;\E?J!EHu<U7'}}^7N@RZQU7i,,#22Im}Qa'7E'v]RQ+o75{HY}nax>
    XuW@'\OjZ!kmv^w!Q>7U'!^n7A$'u!*Do?AKl1^omwetwO3Gujkwn'O<e}X!xpIi1^j$;^-2+X}D
    rOCuzAa_XY\<[x3UYVoe1jXTva;kRzQ}WHpnC]YQoolAm+57We~'}T]z(ReADKr@kElZuOX]A%,A
    @_1mEjVVe}JDr;XU\7}:[xri_px~A,7p:V?j*f>os['2I$lW~'Y^w-Le+]eIiB*$3xQE@n{'KQ-P
    ]Yselkm3#5RG\saJp'H^[3<aj*!2uzA>CzQYEO*iE]u-.MZo^5~Y?,$-{K<(\axR*\Wu|Gj1UH>2
    !xXY<R!op']Cn=Y*}_-QRoIuwxQXl*oAI,i*WAEnu-,k3]eBj\RYC*H+j}euB5;Z'aT~YO<l3C#G
    u+RuBF-_w>YRi,li1T7?[B[NA<\5m-'!5joVKOxi1VCz~Tl]zIAX2s]o,lx>~5pi7>[^9t^H5B,a
    {lOwvuQ{UJ<wAY]GeH<VQW5K~DMvfVJ^-L>pRu<-57uXBjS1RD23E_~D#;K|q^!'D{$;eGZR;XEn
    j*5_awH]>pk3RC$ze}?!YYn,pQID$+wTTo\>~M>Ev@iaR-B-rGl]V]^@a^Y+yHw]=^rR~k_$7lV]
    *2s?![;\nO_R<uIB@mIlwY~5{Q?;@;j>vOa~eBJz'H7op'7#aoU_C}XX\[Qi>z-sTuV*^[1E*_K<
    !(*jXZT$^^vDnaJUA;*H{oUVk_e!5sM2B~]Ry{X77C;~zmr?Z-Y?^a7^2Nh]5ZxVsmwDW1e'VsTQ
    <[[pC3$OQ\phC#aE*zA*C]}#B-Z{n1GuIvzJz$,@B1Yw7mJncO=GX7IAXWzo5e!e^j<D>,sX{*#7
    37'Z?xOmGBGR=T\UuZz5?[23o,lx1Ia}XQvR#<Tu76I~m_N:ap7=Or]upnlX}k^Q755K5QjjVe2#
    i[z;jmxD-I#RhTG1-sZxT{+,Wr>XIT<_R0A_YUaR<>&7EYv_?o3jC5$yJ'$,Q7aWn_#Cre][^3=e
    }@^D<j+BL1unHl#eoOk_V+-pW)]U8aw-}zaDZ}um@:#zwrpAr3<Y]^jaT3]E^_%a,Wj3[-pG52]J
    *K]e-_E=@xp[@~;rB*WaEnCh@YHYACE#;HKp|ADuV]wX]sp+Qsw+jaaBW^l,opB_Vl*UVBoj\v#;
    e$xpoF1$1iN<N8';\\+TWxE*uoz_#s_l_\y7I?V<vJu]UJ}"vUx*L]'^vy4I\m7n[es5?Tm21Y73
    7krC23<};+RGZ\~$r1az}fs*,z={Hjz'E?-sK<]u_CL7m$n|,1$,*@$?^|Ni<xQ[~o?aDBHop?]~
    j,[V^~ZqOjBvIJs]xw7-e?Qst>RnV@Y>Op,r$ZIV2YDvaIuQIQKA-4$D2~F8*H<XN?IZW'm\$v[{
    $DAe[9~zjQci$v7N,?xH[5VXNOO]Qi-RrGKp_m[VRTrRDI1*j@I@@zxTpG_JTEn5=DQlp5Or]\YB
    r7~Z_T[D2PH=iovI^#nBG;(z^U-|E}JAa*lU#,A-QHjujDVz=[p*ksXAoGY{VRCzC7]2di*o;r*;
    HBj$?2oD!qGmpD!p#{ma[[*l<x__YG"57[u/Q;WaWriA@TYu2o;uK{^]~>J#~v!Zk=!BKTATp[eT
    IF7i[rOoRQZtSQE2<aB#AoZ~DaEkEd{ji36E.]ZKK\,*ADQnCoX<~3EU{j]\V[Bc@}{]AO71q6%7
    NIn[m\ZHT[VE@o[QopR{ZqyiT{<$T>;$^;uOO3_n,K[,I_ekr*jsoIoX[YZ*nUow_[u+TX$Zxa3O
    -wInQ]mp!>Gsux+DB_#,Kn_sT>^Y#Q}N<<oK@psCY^_,[I,]A<m'}!RjI$*EsW-Qx[t>1k!E+uQe
    k'@s~[K[AToKTH-]JTVSNBG2Q_Q$-G,+U8;R'?CskTlezX#Q#K=Oarr\n>[V'=Ua^pb{C+<HQR}[
    3;<]5Yxc#w~U35pUXO-K5!C'}~l,@<+[kST\kUsu->i+<uxQzn~'J<$Uu5H=soIB}zBa{lbq?vV?
    .<tG$AB};R_EB,OywnTOGxJQoD3735u~ffJevYEJ_ip_1^kwViZ{*\A{]AF[W<K=!u^{qQOmH\we
    pI<n}nH~5OY*er+==[x}r%p]T>Kn\{0CtO_\Dm^}7MemB[<Q\,2U~[F&z>mBYa[wCz<Bs@<AxP,w
    ^G3^?X]@p1'=NB37BkwzKT=TR_]pZN-<lk}+![;E'AiVeK!QmZ[KWwbvXz<I1_~Q=[=%1E?#W1B]
    N?ou[<A-RXQeA{VvuYnTXr;R1Hru7'#E_nI{pRlwWe1*v<75<X5m7goCTzCEEvt_vBCXo,Jja;z+
    wEK;H[,u+X{KwY\ju@!'v+EoIQR,UD^iAT!{BnrRGi1D'~n8C7C[wEB2p]!Y%slXTIz[$CTB=wo]
    wprAH^@s+J>$DoRWQnv2p}2=X}RnD>>'pVp<\IT>UB#O<'>jo<-}3HBJ3T}+EI6zY7a[37V:37iB
    2XFz@H[]Z\jOZ-3$GisA,em<v$]E?<}'^B@AQjV$kZCgXC*pB;u@IVjB2j<w>AZm{o!+[\J]s9\m
    VIXHEms@;]cx1R1d7<p#nQRB=}_Q[eOW>luRiDi^{v$rJw1mVsm,-53[ID-j|+GxI^!,wQon_XG2
    ljsE-esCDxwGRZIDWVWVx~,J_j665e+Kj'$}i<}RT\H;j+1l^U=K5!ITNpp2H![^^KHZHF@H1QsY
    !5kjB2[k3'"1luZllYe;$-$?*Zmv;'Je<Ck^}7,waB^HYB]T{Z}r!o^]iXUs^R-R'uei1pzGSIoo
    z^[Z,ajm}Du}TIEC!D~<DTEWo?HIz#l\e=.5p@52sT\^~ezDsHY#>;eQp^BeCXjJY<_!'m;N]_}Z
    }+vjCpl2!{='}T,U]1v]AVo[pnlAfT\j[[A[<tUwWv}4(wxk~C*{[5Z>J#IHp1B*ErOPK=k$$;oA
    -X[sHrmWN=A'XCnQ#31#_;=H?Qen^!r>1>TrYB$o@:@EXpW-r;[ER3q;z?=o)kE]["x^^Af*?Q-A
    oK,QY]=XD]@r>__7A,WR\,[7^+U1lZj9!Q<^?*~$_WZ+^^mVHG,-lz*k{CD,z=5A.sQ~J7]rJGem
    k^K@U$>*Z*^m2D~Jmp7xA{a'kQLCu'2Q5<5Dp1_u*lDlP]~Z^B[nK*VuO;IH[=RsHar>^{,#]*2X
    [k<5$FTO7E7pW}m**$a]nOOv=u@B?;*6wpV2XAer!+l^E-!rJGz3JwZr6V^rG;{zVJ{>xn'R}_iG
    jY31sIrZZ<1-O)D_A}zoHpojVAx>-I]u5]'Vx7lUQJU=<V3Oee{73'-}i<,oAk;T_2s*UK#+rvjT
    -a7<w1[kK^SDo1{oST*}ZqvAWw;IQv$G<DJzK]}z2Q?X3^CknxVOW=T7JTi>+sVur-W>^ID3DI\K
    He$HA+#>,@7K^O}\UCznY^[Eo5nBH+_D_o_<<^NLVZj>7~H#_;G!TB_KLHaJC$$Zznx+INTH3RWH
    H1_W.#Il;DT{AA\#>hTH,EO^*[osm+1*lAbApJ=3Q[WuV}}BiQXupIs$nz\ie+9m_C\5r]'\2*R<
    '5YeiIn$7-RI~,GrjU\Jxm<=^_j=iVHHsoB]5K}R^Ox1HnR)R-_l+oE$vlOnl/U]Tl_=~=enIi@e
    ,5Y\V+u-l[JHul}+J}BimX{a$EHr<>|s>@GB3oXN^]=iOpAJU-Q-;-Zv*QGH~{<pJs2>35??B>CE
    SL-wKnmoD1X-@W$~rDr>D!4ma_[E#AwBp!V3'D!U>;Y#1^Geno51U;JsA*IYe\jDDzJo1_VIw{_G
    1]V<GZX=^ap!IQB#&!]+e<TI$~w2Qj[3_Q[{Zy;5+Q@<21a{BlN,I$-?B~5>+<@V&VlYpE;I\Zz@
    aO[vZrXe{Bu<;[DED$=1}|)m^3_n'j=UUr~x[+om5\mR/=Y^X;Vr]O*ma#BuIljxD^*'t^W!5c_i
    T;]1j+RHm1RW[sg~+2^D;-H]emQ_}^3Vn{YS[Ep'M&1KQ'l@I,Q*7KJpWwlE[IxBC3wr+nN;{@'L
    CuuEI"\3soTU=e"%=T'uEVUpD,VlW*z2VWl]nI2Af\,\1kRQ2;O;wU*JQ_5wn[uj@-r><3xzxB~B
    lBwlB;R]@VrOXU}G5[XsUX_YRv+7;$C{2+<;[@xs>^_I]<R7DKUjpXVR~7UzQCW,O5Y<O>5B3ux-
    u5[mwow>{+]GzE+Kpw$AK(VD'2G{~Y_-XpU*A]Kwm7#I^!EQW}J['EJYo<1}a_ivLwvu3BM+7RTr
    1w3MAQB+6OVYp*z?xxtXOmo}XQwjY}+0IY?u2-KCjV#sEGQOA,\2v!^aYRCTzOVs-L~$J!+>VJ1g
    ~*jwW}_^%KAaUy\K\K@={\r^u~\]W@Pt$}n-]3![CW_5[#*k1hO;e[ko]RYN1mGCKasn}AC[-}HY
    oXYw^i@WwT^'V7o?si}JI.2{=5_A@U77[D@5\52A5s!aG~Yl-U{YH?KY<Hsivv6;Te^*y:nDDDx7
    l*XT@aGKHD*s[$;o*^a\ZrEP_QEEgRVwaxQ<?I[a?#,aZ3Qi^YA^aIO1*VeQ'TUX]j-s7~A+QEl<
    HIQ,T_zmr\3=}=ZKvcO+==QY!JIkAHgi}ue{CpvGAZ[xwl~f;I$nIioW\q#G?Wt=_5oGKA?S0r]7
    {-\{QT>-n?RH,AoBeY3$$<YE]z1\]]k@Uk<[!injJ>V,D8?s?~ep>{kGnuw7!{l2B!*+{B'uVu2}
    {Rx,Y\!hKv=#W<+mBXxYWrGG'U>*+]5x?_kD$}}xg'~1r0;rlW'Y\]>H[-@}\vkGxo6xz72E3<_'
    7xYB^Zs2$vDVJ@j}3u{pi;x!_IG-[kYr<n@O1H#O;-!>=@HEJoHt1?<mm>p^ep{?IJ\poW!]Xnoa
    lJjqr^]GY>TKY-j52eTQXAYBs2sYj*5i-<w?v!XR=z\B(#aKj=KZ,rx=ojkwVP>H1Vp]iU]7vsCK
    JnU\e16V,V;a^^x<e~C-EBxG2OT=$[E=S$9!nW}X{KKB;R2UeK;{QBO{&7=V~=WA?>,110_z}=*2
    *i{XJe*5JBx1,}GiD_>^@oNO'u}z=unE\K\u}E-B-';{*w{zQ#7DHGmCUv-{$Y?l'G!D^-jHHuoK
    zOz2a-p?D7>W*7^YJ]$>D,#o-BTIx?[Ws\v@xEZi-u,}Ea^io\rYK+~Pj,k''?7-oKCn1~l[@Y_!
    )rHu}E-ZYm'&3_3>QRj2m[[UYa]3RrUJ$}7TT+u3xu=kAw@QSkU]\w$Xp1#G*VMN;$KIII2DCdBx
    Bww-!=?AK[$G$]~aJ_O_ak:mR\2U{IYTw!_,WA1E*1obo32~#e$='\-=#E3Hz/j-*Xl;}up5pj}u
    vU$\vxvI@k1]#E$+YuqOrDr*DY^',A>[25!z~3_JewRAt,I'H!sjK.\-Ow~<@nP@5xkf[YY}5}_A
    2OoxjTBOG#7GixQ$i$YsAnAHjx<Hz5}VC>Vmi^#zmp2CuX~@[n7E5<C>FC0Xs--OCZGvR@kUOle2
    v,2\ezwW<A2pQ2_hj]Dw'Qu?CnG#1{vkmE-\Y=2='1wXX}]j@r[BPK+Y+R^p#rTV[naJmUH'aj5[
    !1x>o=t]a!URX_pJU\}UjwnoHBx2DmW1<u,WEi^UwT}Ke*A[-e-$zJrqjCmTn,,!upZJEeaH$V1}
    r];^SBFiO[7R=@1R,$-r#]i'gIHn^p3'T1n-}o<=\"R'Xv?{+-,{=VGW!\5X13m{en3VWR+[A5'G
    ?KApi@D@+>w+-5GkKzw[p^>[$n5pXD'=!nN*E{l_Cv]K>_rf!sC3Hjs[[7x=*k]U\pH}Qvk?ln]?
    2T][DK'T1RVpOSV!,W3A\2J<
`endprotected
 
  parameter ALIGN_S0 = 0;
  parameter ALIGN_S1 = 1;
  parameter ALIGN_S2 = 2;
  parameter ALIGN_S3 = 3;
  parameter ALIGN_S4 = 4;
  parameter ALIGN_S5 = 5;
  parameter NO_ALIGN_STATE = 6;
 
  reg [2:0] next_state_align;
  reg [2:0] present_state_align_posedge;
  reg [2:0] present_state_align_negedge;
  reg latch_compliance_pattern_detected_posedge;
  reg latch_compliance_pattern_detected_negedge;
 
  reg [2:0] tx_next_state_align;
  reg [2:0] tx_present_state_align_posedge;
  reg [2:0] tx_present_state_align_negedge;
  reg tx_latch_compliance_pattern_detected_posedge;
  reg tx_latch_compliance_pattern_detected_negedge;

  initial
    begin
      #0;
      next_state_align = ALIGN_S0;
      present_state_align_posedge = ALIGN_S0;
      present_state_align_negedge = ALIGN_S0;
      latch_compliance_pattern_detected_posedge = 1'b0;
      latch_compliance_pattern_detected_negedge = 1'b0;
 
      tx_next_state_align = ALIGN_S0;
      tx_present_state_align_posedge = ALIGN_S0;
      tx_present_state_align_negedge = ALIGN_S0;
      tx_latch_compliance_pattern_detected_posedge = 1'b0;
      tx_latch_compliance_pattern_detected_negedge = 1'b0;

      tx_data_aligned_posedge = 1'b0;
      tx_data_aligned_negedge = 1'b0;
      r_tx_data_aligned_posedge = 1'b0;
      r_tx_data_aligned_negedge = 1'b0;
      tx_valid_bit_count_posedge = 4'b0;
      tx_valid_bit_count_negedge = 4'b0;
      tx_active_lanes_bitmap_posedge = 32'b0;
      tx_active_lanes_bitmap_negedge = 32'b0;
    end

  wire comma_not_aligned;
  wire latch_compliance_pattern_detected;
  wire deactivate_not_all_lanes_checks;
  wire [2:0] present_state_align;
  wire deskew_control;
 
  wire tx_comma_not_aligned;
  wire tx_latch_compliance_pattern_detected;
  wire tx_deactivate_not_all_lanes_checks;
  wire [2:0] tx_present_state_align;

`protected

    MTI!#^Is5[C#~_!xJ>HsClr5!\;1$t<]!!AGh}#_,NYm[;q&^=kTG$]Q[-V]?Y7Y#jV3vCw_3r<B
    zQ+JGwzTOIxi$nj\I#<,o#HzpODiu{^X-pHe>n'iIBpDej3K}T{?e$o~G^{zKoa3IdQeiG|5-27p
    uDYH[YmR?np,3X1VZ]!7#}\^W@QG^@jB{2;*@v^~+3_<sjiLelp7oHQjVA>XjReC>pj][_UaIGBO
    olD2*Y]$kn\7$QAk~AvCeb#1a!n']';Q<JGoX=,+J-31<no\ZU$<jA$>lV}m{~Un]{0nT\22EH'}
    m7Q#5?ZwBJ^z2C5l<5,kpsJZ__[_?DV?CBD\Cp$G?3T|~*R}oGaDAsp+rKTr%L>D\7@rQz[+IO?>
    !x=;3$1o@_@}Qp<\FL=X<z<}IRekll'AQVd1$rRyE~\~G-A2BHo\JYuURH-{E[OOh+-+^}k*j&RJ
    {rG'{l?}R@+Q33L*e<xNO@uY]DGKpRX<T*DBTnW]I\xKsYiX_Zms7xI+!,$!,d;=D5FjBoYB+o~Y
    ;;<Y\?*;{z^<+{7sJ\]E@-B7;I_@alxH]#=1-u?n{BZ*z!Q{EnH2Xs[RXJ*3Be{5bD#,5'3[H?Ga
    =B(a5#,k7ZY!wJp0k[Rl6BZTw\DC4=fBo;Bpn5s\l,}q*}~KIjJ\I}"Yq2p7v;V+u\?a#OG+RB{I
    \E"B@{Ce,Y!XE@=ZBVAx3=>%ACz#a^vY{zWQpJ}QQC?=,ZBwYC-AqBJ;]sv-km+]*j-=-q<XnalE
    <[Y>}Rv3I@q9R~A[(AEpW[{<_5\O<_R3#}1Oi]eraOlv\eW_wmT1A,;>YBhxBIJ\XXE2s$kHEYxC
    J_B~5Hz\^QzXl<Oa_YK]ZAE\1lApTV5CQ$n$sR3OBe3ojG'CK>vJ$BXceK$?=mOk@IGE!auEpBQr
    ,Cx,A'?'5\W=__?<:jpV,QX,RR57!YQU,,A$muO-W<YlGn'ZrQo@O7]<CloD[>V]rz#JWs^xRWBR
    a$Y{@0rvH$,*QI}V!J{=JWV@REq~-Yap>_]v,YGSliAsBE;nlKBELj>7rRsoTE3@x-*1ZJT_nceQ
    5WK,G~=H$*%v#j?-}-KE]aulApDET';Hx<Oe'AO1zH!vJ\zO1T3m7>j5@np}JplNN}ZDXICw'+]U
    3}Qm7l\z]l2n7xY7*Vo{D[i{*'3K,+wXOX,2W5~Zk>1QlUUXW?_aZ~wUn*$;z=="B+wa^X*$NX$a
    VIA[j}7EI]=Q]<I5p7$l$/WOn2ll{+GUp@jzx{#sODCX2\xG^$_ze=W$#'vsn5T[*;_B"}CVXpIm
    CK7+pG!oZ-X7T8B5*2G]A#To}C{a]{i{ZJ2a\+Bx\ZbpE}@rW'+Ii[#n[lW0'3{'j^;j[nZmmI,H
    Xp_!GP3&=v{R$<[=;|Q>,[5iwIUlu~uBT@,EnT<}u!3_U3pG\#j~su,u+a;p-2P*IUxnD-acoxJI
    ;];_p;HsWz]<[GA^_J'@ZA*;x>OZfn5X@ueXeQT'Ji{>eBnZ!,<xxKsi^J}a~uYr#=vm5Y*GvXjJ
    'm-2>[wviBXGu7C~+9e+_+C7wp;[e#r-1^QW[w3$AQC^@G}GR@]CMY?sH+__aHnUJe+[E*wxw?qM
    vx;]KvQrK[,Gd{wA}]rABR+;78@zIuCVOIow1jVj\}G,[_E>^QKjo_}aO^d9Qkn<&z'+B]b=OV;A
    -^B>^G2^n$2ZAC#+z[\5i-2GBJ1\5j@Jr}WO[Vaw+>Qb3{sYpE_$;D1'VX-Y,_aVV$@1YV-_?VK[
    YTIJb#7Yu~]*#3H,>K'2Bo5aW<*?+%dnIO_&$W1U-<nk#GU!_femv3pH~*r1_njkv2TvEJ]=1D~x
    =-$]pV_R1Qx@Wsw]<Bxa{QsEwRH{xi35YBa\l\=~3$U+TR-]Au\]UHOisIiTKXU87<71j{{r3j_u
    -UwY*^$x?1j<*2KvXr^{xKYJ<Ola~Xv76}K$<'l7I13@v=k[?EFUE'[lexC$JmQG+Z<5lROUD*Wz
    V^$7;ax'B\Zo;-+~UX{WEQUAH{E!>KQ]sH=]r@K/xiv2X7skH=-C5Q,*Yx!;w$xzzRGeu5X?DKrY
    C-n!ok'n1&QBj>(olzrTe;oW]!?vj?oIXGk+<'Zj5QU'Cr,~_j[*uXrrk!r|'}U]v{~Y*L2t%Xp{
    ]ADl=*HKVB!\jmI{KW{'o$_i7Qn!~$*rKW*[_M7ia@5IiZJ7QJqp+C^+$i@,]^[1XZps2wk}_=1v
    OsY7rvC7j\xev7}8<ea^_XHpBsI31D@-aTXJ7=V_@Y[}n+J'TjR1fx<'TQUrx0uv>e-Tv*R6JYmI
    VV^xpu\1CDBz'JQErv*;7JGZ#pI\je'J153+(UVY{<+Ul=?GW\>3W5w1{O#\kV~};yiRG?GD\HD'
    \p;\3'B*J@ITWWUDmUCo5mVX3^13_*-XD@oH[=vD^mp;s!BzwnFB#{3#X5]YQu]^{sAv+=2li{>s
    5<<}T@}$ww$=#RB]l+EsXYW0Q?n2}vpn!*2rE\}~z@3BA1<oeRJ\:.,0_Ij,<=ak@pA?Q7o\j1~Z
    45g>IVB^W+EDX_eOm=7pmvG!5?C';W_*!!m~U$RD}DeOu<@7]XoN%XG}kk+-^;plv2o\ap_UeenH
    {<D5Ac,cwOi75rwX[V}OdDWV76>*<o@^{QtGOu}'RDBK\QCYGsOn5wKEAK@Wa[<j-CE~,>Hw9;'1
    GAQWwU7_}Z-AUOJ{3r[^I>+5jYB-5\XG='Im}^C;EQ?HG3ElHe7RklvwRp'?e3x@C7XQ@K<Cr5nx
    RfEEe#aU1{svU<0l#v=H\vH$]mrO,Q[oBB1D!U2{nR!wHpuwrQCWz3THUXB=Z;snXWeWOZ]%o~5i
    r~Ro+YWV>\J}GH}DVUp;D~T=oxk;pA,-aH{XsLB!}E\sj5a=[<;[A?*lZz}K}]VG=me#nj#vJVYG
    1JpCEXu\;1OBG-s=Vrj*?[CTT@CEH}YV2JXV1*45Y{s\in<}mwCh5?nKT[Wvm>=e\{{Hzl27*ZY}
    <YZwH]$7>]X~e~H5[2UT{,e^Z_V?Y\B{{+'u^uznrOK@^IG,!AY2B\m3CXV3JQ15!B-#Lb{+_ia_
    <H<w1~eQUrTj}]?1UU5#TVC_z$mYAVnO\]e;>zB$dT_lIGBR1?zzQo*,p|*rZXu\}aBuYr=R3v"F
    \pX2+lEjE77J@U;sn<B+w[j}%o[D^0j'o']rAr:_nwu-{WBuXTnvJ7C><$J]v#5xK12@_XIp_z~o
    W-J,$BrAQW@}~jZo'xQp}=,OWl#XGmlzE!=zke1mBKBzz-3+&i}jHs}Rw_uCA$O~szKK?UXmsjS[
    <1T*!-\5XuKFlWz{]wpaolG@L(]gUE=O&53Q#}lU]eG7#W7V=3RGr{j{BX-D7x<Ci~DupM>pmu97
    Yp=rmjjsE]5W=5mUz>Qp}71}5[Z~=#J[zp?37l2<GZQ2[{Gv-wH,U\G*\[]ornOKIzK!U'WqT,Cp
    mE>J>VR+12l$HwA!=^+!l#lvaw2*K5++KHj^xo$2ov#B*BY}CalB4w[#[ZsA$#^eufhZUQHsIl_z
    o7ls,D7Ix~w1=1r-+\*]-W^{rYCz-rzW*YiYw[AV,#;IESqB5Gm^<Oe{wV!WnAuBirl'WGUr3JI]
    DY=k]~aW[Yj)$3u@H\<='T[{s^zxu{,e+RGmFO7p*Dxwo*;{#-]v3r[RKUzWx^O|xb7#lpj*-,kv
    HTBWa,_1e'>aT>]e!!k1emomG[@X*apap*Q#~EIHI2>5ODVUTa3<>CCK~1=n_~]'~amB$B]*>nWx
    'ls\rkz3A{tr15'\Im;AHxi}E+Hq}@@=@E;s>UlA=sC{+G~=Yezn.:3]X1xa+<\*Kjlkjk=kX2jF
    IRQn.z_JrA]TQ^I+GUGTp7_}xJ\$zAs#A<<V=Ij@1Qr'51Gn5Qja'2Toj+{J>2}3pbiwmB~{oAsR
    ]W[?jsLvEKKFwY-1>rBOHRCDBu7j5j_5pW<=l$n<y}g{Yx*PklVra[ZwV#vV{e^QW_XZ#h|u{[Hj
    }=iKIZ}vu~EU}T,Rm{Ywr!zdQv_jrz*W+}5~7r-_9W{xH3w\DK=wA@7XmYR~~@wGOm=*ClZ,^M.{
    Y_X;vAGou**ppxl'ZBUvZ2~*{eY6[_7ol-,KekO7v}Qn_[2a{+@Xm_{+~l'o?'Vn]1>$,vIEw1]O
    zskWlX7Qq7&Z5{XmX{T%NvE5njYW]e7umAHH\memv!*!{UI?>-sw*yl!2a2n]X^^insG=[O&kewI
    z*V*UTJU$s#--ABppE,?jzY=C?;-^XsYCRzBm7wl;7n5lxZksJT#[+A=GsRnjv~oeOjO1R\3*n^i
    V~DZ^Hn$=\TE'H-k;>TCmsvDJ]MxJ-'K\5xz!vv-,^{D!1AJ>2{m\CmmXve\^Em*X;'7\@+]5>5'
    sTYa^5r[ie>Zn;omA}K'@=;dWsrxeCJ#X[>[7?-@wnRx,]VIQa[Qv<B;k<T!3rsB<p#KanxYY_TJ
    g_DE}s75I{sQ=k1^j\=?WVZ>]J*pz[u7{EO-sBzeW-GsUis$uE7rv$$x}I\!XxG{OzBn!V?Kmj-e
    WU$2I\oUY:E^k*1]{VIl?A|'$\R35{Ku<D]2aoze!QaE_VYY<+pH-*~*=Ho5se{-+!OY=Orm1WrY
    I$jJQxlzn2{k7?;~*]>Wj]1i_jHpa*YS~E_Y5z'1+VKOD'Xvl\EAVCIr+CZ;E,Vp0[nWu)HAZ{<v
    +^\'E5fJ=>,,QAvE\zkwTJ_X5VmTVwr5w\Rn]mK$X$@NQ0zszKAzax8zAEv$#!'AREmo8ur${z-o
    ]oAo;8]+EsGm_J#]RHLljE3<O'3@>Ep:o!2>CpJlRzUm_F\-mu.^7uB*=CGoz;VKQJ>K+ew'_V,k
    T='Z\lD-6b@>,!vw=EA<OK@lZ~<+]vO?jr,v=#]mVV!xwaVVmJ1$#C\uX}j3WonsZZW,sm.&$HRu
    7l?VCkOYFKTjj*<Dmp'277>YW^CB=-$UJ^{T}D\VsG<O5<wAmCw_{{<>3*~~@),w$IWTvHnn7{b=
    XToB=Ko+YQ_&G2B'\Z+2'GU$;jiO.d~ROu-D+\eBV=,ixD'Xv{xaCKY<>BT=m$;I~v^7B,H$G-Jl
    $wrRTBID{lr\olG=T}#=rEv$3;Q#YJv?*C,rG;eJ={#T\K=z+<^xDCr>R;vu@xX{\mk'OC@]3$3U
    =acr_Iv9xoJEIv-Aa,l?<Ho?Gr5ApgA+J]27Z~u'$5ygGul{o?Z~KnX,Our$>x1_eDjGGs>m{BE_
    Ap2\Jp!X$E1J2'mnUYZ_KIznesm2$\+{omvZuBVuY-3nCZA;3vaU}Ij\$}WE>a\BK]TC+jIrhTI<
    uxw2JkjJJp!IRpCIXY\ens<7X-A,jrCT>+]ruxlEpI1*QHz'~uGGCEooB>v?7ZH-3u[e5]TB<I"i
    r3{,iV2J1@GC@r+nRnrC2E#pRe\-HE+OT~@}sEVV#B1@z_[BzOao,=sGam#5S+}k,N.o<]<+De;o
    VHE#7k7zg1[K@b
`endprotected

// Dummy variables to remove SPC warning

  reg dummy1;
  reg dummy2;

   
  reg dummy3;
  reg dummy4;


`protected

    MTI!#_H{l=ipk7C~ravVGbn1Jlxz7?+vxek{<[:i,]"?adkY%$1zCR+x+z\E\72owo[n!Q_#W]?\
    I#]jDsJ8G3}AQ?Kp|N\Zo=u[=#7AAJnR,=sxU3asY5Q*k,Cu$C*@@X^U}5[>I+~=+O2QaOgT=dz-
    V=^-[7E+FkD+sn=Q<VbY_Z+@A_1"LI?[}cxi=B7A[@QRwoC]E+O-Q~V2X\7ZIAAX_~5r#~g!aQ$v
    ArwZ1jEnE7VV2ekmA=~-<<IN5'vl;r?Z_7RWTzo*oCkRK1*XBjQ-5oOQbW>+kf$z}VY-GZt^Y7io
    JU-TrQX!Dia[=mI}Wr;mjQ1]On}'^!l=Dj5[3!Q$N,{{JUEVYV#,\T*p#zioTeve7^>E]=]H^v15
    WmU+u^3aA~r?$55k!+GuDA<m3+o<<Uqsw\;|d&-sEvWjOu0[,#De1^,&*|BxO'WDOTbB_\p$5DVV
    _7!YJK$CXGr}lz]oC]->rrW3];[~pvrrekUpOZs=Z@v1#X=EH$AoP_U3^]\#p'oQ{7k3?r1E^tun
    Dv">]T^Nrk+rJ1k'D7paQ^r[q#rXaG3'5to{T>;H7D~GO{:WD]3'C<lCT*U%}7{pvG~Q\vXQ7^e@
    zT@O!>e^mwJ@reJEo_Hv?Y=oa__ZEAHojY*n<<'KKw-5<\YpD{~*V!-lEm{B*WA;rUIXUGao75E^
    lpk$_mpCUA=Y,7T-PgB#Gj1]X_<XjZ]_ljroGk!r=o\G{=*I[XpW{A<O{1Jjj~Gij?^mB^jvWGQ+
    $i4eB?Xrnaa]V\;8I>;Wu';3pJ'w7[a3Q>orwoKZejDikjXQ"@{Y;,x-+JUC@a^*Gxh-$eu_!ABI
    K}Z#52rQUKmZEeBOXxaE12*,\+KoO,#os'o*v(_[i\Dmp@~72C^I{jaV#}1IXYaCE3ka2-m^-n&=
    W177*R$bwYt,5a^K-rn7j*J<1?@Q]<~P[]2Y]=AWx+VvjHzAQ\Y?~Elv4\Qp?Y+T^=}7s$-a?UX!
    {1JvI0{x'nNK1QBv5v+*an7YAj'*~W'!l@JQ7Z$ZlW7:3*Hk1nJx.O1l#\Rpi_JpGWB^+}!CK\}+
    -,+@1>GkoqGpwjxnmIpoZ=!5=<;&lCu$He1,S^O5>fdme*}jW*m>>*,?wemk7IZ\eWu~\V;5~A[O
    k72Rma-Krw>IYnG^5O~Yj1*HH2s#Y>~D$]vC^OR[5,i_CwEx>;@j+mnx@OYKxD!KpB28&@>n;uX}
    2UUD<DvH#s~_zJ>Z]@>GaIE<GF{Y?xB^VJO<I1TUx-DBJ,e@!=<\Uj-E1er1e;Oj-z-+pJk>@ZYJ
    5AUYv_jU<$zpw,:@Ya'sY\*BAzkpY}AzwH~AjzI~DGr*Jm__o57v&O-@^5Ylng.wU=o;o{k72JJh
    =%N2r@'=EZQ3U}Ur?11UY*Q[^]?O>H1@I*Op7'=kT^@Nm['i]ZY<1r!C!7
`endprotected

  //-----------------------------------------------------------------
  // Lane receiver instantiations on transmit interface
  //-----------------------------------------------------------------

  // Lane 0

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode    */    PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE      */    1,
    /* TX_INTERFACE        */    1, 
    /* PHY_LANE_NUMBER     */    0,
    /* ZI_DOUBLE_DATA_RATE     */   ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */    ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */           1)
    LANE00_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[0] & pclk),
             .symbol_data_plus(int_tx_elecidle[0] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

	     .pci_8b_data(tx_8b_decoded_data[7:0]),
	     .pci_10b_code_violation_n(tx_10b_code_violation[0]),
	     .d_or_k_code(tx_d_or_k_code[0]),

	     .pci_10b_data(tx_10b_data[9:0]),
	     .parallel_symbol_valid(tx_valid_code[0]),
	     .current_rd(tx_current_rd[0]),

	     .deskew_fifo_read(tx_deskew_fifo_read),
	     .deskew_fifo_flush(tx_deskew_fifo_flush),
	     .com_read_from_fifo(tx_com_read_from_fifo[0]),
	     .fifo_almost_full(tx_deskew_fifo_full[0]),
	     .fifo_empty(tx_deskew_fifo_empty[0]),
	     .deskew_d_or_k_code(tx_deskew_d_or_k_code[0]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[7:0]),
             .link_number(link_number_tx),
	     .lane_0_detected(tx_lane_0_detected[0]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[7:0]),
             .electrical_idle_detected(tx_eidle[0]),
	     .idle_data_detected(xmtd_idle_data[0]),
             .skp_os_detected(xmtd_skp_os[0]),
             .idle_os_detected(xmtd_idle_os[0]),
             .fts_os_detected(xmtd_fts_os[0]),
             .ts1_detected(xmtd_ts1[0]),
             .ts2_detected(xmtd_ts2[0]),
             .lane_num_detected(xmtd_lane_num[0]),
             .link_num_detected(xmtd_link_num[0]),
             .link_ctrl_reset_detected(xmtd_reset[0]),
             .loopback_detected(xmtd_loopback[0]),
             .disable_detected(xmtd_disable[0]),
             .disable_scrambling_detected(xmtd_no_scramble[0]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[0])
             );

  // Lane 1

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1, 
    /* PHY_LANE_NUMBER   */    1,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */       MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE01_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[1] & pclk),
             .symbol_data_plus(int_tx_elecidle[1] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[15:8]), 
             .pci_10b_code_violation_n(tx_10b_code_violation[1]), 
             .d_or_k_code(tx_d_or_k_code[1]), 
              
             .pci_10b_data(tx_10b_data[19:10]), 
             .parallel_symbol_valid(tx_valid_code[1]),
             .current_rd(tx_current_rd[1]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[1]),
             .fifo_almost_full(tx_deskew_fifo_full[1]),
             .fifo_empty(tx_deskew_fifo_empty[1]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[1]),
 
             .descramble_enable(!disable_descramble), 
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[15:8]), 
             .link_number(),
	     .lane_0_detected(tx_lane_0_detected[1]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[15:8]),
             .electrical_idle_detected(tx_eidle[1]),
	     .idle_data_detected(xmtd_idle_data[1]),
             .skp_os_detected(xmtd_skp_os[1]),
             .idle_os_detected(xmtd_idle_os[1]),
             .fts_os_detected(xmtd_fts_os[1]),
             .ts1_detected(xmtd_ts1[1]),
             .ts2_detected(xmtd_ts2[1]),
             .lane_num_detected(xmtd_lane_num[1]),
             .link_num_detected(xmtd_link_num[1]),
             .link_ctrl_reset_detected(xmtd_reset[1]),
             .loopback_detected(xmtd_loopback[1]),
             .disable_detected(xmtd_disable[1]),
             .disable_scrambling_detected(xmtd_no_scramble[1]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[1])
             );

  // Lane 2

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1, 
    /* PHY_LANE_NUMBER   */    2,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE02_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[2] & pclk),
             .symbol_data_plus(int_tx_elecidle[2] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[23:16]),               
             .pci_10b_code_violation_n(tx_10b_code_violation[2]),    
             .d_or_k_code(tx_d_or_k_code[2]),    
               
             .pci_10b_data(tx_10b_data[29:20]),  
             .parallel_symbol_valid(tx_valid_code[2]),    
             .current_rd(tx_current_rd[2]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[2]),
             .fifo_almost_full(tx_deskew_fifo_full[2]),
             .fifo_empty(tx_deskew_fifo_empty[2]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[2]),
 
             .descramble_enable(!disable_descramble), 
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[23:16]),
             .link_number(),
	     .lane_0_detected(tx_lane_0_detected[2]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[23:16]),
             .electrical_idle_detected(tx_eidle[2]),
	     .idle_data_detected(xmtd_idle_data[2]),
             .skp_os_detected(xmtd_skp_os[2]),
             .idle_os_detected(xmtd_idle_os[2]),
             .fts_os_detected(xmtd_fts_os[2]),
             .ts1_detected(xmtd_ts1[2]),
             .ts2_detected(xmtd_ts2[2]),
             .lane_num_detected(xmtd_lane_num[2]),
             .link_num_detected(xmtd_link_num[2]),
             .link_ctrl_reset_detected(xmtd_reset[2]),
             .loopback_detected(xmtd_loopback[2]),
             .disable_detected(xmtd_disable[2]),
             .disable_scrambling_detected(xmtd_no_scramble[2]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[2])
             );

   // Lane 3

   qvl_pci_express_lane_receiver #( 
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,  
    /* PHY_LANE_NUMBER   */    3,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE03_TX ( 
             .reset(reset), 
             .areset(areset), 
  
             .clk(tx_clk_gate_lane[3] & pclk),
             .symbol_data_plus(int_tx_elecidle[3] ? 10'b0 : 10'b1), 
             .symbol_data_minus(10'b0),

	     .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[31:24]),                
             .pci_10b_code_violation_n(tx_10b_code_violation[3]),       
             .d_or_k_code(tx_d_or_k_code[3]),     
                 
             .pci_10b_data(tx_10b_data[39:30]),     
             .parallel_symbol_valid(tx_valid_code[3]),     
             .current_rd(tx_current_rd[3]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[3]),
             .fifo_almost_full(tx_deskew_fifo_full[3]),
             .fifo_empty(tx_deskew_fifo_empty[3]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[3]),
  
             .descramble_enable(!disable_descramble),  
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[31:24]),
             .link_number(), 
	     .lane_0_detected(tx_lane_0_detected[3]),
             .dllp_tlp_on_link(xmting_dllp_tlp),  
             .descrambled_data(tx_descrambled_data[31:24]), 
             .electrical_idle_detected(tx_eidle[3]), 
	     .idle_data_detected(xmtd_idle_data[3]),
             .skp_os_detected(xmtd_skp_os[3]),    
             .idle_os_detected(xmtd_idle_os[3]),  
             .fts_os_detected(xmtd_fts_os[3]),    
             .ts1_detected(xmtd_ts1[3]),  
             .ts2_detected(xmtd_ts2[3]),  
             .lane_num_detected(xmtd_lane_num[3]), 
             .link_num_detected(xmtd_link_num[3]),
             .link_ctrl_reset_detected(xmtd_reset[3]),    
             .loopback_detected(xmtd_loopback[3]),   
             .disable_detected(xmtd_disable[3]),  
             .disable_scrambling_detected(xmtd_no_scramble[3]),   
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[3])
             );

  // Lane 4

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    4,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE04_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[4] & pclk),
             .symbol_data_plus(int_tx_elecidle[4] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[39:32]),
             .pci_10b_code_violation_n(tx_10b_code_violation[4]),
             .d_or_k_code(tx_d_or_k_code[4]),

             .pci_10b_data(tx_10b_data[49:40]),
             .parallel_symbol_valid(tx_valid_code[4]),
             .current_rd(tx_current_rd[4]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[4]),
             .fifo_almost_full(tx_deskew_fifo_full[4]),
             .fifo_empty(tx_deskew_fifo_empty[4]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[4]),

             .n_fts(tx_n_fts[39:32]), 
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
             .link_number(),
	     .lane_0_detected(tx_lane_0_detected[4]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[39:32]),
             .electrical_idle_detected(tx_eidle[4]),
             .idle_data_detected(xmtd_idle_data[4]),
             .skp_os_detected(xmtd_skp_os[4]),
             .idle_os_detected(xmtd_idle_os[4]),
             .fts_os_detected(xmtd_fts_os[4]),
             .ts1_detected(xmtd_ts1[4]),
             .ts2_detected(xmtd_ts2[4]),
             .lane_num_detected(xmtd_lane_num[4]),
             .link_num_detected(xmtd_link_num[4]),
             .link_ctrl_reset_detected(xmtd_reset[4]),
             .loopback_detected(xmtd_loopback[4]),
             .disable_detected(xmtd_disable[4]),
             .disable_scrambling_detected(xmtd_no_scramble[4]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[4])
             );

  // Lane 5

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    5,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE05_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[5] & pclk),
             .symbol_data_plus(int_tx_elecidle[5] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[47:40]),
             .pci_10b_code_violation_n(tx_10b_code_violation[5]),
             .d_or_k_code(tx_d_or_k_code[5]),

             .pci_10b_data(tx_10b_data[59:50]),
             .parallel_symbol_valid(tx_valid_code[5]),
             .current_rd(tx_current_rd[5]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[5]),
             .fifo_almost_full(tx_deskew_fifo_full[5]),
             .fifo_empty(tx_deskew_fifo_empty[5]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[5]),
   
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[47:40]),
             .link_number(),
	     .lane_0_detected(tx_lane_0_detected[5]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[47:40]),
             .electrical_idle_detected(tx_eidle[5]),
             .idle_data_detected(xmtd_idle_data[5]),
             .skp_os_detected(xmtd_skp_os[5]),
             .idle_os_detected(xmtd_idle_os[5]),
             .fts_os_detected(xmtd_fts_os[5]),
             .ts1_detected(xmtd_ts1[5]),
             .ts2_detected(xmtd_ts2[5]),
             .lane_num_detected(xmtd_lane_num[5]),
             .link_num_detected(xmtd_link_num[5]),
             .link_ctrl_reset_detected(xmtd_reset[5]),
             .loopback_detected(xmtd_loopback[5]),
             .disable_detected(xmtd_disable[5]),
             .disable_scrambling_detected(xmtd_no_scramble[5]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[5])
             );

  // Lane 6

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    6,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE06_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[6] & pclk),
             .symbol_data_plus(int_tx_elecidle[6] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[55:48]),
             .pci_10b_code_violation_n(tx_10b_code_violation[6]),
             .d_or_k_code(tx_d_or_k_code[6]),

             .pci_10b_data(tx_10b_data[69:60]),
             .parallel_symbol_valid(tx_valid_code[6]),
             .current_rd(tx_current_rd[6]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[6]),
             .fifo_almost_full(tx_deskew_fifo_full[6]),
             .fifo_empty(tx_deskew_fifo_empty[6]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[6]),
   
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[55:48]),
             .link_number(),
	     .lane_0_detected(tx_lane_0_detected[6]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[55:48]),
             .electrical_idle_detected(tx_eidle[6]),
             .idle_data_detected(xmtd_idle_data[6]),
             .skp_os_detected(xmtd_skp_os[6]),
             .idle_os_detected(xmtd_idle_os[6]),
             .fts_os_detected(xmtd_fts_os[6]),
             .ts1_detected(xmtd_ts1[6]),
             .ts2_detected(xmtd_ts2[6]),
             .lane_num_detected(xmtd_lane_num[6]),
             .link_num_detected(xmtd_link_num[6]),
             .link_ctrl_reset_detected(xmtd_reset[6]),
             .loopback_detected(xmtd_loopback[6]),
             .disable_detected(xmtd_disable[6]),
             .disable_scrambling_detected(xmtd_no_scramble[6]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[6])
             );

  // Lane 7

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    7,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE07_TX (
             .reset(reset),
             .areset(areset),
   
             .clk(tx_clk_gate_lane[7] & pclk),
             .symbol_data_plus(int_tx_elecidle[7] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[63:56]),
             .pci_10b_code_violation_n(tx_10b_code_violation[7]),
             .d_or_k_code(tx_d_or_k_code[7]),

             .pci_10b_data(tx_10b_data[79:70]),
             .parallel_symbol_valid(tx_valid_code[7]),
             .current_rd(tx_current_rd[7]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[7]),
             .fifo_almost_full(tx_deskew_fifo_full[7]),
             .fifo_empty(tx_deskew_fifo_empty[7]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[7]),
   
             .descramble_enable(!disable_descramble),      
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[63:56]),
             .link_number(),
	     .lane_0_detected(tx_lane_0_detected[7]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[63:56]),
             .electrical_idle_detected(tx_eidle[7]),
             .idle_data_detected(xmtd_idle_data[7]),
             .skp_os_detected(xmtd_skp_os[7]),
             .idle_os_detected(xmtd_idle_os[7]),
             .fts_os_detected(xmtd_fts_os[7]),
             .ts1_detected(xmtd_ts1[7]),
             .ts2_detected(xmtd_ts2[7]),
             .lane_num_detected(xmtd_lane_num[7]),
             .link_num_detected(xmtd_link_num[7]),
             .link_ctrl_reset_detected(xmtd_reset[7]),
             .loopback_detected(xmtd_loopback[7]),
             .disable_detected(xmtd_disable[7]),
             .disable_scrambling_detected(xmtd_no_scramble[7]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[7])
             );

  // Lane 8

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    8,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE08_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[8] & pclk),
             .symbol_data_plus(int_tx_elecidle[8] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[71:64]),
             .pci_10b_code_violation_n(tx_10b_code_violation[8]),
             .d_or_k_code(tx_d_or_k_code[8]),

             .pci_10b_data(tx_10b_data[89:80]),
             .parallel_symbol_valid(tx_valid_code[8]),
             .current_rd(tx_current_rd[8]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[8]),
             .fifo_almost_full(tx_deskew_fifo_full[8]),
             .fifo_empty(tx_deskew_fifo_empty[8]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[8]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[71:64]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[8]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[71:64]),
             .electrical_idle_detected(tx_eidle[8]),
             .idle_data_detected(xmtd_idle_data[8]),
             .skp_os_detected(xmtd_skp_os[8]),
             .idle_os_detected(xmtd_idle_os[8]),
             .fts_os_detected(xmtd_fts_os[8]),
             .ts1_detected(xmtd_ts1[8]),
             .ts2_detected(xmtd_ts2[8]),
             .lane_num_detected(xmtd_lane_num[8]),
             .link_num_detected(xmtd_link_num[8]),
             .link_ctrl_reset_detected(xmtd_reset[8]),
             .loopback_detected(xmtd_loopback[8]),
             .disable_detected(xmtd_disable[8]),
             .disable_scrambling_detected(xmtd_no_scramble[8]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[8])
             );

  // Lane 9

 qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    9,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE09_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[9] & pclk),
             .symbol_data_plus(int_tx_elecidle[9] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[79:72]),
             .pci_10b_code_violation_n(tx_10b_code_violation[9]),
             .d_or_k_code(tx_d_or_k_code[9]),

             .pci_10b_data(tx_10b_data[99:90]),
             .parallel_symbol_valid(tx_valid_code[9]),
             .current_rd(tx_current_rd[9]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[9]),
             .fifo_almost_full(tx_deskew_fifo_full[9]),
             .fifo_empty(tx_deskew_fifo_empty[9]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[9]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[79:72]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[9]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[79:72]),
             .electrical_idle_detected(tx_eidle[9]),
             .idle_data_detected(xmtd_idle_data[9]),
             .skp_os_detected(xmtd_skp_os[9]),
             .idle_os_detected(xmtd_idle_os[9]),
             .fts_os_detected(xmtd_fts_os[9]),
             .ts1_detected(xmtd_ts1[9]),
             .ts2_detected(xmtd_ts2[9]),
             .lane_num_detected(xmtd_lane_num[9]),
             .link_num_detected(xmtd_link_num[9]),
             .link_ctrl_reset_detected(xmtd_reset[9]),
             .loopback_detected(xmtd_loopback[9]),
             .disable_detected(xmtd_disable[9]),
             .disable_scrambling_detected(xmtd_no_scramble[9]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[9])
             ); 

  // Lane 10

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    10,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE10_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[10] & pclk),
             .symbol_data_plus(int_tx_elecidle[10] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[87:80]),
             .pci_10b_code_violation_n(tx_10b_code_violation[10]),
             .d_or_k_code(tx_d_or_k_code[10]),

             .pci_10b_data(tx_10b_data[109:100]),
             .parallel_symbol_valid(tx_valid_code[10]),
             .current_rd(tx_current_rd[10]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[10]),
             .fifo_almost_full(tx_deskew_fifo_full[10]),
             .fifo_empty(tx_deskew_fifo_empty[10]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[10]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[87:80]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[10]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[87:80]),
             .electrical_idle_detected(tx_eidle[10]),
             .idle_data_detected(xmtd_idle_data[10]),
             .skp_os_detected(xmtd_skp_os[10]),
             .idle_os_detected(xmtd_idle_os[10]),
             .fts_os_detected(xmtd_fts_os[10]),
             .ts1_detected(xmtd_ts1[10]),
             .ts2_detected(xmtd_ts2[10]),
             .lane_num_detected(xmtd_lane_num[10]),
             .link_num_detected(xmtd_link_num[10]),
             .link_ctrl_reset_detected(xmtd_reset[10]),
             .loopback_detected(xmtd_loopback[10]),
             .disable_detected(xmtd_disable[10]),
             .disable_scrambling_detected(xmtd_no_scramble[10]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[10])
             );

  // Lane 11

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    11,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE11_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[11] & pclk),
             .symbol_data_plus(int_tx_elecidle[11] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[95:88]),
             .pci_10b_code_violation_n(tx_10b_code_violation[11]),
             .d_or_k_code(tx_d_or_k_code[11]),

             .pci_10b_data(tx_10b_data[119:110]),
             .parallel_symbol_valid(tx_valid_code[11]),
             .current_rd(tx_current_rd[11]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[11]),
             .fifo_almost_full(tx_deskew_fifo_full[11]),
             .fifo_empty(tx_deskew_fifo_empty[11]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[11]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[95:88]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[11]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[95:88]),
             .electrical_idle_detected(tx_eidle[11]),
             .idle_data_detected(xmtd_idle_data[11]),
             .skp_os_detected(xmtd_skp_os[11]),
             .idle_os_detected(xmtd_idle_os[11]),
             .fts_os_detected(xmtd_fts_os[11]),
             .ts1_detected(xmtd_ts1[11]),
             .ts2_detected(xmtd_ts2[11]),
             .lane_num_detected(xmtd_lane_num[11]),
             .link_num_detected(xmtd_link_num[11]),
             .link_ctrl_reset_detected(xmtd_reset[11]),
             .loopback_detected(xmtd_loopback[11]),
             .disable_detected(xmtd_disable[11]),
             .disable_scrambling_detected(xmtd_no_scramble[11]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[11])
             );

  // Lane 12
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    12,
    /* ZI_DOUBLE_DATA_RATE   */   ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE12_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[12] & pclk),
             .symbol_data_plus(int_tx_elecidle[12] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[103:96]),
             .pci_10b_code_violation_n(tx_10b_code_violation[12]),
             .d_or_k_code(tx_d_or_k_code[12]),
 
             .pci_10b_data(tx_10b_data[129:120]),
             .parallel_symbol_valid(tx_valid_code[12]),
             .current_rd(tx_current_rd[12]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[12]),
             .fifo_almost_full(tx_deskew_fifo_full[12]),
             .fifo_empty(tx_deskew_fifo_empty[12]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[12]),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[103:96]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[12]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[103:96]),
             .electrical_idle_detected(tx_eidle[12]),
             .idle_data_detected(xmtd_idle_data[12]),
             .skp_os_detected(xmtd_skp_os[12]),
             .idle_os_detected(xmtd_idle_os[12]),
             .fts_os_detected(xmtd_fts_os[12]),
             .ts1_detected(xmtd_ts1[12]),
             .ts2_detected(xmtd_ts2[12]),
             .lane_num_detected(xmtd_lane_num[12]),
             .link_num_detected(xmtd_link_num[12]),
             .link_ctrl_reset_detected(xmtd_reset[12]),
             .loopback_detected(xmtd_loopback[12]),
             .disable_detected(xmtd_disable[12]),
             .disable_scrambling_detected(xmtd_no_scramble[12]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[12])
             );

  // Lane 13
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    13,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE13_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[13] & pclk),
             .symbol_data_plus(int_tx_elecidle[13] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[111:104]),
             .pci_10b_code_violation_n(tx_10b_code_violation[13]),
             .d_or_k_code(tx_d_or_k_code[13]),
 
             .pci_10b_data(tx_10b_data[139:130]),
             .parallel_symbol_valid(tx_valid_code[13]),
             .current_rd(tx_current_rd[13]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[13]),
             .fifo_almost_full(tx_deskew_fifo_full[13]),
             .fifo_empty(tx_deskew_fifo_empty[13]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[13]),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[111:104]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[13]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[111:104]),
             .electrical_idle_detected(tx_eidle[13]),
             .idle_data_detected(xmtd_idle_data[13]),
             .skp_os_detected(xmtd_skp_os[13]),
             .idle_os_detected(xmtd_idle_os[13]),
             .fts_os_detected(xmtd_fts_os[13]),
             .ts1_detected(xmtd_ts1[13]),
             .ts2_detected(xmtd_ts2[13]),
             .lane_num_detected(xmtd_lane_num[13]),
             .link_num_detected(xmtd_link_num[13]),
             .link_ctrl_reset_detected(xmtd_reset[13]),
             .loopback_detected(xmtd_loopback[13]),
             .disable_detected(xmtd_disable[13]),
             .disable_scrambling_detected(xmtd_no_scramble[13]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[13])
             );

  // Lane 14
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    14,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE14_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[14] & pclk),
             .symbol_data_plus(int_tx_elecidle[14] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[119:112]),
             .pci_10b_code_violation_n(tx_10b_code_violation[14]),
             .d_or_k_code(tx_d_or_k_code[14]),  
 
             .pci_10b_data(tx_10b_data[149:140]),
             .parallel_symbol_valid(tx_valid_code[14]),    
             .current_rd(tx_current_rd[14]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[14]),
             .fifo_almost_full(tx_deskew_fifo_full[14]),
             .fifo_empty(tx_deskew_fifo_empty[14]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[14]),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[119:112]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[14]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[119:112]),
             .electrical_idle_detected(tx_eidle[14]),
             .idle_data_detected(xmtd_idle_data[14]),
             .skp_os_detected(xmtd_skp_os[14]), 
             .idle_os_detected(xmtd_idle_os[14]),
             .fts_os_detected(xmtd_fts_os[14]), 
             .ts1_detected(xmtd_ts1[14]),
             .ts2_detected(xmtd_ts2[14]),
             .lane_num_detected(xmtd_lane_num[14]),
             .link_num_detected(xmtd_link_num[14]),
             .link_ctrl_reset_detected(xmtd_reset[14]),
             .loopback_detected(xmtd_loopback[14]),
             .disable_detected(xmtd_disable[14]),
             .disable_scrambling_detected(xmtd_no_scramble[14]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[14])
             );

  // Lane 15
 
  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    15,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE15_TX (
             .reset(reset),
             .areset(areset),
 
             .clk(tx_clk_gate_lane[15] & pclk),
             .symbol_data_plus(int_tx_elecidle[15] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(tx_8b_decoded_data[127:120]),
             .pci_10b_code_violation_n(tx_10b_code_violation[15]),
             .d_or_k_code(tx_d_or_k_code[15]),  
 
             .pci_10b_data(tx_10b_data[159:150]),
             .parallel_symbol_valid(tx_valid_code[15]),    
             .current_rd(tx_current_rd[15]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[15]),
             .fifo_almost_full(tx_deskew_fifo_full[15]),
             .fifo_empty(tx_deskew_fifo_empty[15]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[15]),
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[127:120]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[15]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[127:120]),
             .electrical_idle_detected(tx_eidle[15]),
             .idle_data_detected(xmtd_idle_data[15]),
             .skp_os_detected(xmtd_skp_os[15]), 
             .idle_os_detected(xmtd_idle_os[15]),
             .fts_os_detected(xmtd_fts_os[15]), 
             .ts1_detected(xmtd_ts1[15]),
             .ts2_detected(xmtd_ts2[15]),
             .lane_num_detected(xmtd_lane_num[15]),
             .link_num_detected(xmtd_link_num[15]),
             .link_ctrl_reset_detected(xmtd_reset[15]),
             .loopback_detected(xmtd_loopback[15]),
             .disable_detected(xmtd_disable[15]),
             .disable_scrambling_detected(xmtd_no_scramble[15]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[15])
             );

  // Lane 16

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    16,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE16_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[16] & pclk),
             .symbol_data_plus(int_tx_elecidle[16] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[135:128]),
             .pci_10b_code_violation_n(tx_10b_code_violation[16]),
             .d_or_k_code(tx_d_or_k_code[16]),

             .pci_10b_data(tx_10b_data[169:160]),
             .parallel_symbol_valid(tx_valid_code[16]),
             .current_rd(tx_current_rd[16]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[16]),
             .fifo_almost_full(tx_deskew_fifo_full[16]),
             .fifo_empty(tx_deskew_fifo_empty[16]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[16]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[135:128]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[16]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[135:128]),
             .electrical_idle_detected(tx_eidle[16]),
             .idle_data_detected(xmtd_idle_data[16]),
             .skp_os_detected(xmtd_skp_os[16]),
             .idle_os_detected(xmtd_idle_os[16]),
             .fts_os_detected(xmtd_fts_os[16]),
             .ts1_detected(xmtd_ts1[16]),
             .ts2_detected(xmtd_ts2[16]),
             .lane_num_detected(xmtd_lane_num[16]),
             .link_num_detected(xmtd_link_num[16]),
             .link_ctrl_reset_detected(xmtd_reset[16]),
             .loopback_detected(xmtd_loopback[16]),
             .disable_detected(xmtd_disable[16]),
             .disable_scrambling_detected(xmtd_no_scramble[16]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[16])
             );

  // Lane 17

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    17,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE17_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[17] & pclk),
             .symbol_data_plus(int_tx_elecidle[17] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[143:136]),
             .pci_10b_code_violation_n(tx_10b_code_violation[17]),
             .d_or_k_code(tx_d_or_k_code[17]),

             .pci_10b_data(tx_10b_data[179:170]),
             .parallel_symbol_valid(tx_valid_code[17]),
             .current_rd(tx_current_rd[17]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[17]),
             .fifo_almost_full(tx_deskew_fifo_full[17]),
             .fifo_empty(tx_deskew_fifo_empty[17]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[17]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[143:136]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[17]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[143:136]),
             .electrical_idle_detected(tx_eidle[17]),
             .idle_data_detected(xmtd_idle_data[17]),
             .skp_os_detected(xmtd_skp_os[17]),
             .idle_os_detected(xmtd_idle_os[17]),
             .fts_os_detected(xmtd_fts_os[17]),
             .ts1_detected(xmtd_ts1[17]),
             .ts2_detected(xmtd_ts2[17]),
             .lane_num_detected(xmtd_lane_num[17]),
             .link_num_detected(xmtd_link_num[17]),
             .link_ctrl_reset_detected(xmtd_reset[17]),
             .loopback_detected(xmtd_loopback[17]),
             .disable_detected(xmtd_disable[17]),
             .disable_scrambling_detected(xmtd_no_scramble[17]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[17])
             );

  // Lane 18

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    18,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE18_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[18] & pclk),
             .symbol_data_plus(int_tx_elecidle[18] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[151:144]),
             .pci_10b_code_violation_n(tx_10b_code_violation[18]),
             .d_or_k_code(tx_d_or_k_code[18]),

             .pci_10b_data(tx_10b_data[189:180]),
             .parallel_symbol_valid(tx_valid_code[18]),
             .current_rd(tx_current_rd[18]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[18]),
             .fifo_almost_full(tx_deskew_fifo_full[18]),
             .fifo_empty(tx_deskew_fifo_empty[18]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[18]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[151:144]), 
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[18]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[151:144]),
             .electrical_idle_detected(tx_eidle[18]),
             .idle_data_detected(xmtd_idle_data[18]),
             .skp_os_detected(xmtd_skp_os[18]),
             .idle_os_detected(xmtd_idle_os[18]),
             .fts_os_detected(xmtd_fts_os[18]),
             .ts1_detected(xmtd_ts1[18]),
             .ts2_detected(xmtd_ts2[18]),
             .lane_num_detected(xmtd_lane_num[18]),
             .link_num_detected(xmtd_link_num[18]),
             .link_ctrl_reset_detected(xmtd_reset[18]),
             .loopback_detected(xmtd_loopback[18]),
             .disable_detected(xmtd_disable[18]),
             .disable_scrambling_detected(xmtd_no_scramble[18]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[18])
             );

  // Lane 19

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    19,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE19_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[19] & pclk),
             .symbol_data_plus(int_tx_elecidle[19] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[159:152]),
             .pci_10b_code_violation_n(tx_10b_code_violation[19]),
             .d_or_k_code(tx_d_or_k_code[19]),

             .pci_10b_data(tx_10b_data[199:190]),
             .parallel_symbol_valid(tx_valid_code[19]),
             .current_rd(tx_current_rd[19]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[19]),
             .fifo_almost_full(tx_deskew_fifo_full[19]),
             .fifo_empty(tx_deskew_fifo_empty[19]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[19]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[159:152]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[19]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[159:152]),
             .electrical_idle_detected(tx_eidle[19]),
             .idle_data_detected(xmtd_idle_data[19]),
             .skp_os_detected(xmtd_skp_os[19]),
             .idle_os_detected(xmtd_idle_os[19]),
             .fts_os_detected(xmtd_fts_os[19]),
             .ts1_detected(xmtd_ts1[19]),
             .ts2_detected(xmtd_ts2[19]),
             .lane_num_detected(xmtd_lane_num[19]),
             .link_num_detected(xmtd_link_num[19]),
             .link_ctrl_reset_detected(xmtd_reset[19]),
             .loopback_detected(xmtd_loopback[19]),
             .disable_detected(xmtd_disable[19]),
             .disable_scrambling_detected(xmtd_no_scramble[19]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[19])
             );

  // Lane 20

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    20,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE20_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[20] & pclk),
             .symbol_data_plus(int_tx_elecidle[20] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[167:160]),
             .pci_10b_code_violation_n(tx_10b_code_violation[20]),
             .d_or_k_code(tx_d_or_k_code[20]),

             .pci_10b_data(tx_10b_data[209:200]),
             .parallel_symbol_valid(tx_valid_code[20]),
             .current_rd(tx_current_rd[20]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[20]),
             .fifo_almost_full(tx_deskew_fifo_full[20]),
             .fifo_empty(tx_deskew_fifo_empty[20]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[20]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[167:160]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[20]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[167:160]),
             .electrical_idle_detected(tx_eidle[20]),
             .idle_data_detected(xmtd_idle_data[20]),
             .skp_os_detected(xmtd_skp_os[20]),
             .idle_os_detected(xmtd_idle_os[20]),
             .fts_os_detected(xmtd_fts_os[20]),
             .ts1_detected(xmtd_ts1[20]),
             .ts2_detected(xmtd_ts2[20]),
             .lane_num_detected(xmtd_lane_num[20]),
             .link_num_detected(xmtd_link_num[20]),
             .link_ctrl_reset_detected(xmtd_reset[20]),
             .loopback_detected(xmtd_loopback[20]),
             .disable_detected(xmtd_disable[20]),
             .disable_scrambling_detected(xmtd_no_scramble[20]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[20])
             );

  // Lane 21

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    21,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE21_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[21] & pclk),
             .symbol_data_plus(int_tx_elecidle[21] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[175:168]),
             .pci_10b_code_violation_n(tx_10b_code_violation[21]),
             .d_or_k_code(tx_d_or_k_code[21]),

             .pci_10b_data(tx_10b_data[219:210]),
             .parallel_symbol_valid(tx_valid_code[21]),
             .current_rd(tx_current_rd[21]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[21]),
             .fifo_almost_full(tx_deskew_fifo_full[21]),
             .fifo_empty(tx_deskew_fifo_empty[21]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[21]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[175:168]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[21]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[175:168]),
             .electrical_idle_detected(tx_eidle[21]),
             .idle_data_detected(xmtd_idle_data[21]),
             .skp_os_detected(xmtd_skp_os[21]),
             .idle_os_detected(xmtd_idle_os[21]),
             .fts_os_detected(xmtd_fts_os[21]),
             .ts1_detected(xmtd_ts1[21]),
             .ts2_detected(xmtd_ts2[21]),
             .lane_num_detected(xmtd_lane_num[21]),
             .link_num_detected(xmtd_link_num[21]),
             .link_ctrl_reset_detected(xmtd_reset[21]),
             .loopback_detected(xmtd_loopback[21]),
             .disable_detected(xmtd_disable[21]),
             .disable_scrambling_detected(xmtd_no_scramble[21]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[21])
             );

  // Lane 22

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    22,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE22_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[22] & pclk),
             .symbol_data_plus(int_tx_elecidle[22] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[183:176]),
             .pci_10b_code_violation_n(tx_10b_code_violation[22]),
             .d_or_k_code(tx_d_or_k_code[22]),

             .pci_10b_data(tx_10b_data[229:220]),
             .parallel_symbol_valid(tx_valid_code[22]),
             .current_rd(tx_current_rd[22]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[22]),
             .fifo_almost_full(tx_deskew_fifo_full[22]),
             .fifo_empty(tx_deskew_fifo_empty[22]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[22]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[183:176]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[22]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[183:176]),
             .electrical_idle_detected(tx_eidle[22]),
             .idle_data_detected(xmtd_idle_data[22]),
             .skp_os_detected(xmtd_skp_os[22]),
             .idle_os_detected(xmtd_idle_os[22]),
             .fts_os_detected(xmtd_fts_os[22]),
             .ts1_detected(xmtd_ts1[22]),
             .ts2_detected(xmtd_ts2[22]),
             .lane_num_detected(xmtd_lane_num[22]),
             .link_num_detected(xmtd_link_num[22]),
             .link_ctrl_reset_detected(xmtd_reset[22]),
             .loopback_detected(xmtd_loopback[22]),
             .disable_detected(xmtd_disable[22]),
             .disable_scrambling_detected(xmtd_no_scramble[22]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[22])
             );

  // Lane 23

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    23,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE23_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[23] & pclk),
             .symbol_data_plus(int_tx_elecidle[23] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[191:184]),
             .pci_10b_code_violation_n(tx_10b_code_violation[23]),
             .d_or_k_code(tx_d_or_k_code[23]),

             .pci_10b_data(tx_10b_data[239:230]),
             .parallel_symbol_valid(tx_valid_code[23]),
             .current_rd(tx_current_rd[23]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[23]),
             .fifo_almost_full(tx_deskew_fifo_full[23]),
             .fifo_empty(tx_deskew_fifo_empty[23]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[23]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[191:184]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[23]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[191:184]),
             .electrical_idle_detected(tx_eidle[23]),
             .idle_data_detected(xmtd_idle_data[23]),
             .skp_os_detected(xmtd_skp_os[23]),
             .idle_os_detected(xmtd_idle_os[23]),
             .fts_os_detected(xmtd_fts_os[23]),
             .ts1_detected(xmtd_ts1[23]),
             .ts2_detected(xmtd_ts2[23]),
             .lane_num_detected(xmtd_lane_num[23]),
             .link_num_detected(xmtd_link_num[23]),
             .link_ctrl_reset_detected(xmtd_reset[23]),
             .loopback_detected(xmtd_loopback[23]),
             .disable_detected(xmtd_disable[23]),
             .disable_scrambling_detected(xmtd_no_scramble[23]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[23])
             );

  // Lane 24

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    24,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE24_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[24] & pclk),
             .symbol_data_plus(int_tx_elecidle[24] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[199:192]),
             .pci_10b_code_violation_n(tx_10b_code_violation[24]),
             .d_or_k_code(tx_d_or_k_code[24]),

             .pci_10b_data(tx_10b_data[249:240]),
             .parallel_symbol_valid(tx_valid_code[24]),
             .current_rd(tx_current_rd[24]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[24]),
             .fifo_almost_full(tx_deskew_fifo_full[24]),
             .fifo_empty(tx_deskew_fifo_empty[24]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[24]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[199:192]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[24]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[199:192]),
             .electrical_idle_detected(tx_eidle[24]),
             .idle_data_detected(xmtd_idle_data[24]),
             .skp_os_detected(xmtd_skp_os[24]),
             .idle_os_detected(xmtd_idle_os[24]),
             .fts_os_detected(xmtd_fts_os[24]),
             .ts1_detected(xmtd_ts1[24]),
             .ts2_detected(xmtd_ts2[24]),
             .lane_num_detected(xmtd_lane_num[24]),
             .link_num_detected(xmtd_link_num[24]),
             .link_ctrl_reset_detected(xmtd_reset[24]),
             .loopback_detected(xmtd_loopback[24]),
             .disable_detected(xmtd_disable[24]),
             .disable_scrambling_detected(xmtd_no_scramble[24]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[24])
             );

  // Lane 25

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    25,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE25_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[25] & pclk),
             .symbol_data_plus(int_tx_elecidle[25] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[207:200]),
             .pci_10b_code_violation_n(tx_10b_code_violation[25]),
             .d_or_k_code(tx_d_or_k_code[25]),

             .pci_10b_data(tx_10b_data[259:250]),
             .parallel_symbol_valid(tx_valid_code[25]),
             .current_rd(tx_current_rd[25]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[25]),
             .fifo_almost_full(tx_deskew_fifo_full[25]),
             .fifo_empty(tx_deskew_fifo_empty[25]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[25]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[207:200]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[25]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[207:200]),
             .electrical_idle_detected(tx_eidle[25]),
             .idle_data_detected(xmtd_idle_data[25]),
             .skp_os_detected(xmtd_skp_os[25]),
             .idle_os_detected(xmtd_idle_os[25]),
             .fts_os_detected(xmtd_fts_os[25]),
             .ts1_detected(xmtd_ts1[25]),
             .ts2_detected(xmtd_ts2[25]),
             .lane_num_detected(xmtd_lane_num[25]),
             .link_num_detected(xmtd_link_num[25]),
             .link_ctrl_reset_detected(xmtd_reset[25]),
             .loopback_detected(xmtd_loopback[25]),
             .disable_detected(xmtd_disable[25]),
             .disable_scrambling_detected(xmtd_no_scramble[25]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[25])
             );

  // Lane 26

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    26,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE26_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[26] & pclk),
             .symbol_data_plus(int_tx_elecidle[26] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[215:208]),
             .pci_10b_code_violation_n(tx_10b_code_violation[26]),
             .d_or_k_code(tx_d_or_k_code[26]),

             .pci_10b_data(tx_10b_data[269:260]),
             .parallel_symbol_valid(tx_valid_code[26]),
             .current_rd(tx_current_rd[26]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[26]),
             .fifo_almost_full(tx_deskew_fifo_full[26]),
             .fifo_empty(tx_deskew_fifo_empty[26]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[26]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[215:208]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[26]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[215:208]),
             .electrical_idle_detected(tx_eidle[26]),
             .idle_data_detected(xmtd_idle_data[26]),
             .skp_os_detected(xmtd_skp_os[26]),
             .idle_os_detected(xmtd_idle_os[26]),
             .fts_os_detected(xmtd_fts_os[26]),
             .ts1_detected(xmtd_ts1[26]),
             .ts2_detected(xmtd_ts2[26]),
             .lane_num_detected(xmtd_lane_num[26]),
             .link_num_detected(xmtd_link_num[26]),
             .link_ctrl_reset_detected(xmtd_reset[26]),
             .loopback_detected(xmtd_loopback[26]),
             .disable_detected(xmtd_disable[26]),
             .disable_scrambling_detected(xmtd_no_scramble[26]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[26])
             );

  // Lane 27

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    27,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE27_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[27] & pclk),
             .symbol_data_plus(int_tx_elecidle[27] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[223:216]),
             .pci_10b_code_violation_n(tx_10b_code_violation[27]),
             .d_or_k_code(tx_d_or_k_code[27]),

             .pci_10b_data(tx_10b_data[279:270]),
             .parallel_symbol_valid(tx_valid_code[27]),
             .current_rd(tx_current_rd[27]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[27]),
             .fifo_almost_full(tx_deskew_fifo_full[27]),
             .fifo_empty(tx_deskew_fifo_empty[27]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[27]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[223:216]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[27]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[223:216]),
             .electrical_idle_detected(tx_eidle[27]),
             .idle_data_detected(xmtd_idle_data[27]),
             .skp_os_detected(xmtd_skp_os[27]),
             .idle_os_detected(xmtd_idle_os[27]),
             .fts_os_detected(xmtd_fts_os[27]),
             .ts1_detected(xmtd_ts1[27]),
             .ts2_detected(xmtd_ts2[27]),
             .lane_num_detected(xmtd_lane_num[27]),
             .link_num_detected(xmtd_link_num[27]),
             .link_ctrl_reset_detected(xmtd_reset[27]),
             .loopback_detected(xmtd_loopback[27]),
             .disable_detected(xmtd_disable[27]),
             .disable_scrambling_detected(xmtd_no_scramble[27]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[27])
             );

  // Lane 28

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    28,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE28_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[28] & pclk),
             .symbol_data_plus(int_tx_elecidle[28] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[231:224]),
             .pci_10b_code_violation_n(tx_10b_code_violation[28]),
             .d_or_k_code(tx_d_or_k_code[28]),

             .pci_10b_data(tx_10b_data[289:280]),
             .parallel_symbol_valid(tx_valid_code[28]),
             .current_rd(tx_current_rd[28]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[28]),
             .fifo_almost_full(tx_deskew_fifo_full[28]),
             .fifo_empty(tx_deskew_fifo_empty[28]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[28]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[231:224]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[28]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[231:224]),
             .electrical_idle_detected(tx_eidle[28]),
             .idle_data_detected(xmtd_idle_data[28]),
             .skp_os_detected(xmtd_skp_os[28]),
             .idle_os_detected(xmtd_idle_os[28]),
             .fts_os_detected(xmtd_fts_os[28]),
             .ts1_detected(xmtd_ts1[28]),
             .ts2_detected(xmtd_ts2[28]),
             .lane_num_detected(xmtd_lane_num[28]),
             .link_num_detected(xmtd_link_num[28]),
             .link_ctrl_reset_detected(xmtd_reset[28]),
             .loopback_detected(xmtd_loopback[28]),
             .disable_detected(xmtd_disable[28]),
             .disable_scrambling_detected(xmtd_no_scramble[28]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[28])
             );

  // Lane 29

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    29,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */          1)
    LANE29_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[29] & pclk),
             .symbol_data_plus(int_tx_elecidle[29] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[239:232]),
             .pci_10b_code_violation_n(tx_10b_code_violation[29]),
             .d_or_k_code(tx_d_or_k_code[29]),

             .pci_10b_data(tx_10b_data[299:290]),
             .parallel_symbol_valid(tx_valid_code[29]),
             .current_rd(tx_current_rd[29]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[29]),
             .fifo_almost_full(tx_deskew_fifo_full[29]),
             .fifo_empty(tx_deskew_fifo_empty[29]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[29]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[239:232]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[29]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[239:232]),
             .electrical_idle_detected(tx_eidle[29]),
             .idle_data_detected(xmtd_idle_data[29]),
             .skp_os_detected(xmtd_skp_os[29]),
             .idle_os_detected(xmtd_idle_os[29]),
             .fts_os_detected(xmtd_fts_os[29]),
             .ts1_detected(xmtd_ts1[29]),
             .ts2_detected(xmtd_ts2[29]),
             .lane_num_detected(xmtd_lane_num[29]),
             .link_num_detected(xmtd_link_num[29]),
             .link_ctrl_reset_detected(xmtd_reset[29]),
             .loopback_detected(xmtd_loopback[29]),
             .disable_detected(xmtd_disable[29]),
             .disable_scrambling_detected(xmtd_no_scramble[29]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[29])
             );

  // Lane 30

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    30,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE30_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[30] & pclk),
             .symbol_data_plus(int_tx_elecidle[30] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[247:240]),
             .pci_10b_code_violation_n(tx_10b_code_violation[30]),
             .d_or_k_code(tx_d_or_k_code[30]),

             .pci_10b_data(tx_10b_data[309:300]),
             .parallel_symbol_valid(tx_valid_code[30]),
             .current_rd(tx_current_rd[30]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[30]),
             .fifo_almost_full(tx_deskew_fifo_full[30]),
             .fifo_empty(tx_deskew_fifo_empty[30]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[30]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[247:240]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[30]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[247:240]),
             .electrical_idle_detected(tx_eidle[30]),
             .idle_data_detected(xmtd_idle_data[30]),
             .skp_os_detected(xmtd_skp_os[30]),
             .idle_os_detected(xmtd_idle_os[30]),
             .fts_os_detected(xmtd_fts_os[30]),
             .ts1_detected(xmtd_ts1[30]),
             .ts2_detected(xmtd_ts2[30]),
             .lane_num_detected(xmtd_lane_num[30]),
             .link_num_detected(xmtd_link_num[30]),
             .link_ctrl_reset_detected(xmtd_reset[30]),
             .loopback_detected(xmtd_loopback[30]),
             .disable_detected(xmtd_disable[30]),
             .disable_scrambling_detected(xmtd_no_scramble[30]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[30])
             );

  // Lane 31

  qvl_pci_express_lane_receiver #(
    /* Constraints_Mode */     PHY_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    1,
    /* PHY_LANE_NUMBER   */    31,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */         TX_SKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE31_TX (
             .reset(reset),
             .areset(areset),

             .clk(tx_clk_gate_lane[31] & pclk),
             .symbol_data_plus(int_tx_elecidle[31] ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(tx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(tx_8b_decoded_data[255:248]),
             .pci_10b_code_violation_n(tx_10b_code_violation[31]),
             .d_or_k_code(tx_d_or_k_code[31]),

             .pci_10b_data(tx_10b_data[319:310]),
             .parallel_symbol_valid(tx_valid_code[31]),
             .current_rd(tx_current_rd[31]),

             .deskew_fifo_read(tx_deskew_fifo_read),
             .deskew_fifo_flush(tx_deskew_fifo_flush),
             .com_read_from_fifo(tx_com_read_from_fifo[31]),
             .fifo_almost_full(tx_deskew_fifo_full[31]),
             .fifo_empty(tx_deskew_fifo_empty[31]),
             .deskew_d_or_k_code(tx_deskew_d_or_k_code[31]),

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_xmtd_lane_num),
	     .n_fts(tx_n_fts[255:248]),
             .link_number(),
             .lane_0_detected(tx_lane_0_detected[31]),
             .dllp_tlp_on_link(xmting_dllp_tlp),
             .descrambled_data(tx_descrambled_data[255:248]),
             .electrical_idle_detected(tx_eidle[31]),
             .idle_data_detected(xmtd_idle_data[31]),
             .skp_os_detected(xmtd_skp_os[31]),
             .idle_os_detected(xmtd_idle_os[31]),
             .fts_os_detected(xmtd_fts_os[31]),
             .ts1_detected(xmtd_ts1[31]),
             .ts2_detected(xmtd_ts2[31]),
             .lane_num_detected(xmtd_lane_num[31]),
             .link_num_detected(xmtd_link_num[31]),
             .link_ctrl_reset_detected(xmtd_reset[31]),
             .loopback_detected(xmtd_loopback[31]),
             .disable_detected(xmtd_disable[31]),
             .disable_scrambling_detected(xmtd_no_scramble[31]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(xmtd_comp_pattern[31])
             ); 

  //------------------------------------------------------------
  // Lane receiver module instantiations on the receive interface
  //------------------------------------------------------------

  // Lane 0

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    0,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */       MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE00_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[0] & pclk),
             .symbol_data_plus((int_rx_elecidle[0] & ~rx_valid_in[0]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[7:0]),
             .pci_10b_code_violation_n(rx_10b_code_violation[0]),
             .d_or_k_code(rx_d_or_k_code[0]),

             .pci_10b_data(rx_10b_data[9:0]),
             .parallel_symbol_valid(rx_valid_code[0]),
             .current_rd(rx_current_rd[0]),

	     .deskew_fifo_read(deskew_fifo_read),
	     .deskew_fifo_flush(deskew_fifo_flush),
	     .com_read_from_fifo(com_read_from_fifo[0]),
	     .fifo_almost_full(deskew_fifo_full[0]),
	     .fifo_empty(deskew_fifo_empty[0]),

	     .rx_valid_in(rx_valid_in[0]),  // Specific to PIPE

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[7:0]),
             .link_number(link_number_rx),
	     .lane_0_detected(rx_lane_0_detected[0]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[7:0]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[0]),
             .electrical_idle_detected(rx_eidle[0]),
	     .idle_data_detected(rcvd_idle_data[0]),
             .skp_os_detected(rcvd_skp_os[0]),
             .idle_os_detected(rcvd_idle_os[0]),
             .fts_os_detected(rcvd_fts_os[0]),
             .ts1_detected(rcvd_ts1[0]),
             .ts2_detected(rcvd_ts2[0]),
             .lane_num_detected(rcvd_lane_num[0]),
             .link_num_detected(rcvd_link_num[0]),
             .link_ctrl_reset_detected(rcvd_reset[0]),
             .loopback_detected(rcvd_loopback[0]),
             .disable_detected(rcvd_disable[0]),
             .disable_scrambling_detected(rcvd_no_scramble[0]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[0])
             );

   // Lane 1

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT, 
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    1,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE01_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[1] & pclk),
             .symbol_data_plus((int_rx_elecidle[1] & ~rx_valid_in[1]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[15:8]),
             .pci_10b_code_violation_n(rx_10b_code_violation[1]),
             .d_or_k_code(rx_d_or_k_code[1]),
 
             .pci_10b_data(rx_10b_data[19:10]),
             .parallel_symbol_valid(rx_valid_code[1]),
             .current_rd(rx_current_rd[1]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[1]),
             .fifo_almost_full(deskew_fifo_full[1]),
             .fifo_empty(deskew_fifo_empty[1]),

	     .rx_valid_in(rx_valid_in[1]), // Specific to PIPE

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[15:8]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[1]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[15:8]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[1]),
             .electrical_idle_detected(rx_eidle[1]),
	     .idle_data_detected(rcvd_idle_data[1]),
             .skp_os_detected(rcvd_skp_os[1]),
             .idle_os_detected(rcvd_idle_os[1]),
             .fts_os_detected(rcvd_fts_os[1]),
             .ts1_detected(rcvd_ts1[1]),
             .ts2_detected(rcvd_ts2[1]),
             .lane_num_detected(rcvd_lane_num[1]),
             .link_num_detected(rcvd_link_num[1]),
             .link_ctrl_reset_detected(rcvd_reset[1]),
             .loopback_detected(rcvd_loopback[1]),
             .disable_detected(rcvd_disable[1]),
             .disable_scrambling_detected(rcvd_no_scramble[1]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[1])
             );  
 
  // Lane 2
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT, 
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    2,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE02_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[2] & pclk),
             .symbol_data_plus((int_rx_elecidle[2] & ~rx_valid_in[2]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[23:16]),
             .pci_10b_code_violation_n(rx_10b_code_violation[2]),
             .d_or_k_code(rx_d_or_k_code[2]),
              
             .pci_10b_data(rx_10b_data[29:20]),
             .parallel_symbol_valid(rx_valid_code[2]),
             .current_rd(rx_current_rd[2]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[2]),
             .fifo_almost_full(deskew_fifo_full[2]),
	     .fifo_empty(deskew_fifo_empty[2]),

	     .rx_valid_in(rx_valid_in[2]), // Specific to PIPE interface

 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[23:16]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[2]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[23:16]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[2]),
             .electrical_idle_detected(rx_eidle[2]),
	     .idle_data_detected(rcvd_idle_data[2]),
             .skp_os_detected(rcvd_skp_os[2]),
             .idle_os_detected(rcvd_idle_os[2]),
             .fts_os_detected(rcvd_fts_os[2]),
             .ts1_detected(rcvd_ts1[2]),
             .ts2_detected(rcvd_ts2[2]),
             .lane_num_detected(rcvd_lane_num[2]),
             .link_num_detected(rcvd_link_num[2]),
             .link_ctrl_reset_detected(rcvd_reset[2]),
             .loopback_detected(rcvd_loopback[2]),
             .disable_detected(rcvd_disable[2]),
             .disable_scrambling_detected(rcvd_no_scramble[2]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[2])
             );

  // Lane 3
 
   qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    3,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE03_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[3] & pclk),    
             .symbol_data_plus((int_rx_elecidle[3] & ~rx_valid_in[3]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

	     .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[31:24]),
             .pci_10b_code_violation_n(rx_10b_code_violation[3]),
             .d_or_k_code(rx_d_or_k_code[3]),
              
             .pci_10b_data(rx_10b_data[39:30]),
             .parallel_symbol_valid(rx_valid_code[3]),
             .current_rd(rx_current_rd[3]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[3]),
             .fifo_almost_full(deskew_fifo_full[3]),
	     .fifo_empty(deskew_fifo_empty[3]), 

	     .rx_valid_in(rx_valid_in[3]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble), 
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[31:24]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[3]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[31:24]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[3]),
             .electrical_idle_detected(rx_eidle[3]),
	     .idle_data_detected(rcvd_idle_data[3]),
             .skp_os_detected(rcvd_skp_os[3]),
             .idle_os_detected(rcvd_idle_os[3]),
             .fts_os_detected(rcvd_fts_os[3]),
             .ts1_detected(rcvd_ts1[3]),
             .ts2_detected(rcvd_ts2[3]),
             .lane_num_detected(rcvd_lane_num[3]),
             .link_num_detected(rcvd_link_num[3]),
             .link_ctrl_reset_detected(rcvd_reset[3]),
             .loopback_detected(rcvd_loopback[3]),
             .disable_detected(rcvd_disable[3]),
             .disable_scrambling_detected(rcvd_no_scramble[3]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[3])
             );

  // Lane 4

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    4,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE04_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[4] & pclk),
             .symbol_data_plus((int_rx_elecidle[4] & ~rx_valid_in[4]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[39:32]),
             .pci_10b_code_violation_n(rx_10b_code_violation[4]),
             .d_or_k_code(rx_d_or_k_code[4]),

             .pci_10b_data(rx_10b_data[49:40]),
             .parallel_symbol_valid(rx_valid_code[4]),
             .current_rd(rx_current_rd[4]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[4]),
             .fifo_almost_full(deskew_fifo_full[4]),
	     .fifo_empty(deskew_fifo_empty[4]), 

	     .rx_valid_in(rx_valid_in[4]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[39:32]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[4]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[39:32]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[4]),
             .electrical_idle_detected(rx_eidle[4]),
             .idle_data_detected(rcvd_idle_data[4]),
             .skp_os_detected(rcvd_skp_os[4]),
             .idle_os_detected(rcvd_idle_os[4]),
             .fts_os_detected(rcvd_fts_os[4]),
             .ts1_detected(rcvd_ts1[4]),
             .ts2_detected(rcvd_ts2[4]),
             .lane_num_detected(rcvd_lane_num[4]),
             .link_num_detected(rcvd_link_num[4]),
             .link_ctrl_reset_detected(rcvd_reset[4]),
             .loopback_detected(rcvd_loopback[4]),
             .disable_detected(rcvd_disable[4]),
             .disable_scrambling_detected(rcvd_no_scramble[4]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[4])
             );

  // Lane 5

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    5,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE05_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[5] & pclk),
             .symbol_data_plus((int_rx_elecidle[5] & ~rx_valid_in[5]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[47:40]),
             .pci_10b_code_violation_n(rx_10b_code_violation[5]),
             .d_or_k_code(rx_d_or_k_code[5]),

             .pci_10b_data(rx_10b_data[59:50]),
             .parallel_symbol_valid(rx_valid_code[5]),
             .current_rd(rx_current_rd[5]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[5]),
             .fifo_almost_full(deskew_fifo_full[5]),
	     .fifo_empty(deskew_fifo_empty[5]), 

	     .rx_valid_in(rx_valid_in[5]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[47:40]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[5]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[47:40]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[5]),
             .electrical_idle_detected(rx_eidle[5]),
             .idle_data_detected(rcvd_idle_data[5]),
             .skp_os_detected(rcvd_skp_os[5]),
             .idle_os_detected(rcvd_idle_os[5]),
             .fts_os_detected(rcvd_fts_os[5]),
             .ts1_detected(rcvd_ts1[5]),
             .ts2_detected(rcvd_ts2[5]),
             .lane_num_detected(rcvd_lane_num[5]),
             .link_num_detected(rcvd_link_num[5]),
             .link_ctrl_reset_detected(rcvd_reset[5]),
             .loopback_detected(rcvd_loopback[5]),
             .disable_detected(rcvd_disable[5]),
             .disable_scrambling_detected(rcvd_no_scramble[5]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[5])
             );

  // Lane 6
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    6,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE06_RX (
             .reset(reset),
             .areset(areset),
  
             .clk(rx_clk_gate_lane[6] & pclk),
             .symbol_data_plus((int_rx_elecidle[6] & ~rx_valid_in[6]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[55:48]),
             .pci_10b_code_violation_n(rx_10b_code_violation[6]),
             .d_or_k_code(rx_d_or_k_code[6]),
 
             .pci_10b_data(rx_10b_data[69:60]),
             .parallel_symbol_valid(rx_valid_code[6]),
             .current_rd(rx_current_rd[6]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[6]),
             .fifo_almost_full(deskew_fifo_full[6]),
	     .fifo_empty(deskew_fifo_empty[6]), 

	     .rx_valid_in(rx_valid_in[6]), // Specific to PIPE interface
  
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[55:48]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[6]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[55:48]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[6]),
             .electrical_idle_detected(rx_eidle[6]),
             .idle_data_detected(rcvd_idle_data[6]),
             .skp_os_detected(rcvd_skp_os[6]),
             .idle_os_detected(rcvd_idle_os[6]),
             .fts_os_detected(rcvd_fts_os[6]),
             .ts1_detected(rcvd_ts1[6]),
             .ts2_detected(rcvd_ts2[6]),
             .lane_num_detected(rcvd_lane_num[6]),
             .link_num_detected(rcvd_link_num[6]),
             .link_ctrl_reset_detected(rcvd_reset[6]),
             .loopback_detected(rcvd_loopback[6]),
             .disable_detected(rcvd_disable[6]),
             .disable_scrambling_detected(rcvd_no_scramble[6]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[6])
             );

  // Lane 7

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    7,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE07_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[7] & pclk),
             .symbol_data_plus((int_rx_elecidle[7] & ~rx_valid_in[7]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[63:56]),
             .pci_10b_code_violation_n(rx_10b_code_violation[7]),
             .d_or_k_code(rx_d_or_k_code[7]),

             .pci_10b_data(rx_10b_data[79:70]),
             .parallel_symbol_valid(rx_valid_code[7]),
             .current_rd(rx_current_rd[7]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[7]),
             .fifo_almost_full(deskew_fifo_full[7]),
	     .fifo_empty(deskew_fifo_empty[7]), 

	     .rx_valid_in(rx_valid_in[7]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[63:56]),
             .link_number(),
	     .lane_0_detected(rx_lane_0_detected[7]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[63:56]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[7]),
             .electrical_idle_detected(rx_eidle[7]),
             .idle_data_detected(rcvd_idle_data[7]),
             .skp_os_detected(rcvd_skp_os[7]),
             .idle_os_detected(rcvd_idle_os[7]),
             .fts_os_detected(rcvd_fts_os[7]),
             .ts1_detected(rcvd_ts1[7]),
             .ts2_detected(rcvd_ts2[7]),
             .lane_num_detected(rcvd_lane_num[7]),
             .link_num_detected(rcvd_link_num[7]),
             .link_ctrl_reset_detected(rcvd_reset[7]),
             .loopback_detected(rcvd_loopback[7]),
             .disable_detected(rcvd_disable[7]),
             .disable_scrambling_detected(rcvd_no_scramble[7]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[7])
             ); 

  // Lane 8

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    8,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE08_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[8] & pclk),
             .symbol_data_plus((int_rx_elecidle[8] & ~rx_valid_in[8]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[71:64]),
             .pci_10b_code_violation_n(rx_10b_code_violation[8]),
             .d_or_k_code(rx_d_or_k_code[8]),

             .pci_10b_data(rx_10b_data[89:80]),
             .parallel_symbol_valid(rx_valid_code[8]),
             .current_rd(rx_current_rd[8]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[8]),
             .fifo_almost_full(deskew_fifo_full[8]),
	     .fifo_empty(deskew_fifo_empty[8]), 

	     .rx_valid_in(rx_valid_in[8]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[71:64]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[8]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[71:64]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[8]),
             .electrical_idle_detected(rx_eidle[8]),
             .idle_data_detected(rcvd_idle_data[8]),
             .skp_os_detected(rcvd_skp_os[8]),
             .idle_os_detected(rcvd_idle_os[8]),
             .fts_os_detected(rcvd_fts_os[8]),
             .ts1_detected(rcvd_ts1[8]),
             .ts2_detected(rcvd_ts2[8]),
             .lane_num_detected(rcvd_lane_num[8]),
             .link_num_detected(rcvd_link_num[8]),
             .link_ctrl_reset_detected(rcvd_reset[8]),
             .loopback_detected(rcvd_loopback[8]),
             .disable_detected(rcvd_disable[8]),
             .disable_scrambling_detected(rcvd_no_scramble[8]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[8])
             );

  // Lane 9

 qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    9,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE09_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[9] & pclk),
             .symbol_data_plus((int_rx_elecidle[9] & ~rx_valid_in[9]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[79:72]),
             .pci_10b_code_violation_n(rx_10b_code_violation[9]),
             .d_or_k_code(rx_d_or_k_code[9]),
 
             .pci_10b_data(rx_10b_data[99:90]),
             .parallel_symbol_valid(rx_valid_code[9]),
             .current_rd(rx_current_rd[9]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[9]),
             .fifo_almost_full(deskew_fifo_full[9]),
	     .fifo_empty(deskew_fifo_empty[9]), 

             .rx_valid_in(rx_valid_in[9]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[79:72]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[9]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[79:72]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[9]),
             .electrical_idle_detected(rx_eidle[9]),
             .idle_data_detected(rcvd_idle_data[9]),
             .skp_os_detected(rcvd_skp_os[9]),
             .idle_os_detected(rcvd_idle_os[9]),
             .fts_os_detected(rcvd_fts_os[9]),
             .ts1_detected(rcvd_ts1[9]),
             .ts2_detected(rcvd_ts2[9]),
             .lane_num_detected(rcvd_lane_num[9]),
             .link_num_detected(rcvd_link_num[9]),
             .link_ctrl_reset_detected(rcvd_reset[9]),
             .loopback_detected(rcvd_loopback[9]),
             .disable_detected(rcvd_disable[9]),
             .disable_scrambling_detected(rcvd_no_scramble[9]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[9])
             );

  // Lane 10
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    10,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE10_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[10] & pclk),
             .symbol_data_plus((int_rx_elecidle[10] & ~rx_valid_in[10]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[87:80]),
             .pci_10b_code_violation_n(rx_10b_code_violation[10]),
             .d_or_k_code(rx_d_or_k_code[10]),
 
             .pci_10b_data(rx_10b_data[109:100]),
             .parallel_symbol_valid(rx_valid_code[10]),
             .current_rd(rx_current_rd[10]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[10]),
             .fifo_almost_full(deskew_fifo_full[10]),
	     .fifo_empty(deskew_fifo_empty[10]), 

	     .rx_valid_in(rx_valid_in[10]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[87:80]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[10]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[87:80]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[10]),
             .electrical_idle_detected(rx_eidle[10]),
             .idle_data_detected(rcvd_idle_data[10]),
             .skp_os_detected(rcvd_skp_os[10]),
             .idle_os_detected(rcvd_idle_os[10]),
             .fts_os_detected(rcvd_fts_os[10]),
             .ts1_detected(rcvd_ts1[10]),
             .ts2_detected(rcvd_ts2[10]),
             .lane_num_detected(rcvd_lane_num[10]),
             .link_num_detected(rcvd_link_num[10]),
             .link_ctrl_reset_detected(rcvd_reset[10]),
             .loopback_detected(rcvd_loopback[10]),
             .disable_detected(rcvd_disable[10]),
             .disable_scrambling_detected(rcvd_no_scramble[10]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[10])
             );

  // Lane 11
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    11,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE11_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[11] & pclk),
             .symbol_data_plus((int_rx_elecidle[11] & ~rx_valid_in[11]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[95:88]),
             .pci_10b_code_violation_n(rx_10b_code_violation[11]),
             .d_or_k_code(rx_d_or_k_code[11]),
 
             .pci_10b_data(rx_10b_data[119:110]),
             .parallel_symbol_valid(rx_valid_code[11]),
             .current_rd(rx_current_rd[11]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[11]),
             .fifo_almost_full(deskew_fifo_full[11]),
	     .fifo_empty(deskew_fifo_empty[11]), 

	     .rx_valid_in(rx_valid_in[11]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[95:88]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[11]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[95:88]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[11]),
             .electrical_idle_detected(rx_eidle[11]),
             .idle_data_detected(rcvd_idle_data[11]),
             .skp_os_detected(rcvd_skp_os[11]),
             .idle_os_detected(rcvd_idle_os[11]),
             .fts_os_detected(rcvd_fts_os[11]),
             .ts1_detected(rcvd_ts1[11]),
             .ts2_detected(rcvd_ts2[11]),
             .lane_num_detected(rcvd_lane_num[11]),
             .link_num_detected(rcvd_link_num[11]),
             .link_ctrl_reset_detected(rcvd_reset[11]),
             .loopback_detected(rcvd_loopback[11]),
             .disable_detected(rcvd_disable[11]),
             .disable_scrambling_detected(rcvd_no_scramble[11]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[11])
             );  

  // Lane 12

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    12,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE12_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[12] & pclk),
             .symbol_data_plus((int_rx_elecidle[12] & ~rx_valid_in[12]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[103:96]),
             .pci_10b_code_violation_n(rx_10b_code_violation[12]),
             .d_or_k_code(rx_d_or_k_code[12]),

             .pci_10b_data(rx_10b_data[129:120]),
             .parallel_symbol_valid(rx_valid_code[12]),
             .current_rd(rx_current_rd[12]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[12]),
             .fifo_almost_full(deskew_fifo_full[12]),
	     .fifo_empty(deskew_fifo_empty[12]), 

	     .rx_valid_in(rx_valid_in[12]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[103:96]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[12]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[103:96]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[12]),
             .electrical_idle_detected(rx_eidle[12]),
             .idle_data_detected(rcvd_idle_data[12]),
             .skp_os_detected(rcvd_skp_os[12]),
             .idle_os_detected(rcvd_idle_os[12]),
             .fts_os_detected(rcvd_fts_os[12]),
             .ts1_detected(rcvd_ts1[12]),
             .ts2_detected(rcvd_ts2[12]),
             .lane_num_detected(rcvd_lane_num[12]),
             .link_num_detected(rcvd_link_num[12]),
             .link_ctrl_reset_detected(rcvd_reset[12]),
             .loopback_detected(rcvd_loopback[12]),
             .disable_detected(rcvd_disable[12]),
             .disable_scrambling_detected(rcvd_no_scramble[12]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[12])
             );
 
  // Lane 13

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    13,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE13_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[13] & pclk),
             .symbol_data_plus((int_rx_elecidle[13] & ~rx_valid_in[13]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[111:104]),
             .pci_10b_code_violation_n(rx_10b_code_violation[13]),
             .d_or_k_code(rx_d_or_k_code[13]),

             .pci_10b_data(rx_10b_data[139:130]),
             .parallel_symbol_valid(rx_valid_code[13]),    
             .current_rd(rx_current_rd[13]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[13]),
             .fifo_almost_full(deskew_fifo_full[13]),
	     .fifo_empty(deskew_fifo_empty[13]), 

	     .rx_valid_in(rx_valid_in[13]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[111:104]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[13]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[111:104]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[13]),
             .electrical_idle_detected(rx_eidle[13]),   
             .idle_data_detected(rcvd_idle_data[13]),
             .skp_os_detected(rcvd_skp_os[13]),
             .idle_os_detected(rcvd_idle_os[13]),
             .fts_os_detected(rcvd_fts_os[13]), 
             .ts1_detected(rcvd_ts1[13]),
             .ts2_detected(rcvd_ts2[13]),
             .lane_num_detected(rcvd_lane_num[13]),
             .link_num_detected(rcvd_link_num[13]),
             .link_ctrl_reset_detected(rcvd_reset[13]),
             .loopback_detected(rcvd_loopback[13]),   
             .disable_detected(rcvd_disable[13]), 
             .disable_scrambling_detected(rcvd_no_scramble[13]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[13])
             );

  // Lane 14

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    14,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE14_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[14] & pclk),
             .symbol_data_plus((int_rx_elecidle[14] & ~rx_valid_in[14]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[119:112]),
             .pci_10b_code_violation_n(rx_10b_code_violation[14]),
             .d_or_k_code(rx_d_or_k_code[14]),

             .pci_10b_data(rx_10b_data[149:140]),
             .parallel_symbol_valid(rx_valid_code[14]),    
             .current_rd(rx_current_rd[14]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[14]),
             .fifo_almost_full(deskew_fifo_full[14]),
	     .fifo_empty(deskew_fifo_empty[14]), 

	     .rx_valid_in(rx_valid_in[14]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[119:112]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[14]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[119:112]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[14]),
             .electrical_idle_detected(rx_eidle[14]),   
             .idle_data_detected(rcvd_idle_data[14]),
             .skp_os_detected(rcvd_skp_os[14]),
             .idle_os_detected(rcvd_idle_os[14]),
             .fts_os_detected(rcvd_fts_os[14]), 
             .ts1_detected(rcvd_ts1[14]),
             .ts2_detected(rcvd_ts2[14]),
             .lane_num_detected(rcvd_lane_num[14]),
             .link_num_detected(rcvd_link_num[14]),
             .link_ctrl_reset_detected(rcvd_reset[14]),
             .loopback_detected(rcvd_loopback[14]),   
             .disable_detected(rcvd_disable[14]), 
             .disable_scrambling_detected(rcvd_no_scramble[14]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[14])
             );

  // Lane 15

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    15,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE15_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[15] & pclk),
             .symbol_data_plus((int_rx_elecidle[15] & ~rx_valid_in[15]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[127:120]),
             .pci_10b_code_violation_n(rx_10b_code_violation[15]),
             .d_or_k_code(rx_d_or_k_code[15]),

             .pci_10b_data(rx_10b_data[159:150]),
             .parallel_symbol_valid(rx_valid_code[15]),    
             .current_rd(rx_current_rd[15]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[15]),
             .fifo_almost_full(deskew_fifo_full[15]),
	     .fifo_empty(deskew_fifo_empty[15]), 

	     .rx_valid_in(rx_valid_in[15]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),       
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[127:120]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[15]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[127:120]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[15]),
             .electrical_idle_detected(rx_eidle[15]),   
             .idle_data_detected(rcvd_idle_data[15]),
             .skp_os_detected(rcvd_skp_os[15]),
             .idle_os_detected(rcvd_idle_os[15]),
             .fts_os_detected(rcvd_fts_os[15]), 
             .ts1_detected(rcvd_ts1[15]),
             .ts2_detected(rcvd_ts2[15]),
             .lane_num_detected(rcvd_lane_num[15]),
             .link_num_detected(rcvd_link_num[15]),
             .link_ctrl_reset_detected(rcvd_reset[15]),
             .loopback_detected(rcvd_loopback[15]),   
             .disable_detected(rcvd_disable[15]), 
             .disable_scrambling_detected(rcvd_no_scramble[15]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[15])
             );

  // Lane 16

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    16,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE16_RX (
             .reset(reset),
             .areset(areset),

             .clk(rx_clk_gate_lane[16] & pclk),
             .symbol_data_plus((int_rx_elecidle[16] & ~rx_valid_in[16]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),

             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),

             .pci_8b_data(rx_8b_decoded_data[135:128]),
             .pci_10b_code_violation_n(rx_10b_code_violation[16]),
             .d_or_k_code(rx_d_or_k_code[16]),
 
             .pci_10b_data(rx_10b_data[169:160]),
             .parallel_symbol_valid(rx_valid_code[16]),
             .current_rd(rx_current_rd[16]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[16]),
             .fifo_almost_full(deskew_fifo_full[16]),
	     .fifo_empty(deskew_fifo_empty[16]),

	     .rx_valid_in(rx_valid_in[16]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[135:128]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[16]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[135:128]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[16]),
             .electrical_idle_detected(rx_eidle[16]),
             .idle_data_detected(rcvd_idle_data[16]),
             .skp_os_detected(rcvd_skp_os[16]),
             .idle_os_detected(rcvd_idle_os[16]),
             .fts_os_detected(rcvd_fts_os[16]),
             .ts1_detected(rcvd_ts1[16]),
             .ts2_detected(rcvd_ts2[16]),
             .lane_num_detected(rcvd_lane_num[16]),
             .link_num_detected(rcvd_link_num[16]),
             .link_ctrl_reset_detected(rcvd_reset[16]),
             .loopback_detected(rcvd_loopback[16]),
             .disable_detected(rcvd_disable[16]),
             .disable_scrambling_detected(rcvd_no_scramble[16]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[16])
             );

  // Lane 17

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    17,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE17_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[17] & pclk),
             .symbol_data_plus((int_rx_elecidle[17] & ~rx_valid_in[17]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[143:136]),
             .pci_10b_code_violation_n(rx_10b_code_violation[17]),
             .d_or_k_code(rx_d_or_k_code[17]),
 
             .pci_10b_data(rx_10b_data[179:170]),
             .parallel_symbol_valid(rx_valid_code[17]),
             .current_rd(rx_current_rd[17]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[17]),
             .fifo_almost_full(deskew_fifo_full[17]),
	     .fifo_empty(deskew_fifo_empty[17]), 

	     .rx_valid_in(rx_valid_in[17]), // Specific to PIPE interface

 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[143:136]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[17]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[143:136]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[17]),
             .electrical_idle_detected(rx_eidle[17]),
             .idle_data_detected(rcvd_idle_data[17]),
             .skp_os_detected(rcvd_skp_os[17]),
             .idle_os_detected(rcvd_idle_os[17]),
             .fts_os_detected(rcvd_fts_os[17]),
             .ts1_detected(rcvd_ts1[17]),
             .ts2_detected(rcvd_ts2[17]),
             .lane_num_detected(rcvd_lane_num[17]),
             .link_num_detected(rcvd_link_num[17]),
             .link_ctrl_reset_detected(rcvd_reset[17]),
             .loopback_detected(rcvd_loopback[17]),
             .disable_detected(rcvd_disable[17]),
             .disable_scrambling_detected(rcvd_no_scramble[17]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[17])
             );

  // Lane 18
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    18,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE18_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[18] & pclk),
             .symbol_data_plus((int_rx_elecidle[18] & ~rx_valid_in[18]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[151:144]),
             .pci_10b_code_violation_n(rx_10b_code_violation[18]),
             .d_or_k_code(rx_d_or_k_code[18]),
              
             .pci_10b_data(rx_10b_data[189:180]),
             .parallel_symbol_valid(rx_valid_code[18]),
             .current_rd(rx_current_rd[18]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[18]),
             .fifo_almost_full(deskew_fifo_full[18]),
	     .fifo_empty(deskew_fifo_empty[18]), 

	     .rx_valid_in(rx_valid_in[18]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[151:144]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[18]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[151:144]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[18]),
             .electrical_idle_detected(rx_eidle[18]),
             .idle_data_detected(rcvd_idle_data[18]),
             .skp_os_detected(rcvd_skp_os[18]),
             .idle_os_detected(rcvd_idle_os[18]),
             .fts_os_detected(rcvd_fts_os[18]),
             .ts1_detected(rcvd_ts1[18]),
             .ts2_detected(rcvd_ts2[18]),
             .lane_num_detected(rcvd_lane_num[18]),
             .link_num_detected(rcvd_link_num[18]),
             .link_ctrl_reset_detected(rcvd_reset[18]),
             .loopback_detected(rcvd_loopback[18]),
             .disable_detected(rcvd_disable[18]),
             .disable_scrambling_detected(rcvd_no_scramble[18]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[18])
             );

  // Lane 19

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    19,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE19_RX (
             .reset(reset),
             .areset(areset),
              
             .clk(rx_clk_gate_lane[19] & pclk),
             .symbol_data_plus((int_rx_elecidle[19] & ~rx_valid_in[19]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[159:152]),
             .pci_10b_code_violation_n(rx_10b_code_violation[19]),
             .d_or_k_code(rx_d_or_k_code[19]),
 
             .pci_10b_data(rx_10b_data[199:190]),
             .parallel_symbol_valid(rx_valid_code[19]),
             .current_rd(rx_current_rd[19]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[19]),
             .fifo_almost_full(deskew_fifo_full[19]),
	     .fifo_empty(deskew_fifo_empty[19]), 

	     .rx_valid_in(rx_valid_in[19]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[159:152]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[19]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[159:152]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[19]),
             .electrical_idle_detected(rx_eidle[19]),
             .idle_data_detected(rcvd_idle_data[19]),
             .skp_os_detected(rcvd_skp_os[19]),
             .idle_os_detected(rcvd_idle_os[19]),
             .fts_os_detected(rcvd_fts_os[19]),
             .ts1_detected(rcvd_ts1[19]),
             .ts2_detected(rcvd_ts2[19]),
             .lane_num_detected(rcvd_lane_num[19]),
             .link_num_detected(rcvd_link_num[19]),
             .link_ctrl_reset_detected(rcvd_reset[19]),
             .loopback_detected(rcvd_loopback[19]),
             .disable_detected(rcvd_disable[19]),
             .disable_scrambling_detected(rcvd_no_scramble[19]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[19])
             );

  // Lane 20
              
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    20,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE20_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[20] & pclk),
             .symbol_data_plus((int_rx_elecidle[20] & ~rx_valid_in[20]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[167:160]),
             .pci_10b_code_violation_n(rx_10b_code_violation[20]),
             .d_or_k_code(rx_d_or_k_code[20]),
 
             .pci_10b_data(rx_10b_data[209:200]),
             .parallel_symbol_valid(rx_valid_code[20]),
             .current_rd(rx_current_rd[20]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[20]),
             .fifo_almost_full(deskew_fifo_full[20]),
	     .fifo_empty(deskew_fifo_empty[20]), 

	     .rx_valid_in(rx_valid_in[20]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[167:160]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[20]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[167:160]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[20]),
             .electrical_idle_detected(rx_eidle[20]),
             .idle_data_detected(rcvd_idle_data[20]),
             .skp_os_detected(rcvd_skp_os[20]),
             .idle_os_detected(rcvd_idle_os[20]),
             .fts_os_detected(rcvd_fts_os[20]),
             .ts1_detected(rcvd_ts1[20]),
             .ts2_detected(rcvd_ts2[20]),
             .lane_num_detected(rcvd_lane_num[20]),
             .link_num_detected(rcvd_link_num[20]),
             .link_ctrl_reset_detected(rcvd_reset[20]),
             .loopback_detected(rcvd_loopback[20]),
             .disable_detected(rcvd_disable[20]),
             .disable_scrambling_detected(rcvd_no_scramble[20]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[20])
             );

  // Lane 21

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    21,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE21_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[21] & pclk),
             .symbol_data_plus((int_rx_elecidle[21] & ~rx_valid_in[21]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[175:168]),
             .pci_10b_code_violation_n(rx_10b_code_violation[21]),
             .d_or_k_code(rx_d_or_k_code[21]),
 
             .pci_10b_data(rx_10b_data[219:210]),
             .parallel_symbol_valid(rx_valid_code[21]),
             .current_rd(rx_current_rd[21]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[21]),
             .fifo_almost_full(deskew_fifo_full[21]),
	     .fifo_empty(deskew_fifo_empty[21]), 

	     .rx_valid_in(rx_valid_in[21]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[175:168]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[21]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[175:168]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[21]),
             .electrical_idle_detected(rx_eidle[21]),
             .idle_data_detected(rcvd_idle_data[21]),
             .skp_os_detected(rcvd_skp_os[21]),
             .idle_os_detected(rcvd_idle_os[21]),
             .fts_os_detected(rcvd_fts_os[21]),
             .ts1_detected(rcvd_ts1[21]),
             .ts2_detected(rcvd_ts2[21]),
             .lane_num_detected(rcvd_lane_num[21]),
             .link_num_detected(rcvd_link_num[21]),
             .link_ctrl_reset_detected(rcvd_reset[21]),
             .loopback_detected(rcvd_loopback[21]),
             .disable_detected(rcvd_disable[21]),
             .disable_scrambling_detected(rcvd_no_scramble[21]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[21])
             );

  // Lane 22
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    22,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE22_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[22] & pclk),
             .symbol_data_plus((int_rx_elecidle[22] & ~rx_valid_in[22]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[183:176]),
             .pci_10b_code_violation_n(rx_10b_code_violation[22]),
             .d_or_k_code(rx_d_or_k_code[22]),
     
             .pci_10b_data(rx_10b_data[229:220]),
             .parallel_symbol_valid(rx_valid_code[22]),
             .current_rd(rx_current_rd[22]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[22]),
             .fifo_almost_full(deskew_fifo_full[22]),
	     .fifo_empty(deskew_fifo_empty[22]), 

	     .rx_valid_in(rx_valid_in[22]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[183:176]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[22]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[183:176]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[22]),
             .electrical_idle_detected(rx_eidle[22]),
             .idle_data_detected(rcvd_idle_data[22]),
             .skp_os_detected(rcvd_skp_os[22]),
             .idle_os_detected(rcvd_idle_os[22]),
             .fts_os_detected(rcvd_fts_os[22]),
             .ts1_detected(rcvd_ts1[22]),
             .ts2_detected(rcvd_ts2[22]),
             .lane_num_detected(rcvd_lane_num[22]),
             .link_num_detected(rcvd_link_num[22]),
             .link_ctrl_reset_detected(rcvd_reset[22]),
             .loopback_detected(rcvd_loopback[22]),
             .disable_detected(rcvd_disable[22]),
             .disable_scrambling_detected(rcvd_no_scramble[22]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[22])
             );

  // Lane 23
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    23,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE23_RX (
             .reset(reset),
             .areset(areset),
              
             .clk(rx_clk_gate_lane[23] & pclk),
             .symbol_data_plus((int_rx_elecidle[23] & ~rx_valid_in[23]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[191:184]),
             .pci_10b_code_violation_n(rx_10b_code_violation[23]),
             .d_or_k_code(rx_d_or_k_code[23]),
 
             .pci_10b_data(rx_10b_data[239:230]),
             .parallel_symbol_valid(rx_valid_code[23]),
             .current_rd(rx_current_rd[23]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[23]),
             .fifo_almost_full(deskew_fifo_full[23]),
	     .fifo_empty(deskew_fifo_empty[23]), 

	     .rx_valid_in(rx_valid_in[23]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[191:184]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[23]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[191:184]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[23]),
             .electrical_idle_detected(rx_eidle[23]),
             .idle_data_detected(rcvd_idle_data[23]),
             .skp_os_detected(rcvd_skp_os[23]),
             .idle_os_detected(rcvd_idle_os[23]),
             .fts_os_detected(rcvd_fts_os[23]),
             .ts1_detected(rcvd_ts1[23]),
             .ts2_detected(rcvd_ts2[23]),
             .lane_num_detected(rcvd_lane_num[23]),
             .link_num_detected(rcvd_link_num[23]),
             .link_ctrl_reset_detected(rcvd_reset[23]),
             .loopback_detected(rcvd_loopback[23]),
             .disable_detected(rcvd_disable[23]),
             .disable_scrambling_detected(rcvd_no_scramble[23]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[23])
             );

  // Lane 24
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    24,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE24_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[24] & pclk),
             .symbol_data_plus((int_rx_elecidle[24] & ~rx_valid_in[24]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[199:192]),
             .pci_10b_code_violation_n(rx_10b_code_violation[24]),
             .d_or_k_code(rx_d_or_k_code[24]),
 
             .pci_10b_data(rx_10b_data[249:240]),
             .parallel_symbol_valid(rx_valid_code[24]),
             .current_rd(rx_current_rd[24]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[24]),
             .fifo_almost_full(deskew_fifo_full[24]),
	     .fifo_empty(deskew_fifo_empty[24]), 

	     .rx_valid_in(rx_valid_in[24]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[199:192]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[24]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[199:192]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[24]),
             .electrical_idle_detected(rx_eidle[24]),
             .idle_data_detected(rcvd_idle_data[24]),
             .skp_os_detected(rcvd_skp_os[24]),
             .idle_os_detected(rcvd_idle_os[24]),
             .fts_os_detected(rcvd_fts_os[24]),
             .ts1_detected(rcvd_ts1[24]),
             .ts2_detected(rcvd_ts2[24]),
             .lane_num_detected(rcvd_lane_num[24]),
             .link_num_detected(rcvd_link_num[24]),
             .link_ctrl_reset_detected(rcvd_reset[24]),
             .loopback_detected(rcvd_loopback[24]),
             .disable_detected(rcvd_disable[24]),
             .disable_scrambling_detected(rcvd_no_scramble[24]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[24])
             );

  // Lane 25
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    25,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE25_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[25] & pclk),
             .symbol_data_plus((int_rx_elecidle[25] & ~rx_valid_in[25]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[207:200]),
             .pci_10b_code_violation_n(rx_10b_code_violation[25]),
             .d_or_k_code(rx_d_or_k_code[25]),
 
             .pci_10b_data(rx_10b_data[259:250]),
             .parallel_symbol_valid(rx_valid_code[25]),
             .current_rd(rx_current_rd[25]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[25]),
             .fifo_almost_full(deskew_fifo_full[25]),
	     .fifo_empty(deskew_fifo_empty[25]), 

	     .rx_valid_in(rx_valid_in[25]), // Specific to PIPE interface

             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[207:200]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[25]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[207:200]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[25]),
             .electrical_idle_detected(rx_eidle[25]),
             .idle_data_detected(rcvd_idle_data[25]),
             .skp_os_detected(rcvd_skp_os[25]),
             .idle_os_detected(rcvd_idle_os[25]),
             .fts_os_detected(rcvd_fts_os[25]),
             .ts1_detected(rcvd_ts1[25]),
             .ts2_detected(rcvd_ts2[25]),
             .lane_num_detected(rcvd_lane_num[25]),
             .link_num_detected(rcvd_link_num[25]),
             .link_ctrl_reset_detected(rcvd_reset[25]),
             .loopback_detected(rcvd_loopback[25]),
             .disable_detected(rcvd_disable[25]),
             .disable_scrambling_detected(rcvd_no_scramble[25]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[25])
             );

  // Lane 26
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    26,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE26_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[26] & pclk),
             .symbol_data_plus((int_rx_elecidle[26] & ~rx_valid_in[26]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[215:208]),
             .pci_10b_code_violation_n(rx_10b_code_violation[26]),
             .d_or_k_code(rx_d_or_k_code[26]),
 
             .pci_10b_data(rx_10b_data[269:260]),
             .parallel_symbol_valid(rx_valid_code[26]),
             .current_rd(rx_current_rd[26]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[26]),
             .fifo_almost_full(deskew_fifo_full[26]),
	     .fifo_empty(deskew_fifo_empty[26]), 

	     .rx_valid_in(rx_valid_in[26]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[215:208]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[26]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[215:208]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[26]),
             .electrical_idle_detected(rx_eidle[26]),
             .idle_data_detected(rcvd_idle_data[26]),
             .skp_os_detected(rcvd_skp_os[26]),
             .idle_os_detected(rcvd_idle_os[26]),
             .fts_os_detected(rcvd_fts_os[26]),
             .ts1_detected(rcvd_ts1[26]),
             .ts2_detected(rcvd_ts2[26]),
             .lane_num_detected(rcvd_lane_num[26]),
             .link_num_detected(rcvd_link_num[26]),
             .link_ctrl_reset_detected(rcvd_reset[26]),
             .loopback_detected(rcvd_loopback[26]),
             .disable_detected(rcvd_disable[26]),
             .disable_scrambling_detected(rcvd_no_scramble[26]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[26])
             );

  // Lane 27

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    27,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE27_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[27] & pclk),
             .symbol_data_plus((int_rx_elecidle[27] & ~rx_valid_in[27]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[223:216]),
             .pci_10b_code_violation_n(rx_10b_code_violation[27]),
             .d_or_k_code(rx_d_or_k_code[27]),
 
             .pci_10b_data(rx_10b_data[279:270]),
             .parallel_symbol_valid(rx_valid_code[27]),
             .current_rd(rx_current_rd[27]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[27]),
             .fifo_almost_full(deskew_fifo_full[27]),
	     .fifo_empty(deskew_fifo_empty[27]), 

	     .rx_valid_in(rx_valid_in[27]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[223:216]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[27]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[223:216]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[27]),
             .electrical_idle_detected(rx_eidle[27]),
             .idle_data_detected(rcvd_idle_data[27]),
             .skp_os_detected(rcvd_skp_os[27]),
             .idle_os_detected(rcvd_idle_os[27]),
             .fts_os_detected(rcvd_fts_os[27]),
             .ts1_detected(rcvd_ts1[27]),
             .ts2_detected(rcvd_ts2[27]),
             .lane_num_detected(rcvd_lane_num[27]),
             .link_num_detected(rcvd_link_num[27]),
             .link_ctrl_reset_detected(rcvd_reset[27]),
             .loopback_detected(rcvd_loopback[27]),
             .disable_detected(rcvd_disable[27]),
             .disable_scrambling_detected(rcvd_no_scramble[27]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[27])
             );

  // Lane 28
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    28,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE28_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[28] & pclk),
             .symbol_data_plus((int_rx_elecidle[28] & ~rx_valid_in[28]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[231:224]),
             .pci_10b_code_violation_n(rx_10b_code_violation[28]),
             .d_or_k_code(rx_d_or_k_code[28]),
 
             .pci_10b_data(rx_10b_data[289:280]),
             .parallel_symbol_valid(rx_valid_code[28]),
             .current_rd(rx_current_rd[28]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[28]),
             .fifo_almost_full(deskew_fifo_full[28]),
	     .fifo_empty(deskew_fifo_empty[28]), 

	     .rx_valid_in(rx_valid_in[28]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
             .link_number(),
	     .n_fts(rx_n_fts[231:224]),
             .lane_0_detected(rx_lane_0_detected[28]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[231:224]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[28]),
             .electrical_idle_detected(rx_eidle[28]),
             .idle_data_detected(rcvd_idle_data[28]),
             .skp_os_detected(rcvd_skp_os[28]),
             .idle_os_detected(rcvd_idle_os[28]),
             .fts_os_detected(rcvd_fts_os[28]),
             .ts1_detected(rcvd_ts1[28]),
             .ts2_detected(rcvd_ts2[28]),
             .lane_num_detected(rcvd_lane_num[28]),
             .link_num_detected(rcvd_link_num[28]),
             .link_ctrl_reset_detected(rcvd_reset[28]),
             .loopback_detected(rcvd_loopback[28]),
             .disable_detected(rcvd_disable[28]),
             .disable_scrambling_detected(rcvd_no_scramble[28]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[28])
             );
  // Lane 29
 
  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    29,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE29_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[29] & pclk),
             .symbol_data_plus((int_rx_elecidle[29] & ~rx_valid_in[29]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[239:232]),
             .pci_10b_code_violation_n(rx_10b_code_violation[29]),
             .d_or_k_code(rx_d_or_k_code[29]),
 
             .pci_10b_data(rx_10b_data[299:290]),
             .parallel_symbol_valid(rx_valid_code[29]),
             .current_rd(rx_current_rd[29]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[29]),
             .fifo_almost_full(deskew_fifo_full[29]),
	     .fifo_empty(deskew_fifo_empty[29]), 

	     .rx_valid_in(rx_valid_in[29]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[239:232]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[29]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[239:232]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[29]),
             .electrical_idle_detected(rx_eidle[29]),
             .idle_data_detected(rcvd_idle_data[29]),
             .skp_os_detected(rcvd_skp_os[29]),
             .idle_os_detected(rcvd_idle_os[29]),
             .fts_os_detected(rcvd_fts_os[29]),
             .ts1_detected(rcvd_ts1[29]),
             .ts2_detected(rcvd_ts2[29]),
             .lane_num_detected(rcvd_lane_num[29]),
             .link_num_detected(rcvd_link_num[29]),
             .link_ctrl_reset_detected(rcvd_reset[29]),
             .loopback_detected(rcvd_loopback[29]),
             .disable_detected(rcvd_disable[29]),
             .disable_scrambling_detected(rcvd_no_scramble[29]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[29])
             );

  // Lane 30

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    30,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE30_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[30] & pclk),
             .symbol_data_plus((int_rx_elecidle[30] & ~rx_valid_in[30]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[247:240]),
             .pci_10b_code_violation_n(rx_10b_code_violation[30]),
             .d_or_k_code(rx_d_or_k_code[30]),
 
             .pci_10b_data(rx_10b_data[309:300]),
             .parallel_symbol_valid(rx_valid_code[30]),
             .current_rd(rx_current_rd[30]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[30]),
             .fifo_almost_full(deskew_fifo_full[30]),
	     .fifo_empty(deskew_fifo_empty[30]),

	     .rx_valid_in(rx_valid_in[30]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[247:240]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[30]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[247:240]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[30]),
             .electrical_idle_detected(rx_eidle[30]),
             .idle_data_detected(rcvd_idle_data[30]),
             .skp_os_detected(rcvd_skp_os[30]),
             .idle_os_detected(rcvd_idle_os[30]),
             .fts_os_detected(rcvd_fts_os[30]),
             .ts1_detected(rcvd_ts1[30]),
             .ts2_detected(rcvd_ts2[30]),
             .lane_num_detected(rcvd_lane_num[30]),
             .link_num_detected(rcvd_link_num[30]),
             .link_ctrl_reset_detected(rcvd_reset[30]),
             .loopback_detected(rcvd_loopback[30]),
             .disable_detected(rcvd_disable[30]),
             .disable_scrambling_detected(rcvd_no_scramble[30]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[30])
             );

  // Lane 31

  qvl_pci_express_rx_lane_receiver #(
    /* Constraints_Mode */     MAC_LAYER_CONSTRAINT,
    /* INTERFACE_TYPE    */    1,
    /* TX_INTERFACE      */    0,
    /* PHY_LANE_NUMBER   */    31,
    /* ZI_DOUBLE_DATA_RATE     */ ZI_DOUBLE_DATA_RATE,
    /* ZI_ELECTRICAL_IDLE_VAL */  ZI_ELECTRICAL_IDLE_VAL,
    /* MAX_LINK_WIDTH */         MAX_LINK_WIDTH,
    /* DESKEW_SUPPORT */       DESKEW_SUPPORT,
    /* PIPE_MONITOR */         1)
    LANE31_RX (
             .reset(reset),
             .areset(areset),
 
             .clk(rx_clk_gate_lane[31] & pclk),
             .symbol_data_plus((int_rx_elecidle[31] & ~rx_valid_in[31]) ? 10'b0 : 10'b1),
             .symbol_data_minus(10'b0),
 
             .level_select(rx_level_select),
	     .phy_layer_checks_disable(phy_layer_checks_disable),
 
             .pci_8b_data(rx_8b_decoded_data[255:248]),
             .pci_10b_code_violation_n(rx_10b_code_violation[31]),
             .d_or_k_code(rx_d_or_k_code[31]),
 
             .pci_10b_data(rx_10b_data[319:310]),
             .parallel_symbol_valid(rx_valid_code[31]),
             .current_rd(rx_current_rd[31]),

             .deskew_fifo_read(deskew_fifo_read),
             .deskew_fifo_flush(deskew_fifo_flush),
             .com_read_from_fifo(com_read_from_fifo[31]),
             .fifo_almost_full(deskew_fifo_full[31]),
	     .fifo_empty(deskew_fifo_empty[31]), 

	     .rx_valid_in(rx_valid_in[31]), // Specific to PIPE interface
 
             .descramble_enable(!disable_descramble),
	     .lanes_with_lane_num(int_rcvd_lane_num),
	     .n_fts(rx_n_fts[255:248]),
             .link_number(),
             .lane_0_detected(rx_lane_0_detected[31]),
             .dllp_tlp_on_link(rcving_dllp_tlp),
             .descrambled_data(rx_descrambled_data[255:248]),
	     .deskew_d_or_k_code(rx_deskew_d_or_k_code[31]),
             .electrical_idle_detected(rx_eidle[31]),
             .idle_data_detected(rcvd_idle_data[31]),
             .skp_os_detected(rcvd_skp_os[31]),
             .idle_os_detected(rcvd_idle_os[31]),
             .fts_os_detected(rcvd_fts_os[31]),
             .ts1_detected(rcvd_ts1[31]),
             .ts2_detected(rcvd_ts2[31]),
             .lane_num_detected(rcvd_lane_num[31]),
             .link_num_detected(rcvd_link_num[31]),
             .link_ctrl_reset_detected(rcvd_reset[31]),
             .loopback_detected(rcvd_loopback[31]),
             .disable_detected(rcvd_disable[31]),
             .disable_scrambling_detected(rcvd_no_scramble[31]),
	     .compliance_check_enable(compliance_check_enable),
             .compliance_pattern_detected(rcvd_comp_pattern[31])
             );

  //----------------------------------------------------------
  // Link training module instantiations
  //----------------------------------------------------------

  assign int_tx_eidle = tx_eidle;
  assign int_tx_10b_code_violation = tx_10b_code_violation;
  assign int_xmtd_skp_os = xmtd_skp_os;
  assign int_xmtd_idle_os = xmtd_idle_os;
  assign int_xmtd_fts_os = xmtd_fts_os;
  assign int_xmtd_ts1 = xmtd_ts1;
  assign int_xmtd_ts2 = xmtd_ts2;
  assign int_xmtd_lane_num = xmtd_lane_num;
  assign int_xmtd_link_num = xmtd_link_num;
  assign int_xmtd_reset = xmtd_reset;
  assign int_xmtd_loopback = xmtd_loopback;
  assign int_xmtd_disable = xmtd_disable;
  assign int_xmtd_no_scramble = xmtd_no_scramble;
  assign int_xmtd_idle_data = xmtd_idle_data;
  assign int_xmtd_comp_pattern = xmtd_comp_pattern;

  assign int_rx_eidle = rx_eidle; 
  assign int_rx_10b_code_violation = rx_10b_code_violation; 
  assign int_rcvd_skp_os = rcvd_skp_os; 
  assign int_rcvd_idle_os = rcvd_idle_os; 
  assign int_rcvd_fts_os = rcvd_fts_os;
  assign int_rcvd_ts1 = rcvd_ts1; 
  assign int_rcvd_ts2 = rcvd_ts2; 
  assign int_rcvd_lane_num = rcvd_lane_num;    
  assign int_rcvd_link_num = rcvd_link_num;
  assign int_rcvd_reset = rcvd_reset; 
  assign int_rcvd_loopback = rcvd_loopback; 
  assign int_rcvd_disable = rcvd_disable; 
  assign int_rcvd_no_scramble = rcvd_no_scramble;
  assign int_rcvd_idle_data = rcvd_idle_data; 
  assign int_rcvd_comp_pattern = rcvd_comp_pattern;

  // tx link training module instantiation

  qvl_pci_express_link_training_monitor #(
    /* Constraints_Mode  */          Constraints_Mode,
    /* LINK_WIDTH           */       MAX_LINK_WIDTH,
    /* PCI_EXPRESS_DEVICE_TYPE */    PCI_EXPRESS_DEVICE_TYPE,
    /* ZI_DOUBLE_DATA_RATE      */      ZI_DOUBLE_DATA_RATE,
    /* MIN_TS1_COUNT */              MIN_TS1_COUNT)
              LINK_TRAIN(
			   .reset(reset),
                           .areset(areset),
                           .clk(pclk),
			   .rx_clk(pclk),
			   .level_select(tx_level_select),
			   .rx_level_select(rx_level_select),
			   .skip_link_training(skip_link_training),
			   .phy_layer_checks_disable(phy_layer_checks_disable),
			   .extended_fts_sequence(extended_sync_enable),
			   .tx_valid(int_tx_valid),
                           .tx_eidle(int_tx_eidle), 
			   .tx_code_violation(int_tx_10b_code_violation),
                           .xmtd_skip_ordered_set(int_xmtd_skp_os), 
                           .xmtd_idle_os(int_xmtd_idle_os), 
                           .xmtd_fts_os(int_xmtd_fts_os), 
                           .xmtd_ts1(int_xmtd_ts1),
                           .xmtd_ts2(int_xmtd_ts2), 
                           .xmtd_lane_num(int_xmtd_lane_num),
                           .xmtd_link_num(int_xmtd_link_num),
                           .xmtd_reset(int_xmtd_reset),
			   .xmtd_loopback(int_xmtd_loopback),
			   .xmtd_disable(int_xmtd_disable),
			   .xmtd_no_scramble(int_xmtd_no_scramble),
			   .xmtd_idle_data(int_xmtd_idle_data),
			   .xmtd_compliance_pattern(int_xmtd_comp_pattern),
			   .tx_dllp_tlp_on_link(xmting_dllp_tlp),

                           // Input ports

                           .int_rx_valid(int_rx_valid),
                           .int_rx_eidle(int_rx_eidle),
			   .int_rx_10b_code_violation(int_rx_10b_code_violation),
			   .int_rcvd_skip_ordered_set(int_rcvd_skp_os),
			   .int_rcvd_idle_os(int_rcvd_idle_os),
			   .int_rcvd_fts_os(int_rcvd_fts_os),
			   .int_rcvd_ts1(int_rcvd_ts1),
			   .int_rcvd_ts2(int_rcvd_ts2),
			   .int_rcvd_lane_num(int_rcvd_lane_num),
                           .int_rcvd_link_num(int_rcvd_link_num),
			   .int_rcvd_reset(int_rcvd_reset),
			   .int_rcvd_loopback(int_rcvd_loopback),
			   .int_rcvd_disable(int_rcvd_disable),
			   .int_rcvd_no_scramble(int_rcvd_no_scramble),
			   .int_rcvd_idle_data(int_rcvd_idle_data),
			   .rx_dllp_tlp_on_link(rcving_dllp_tlp),

	                   .tx_n_fts_field_not_same(tx_n_fts_field_not_same),
                           .rx_n_fts_field_not_same(rx_n_fts_field_not_same),


                           .rx_n_fts(rx_n_fts[7:0]),

                       .xmtd_pm_enter_command_flag(xmtd_pm_enter_command_flag),
                       .rcvd_pm_enter_command_flag(rcvd_pm_enter_command_flag),

			   .L0s_entry_supported(L0s_entry_supported),

			   // Output ports

                           .disable_descramble(int_disable_descramble),
			   .link_width_negotiated(link_width_negotiated),
                           .tx_link_width(link_width),
			   .link_width_bitmap(link_width_bitmap),
                           .tx_phy_status(phy_status),
			   .enable_compliance_pattern_check(compliance_check_enable),
                           .deskew_control(deskew_control)
                           );

  //-----------------------------------------------------------------
  // TX and RX monitor module instantiations
  //-----------------------------------------------------------------

  assign int_tx_valid = (tx_valid_code & link_width_bitmap);
  assign int_tx_d_or_k_code = (DESKEW_SUPPORT) ? tx_deskew_d_or_k_code : tx_d_or_k_code;
 
  assign int_rx_valid = (rx_valid_code & link_width_bitmap);
  assign int_rx_d_or_k_code = (DESKEW_SUPPORT) ? rx_deskew_d_or_k_code : rx_d_or_k_code;

  assign eidle_detected_tx = ((phy_status === 1'b0 &&
		   |(int_tx_eidle & active_lanes_bitmap) === 1'b1) ||
		   (phy_status === 1'b1 &&
		   |(int_tx_eidle & link_width_bitmap) === 1'b1));

  assign eidle_detected_rx = ((phy_status === 1'b0 &&
                   |(int_rx_eidle & active_lanes_bitmap) === 1'b1) ||
                   (phy_status === 1'b1 &&
                   |(int_rx_eidle & link_width_bitmap) === 1'b1)); 

  // tx monitor module instantiations

  qvl_pci_express_phy_monitor #(
    /* Constraints_Mode */         PHY_LAYER_CONSTRAINT,
    /* MAX_LINK_WIDTH */           MAX_LINK_WIDTH,
    /* ZI_DOUBLE_DATA_RATE */      ZI_DOUBLE_DATA_RATE,
    /* PCI_EXPRESS_DEVICE_TYPE */  PCI_EXPRESS_DEVICE_TYPE,
    /* TX_INTERFACE */             1,
    /* INTERFACE_TYPE */           1)
              TX_PHY_MON (
                         .reset(reset),
		         .areset(areset),
			 .clk(pclk),
                         .level_select(tx_level_select),
			 .phy_layer_checks_disable(phy_layer_checks_disable),
			 .descrambled_data(int_tx_descrambled_data),
                         .d_or_k_code(int_tx_d_or_k_code),
			 .valid(int_tx_valid),
			 .data_10b_code_violation_n(int_tx_10b_code_violation),
			 .link_width(link_width),
			 .phy_status(phy_status),
			 .dll_status(dll_status),
                         .skp_os_detected(|int_xmtd_skp_os),
			 .fts_os_detected(|int_xmtd_fts_os),
                         .idle_data_detected(|int_xmtd_idle_data),
			 .idle_os_detected(|int_xmtd_idle_os),
                         .electrical_idle_detected(eidle_detected_tx),
			 .no_check_edb(1'b0),  // Not set for Tx 
			 .xmting_dllp_tlp(xmting_dllp_tlp),
			 .tlp_xmtd(tlp_xmtd_tx),
			 .tlp_count(tlp_count_tx),
			 .dllp_xmtd(dllp_xmtd_tx),
			 .dllp_count(dllp_count_tx),
			 .nullified_tlp_xmtd(nullified_tlp_xmtd_tx),
			 .inc_sdp_stp(tx_inc_sdp_stp),
			 .inc_pad(tx_inc_pad),
			 .inc_end(tx_inc_end),
			 .inc_stp_on_non_zero_lane(tx_inc_stp_on_non_zero_lane)
		         );

  // rx monitor module instantiations

  qvl_pci_express_phy_monitor #(
    /* Constraints_Mode */         MAC_LAYER_CONSTRAINT,
    /* LINK_WIDTH */               MAX_LINK_WIDTH,
    /* ZI_DOUBLE_DATA_RATE */      ZI_DOUBLE_DATA_RATE,
    /* PCI_EXPRESS_DEVICE_TYPE */  PCI_EXPRESS_DEVICE_TYPE,
    /* TX_INTERFACE */             0,
    /* INTERFACE_TYPE */           1)
             RX_PHY_MON (
                         .reset(reset),
			 .areset(areset),
			 .clk(pclk),
                         .level_select(rx_level_select),
			 .phy_layer_checks_disable(phy_layer_checks_disable),
			 .descrambled_data(int_rx_descrambled_data),
                         .d_or_k_code(int_rx_d_or_k_code),
			 .valid(int_rx_valid),
			 .data_10b_code_violation_n(int_rx_10b_code_violation),
                         .link_width(link_width),
                         .phy_status(phy_status),
			 .dll_status(dll_status),
                         .skp_os_detected(|int_rcvd_skp_os),
			 .fts_os_detected(|int_rcvd_fts_os),
                         .idle_data_detected(|int_rcvd_idle_data),
		         .idle_os_detected(|int_rcvd_idle_os),
	                 .electrical_idle_detected(eidle_detected_rx),
			 .no_check_edb(no_check_for_edb_without_stp), //Only for RX
			 .xmting_dllp_tlp(rcving_dllp_tlp),
			 .tlp_xmtd(tlp_xmtd_rx),
			 .tlp_count(tlp_count_rx),
			 .dllp_xmtd(dllp_xmtd_rx),
			 .dllp_count(dllp_count_rx),
			 .nullified_tlp_xmtd(nullified_tlp_xmtd_rx),
			 .inc_sdp_stp(rx_inc_sdp_stp),
			 .inc_pad(rx_inc_pad),
			 .inc_end(rx_inc_end),
			 .inc_stp_on_non_zero_lane(rx_inc_stp_on_non_zero_lane)
			 );

  //-----------------------------------------------------------------
  // Transaction layer blocks instantiation 
  //-----------------------------------------------------------------
 
  qvl_pci_express_transaction_layer_pkt_monitor #(
  /* Constraints_Mode */                PHY_LAYER_CONSTRAINT,
  /* PCI_EXPRESS_DEVICE_TYPE */         PCI_EXPRESS_DEVICE_TYPE,
  /* MAX_LINK_WIDTH */                  MAX_LINK_WIDTH,       
  /* TX_INTERFACE */                             1,
  /* ZI_DOUBLE_DATA_RATE */                ZI_DOUBLE_DATA_RATE,
  /* RESERVED_FIELD_CHECK_ENABLE */     RESERVED_FIELD_CHECK_ENABLE,
  /* VENDOR_SPECIFIC_ENCODING_ENABLE */ VENDOR_SPECIFIC_ENCODING_ENABLE,
  /* HOT_PLUG_MESSAGE_ENABLE */         HOT_PLUG_MESSAGE_ENABLE)
 
  TRAN_TX(
          .reset(reset | eidle_detected_tx),
          .areset(areset),
          .level_select(tx_level_select),
          .clk(pclk),
	  .transaction_layer_checks_disable(transaction_layer_checks_disable),
          .descrambled_data(int_tx_descrambled_data),
          .data_d_or_k_code(int_tx_d_or_k_code),
          .data_10b_code_violation_n(int_tx_10b_code_violation),
          .valid_code(int_tx_valid),
          .link_width(link_width),
          .dll_status(dll_status),
          .extended_tag_field_enable(device_control_register[8]),
          .max_payload_size(device_control_register[7:5]),
	  .max_read_req_size(device_control_register[14:12]),
	  .tc_mapped_bitmap(tc_mapped_bitmap),
	  .no_check_edb (1'b0), // Not set for Tx 
          .tlp_packet_detected(tx_tlp_detected),
          .tlp_pkt1(tx_tlp_pkt1),
          .tlp_pkt2(tx_tlp_pkt2),
          .malformed_tlp_detected(tx_malformed_tlp),
	  .inc_tlps_with_digests(tx_tlps_with_digests),
	  .inc_tlps_with_ecrc(tx_tlps_with_ecrc),
          .pm_active_state_nak_detected(xmtd_pm_active_state_nak_tlp),
          .pm_pme_detected(xmtd_pm_pme_tlp),
          .pme_turn_off_detected(xmtd_pme_turn_off_tlp),
          .pme_to_ack_detected(xmtd_pme_to_ack_tlp)
         );

  qvl_pci_express_transaction_layer_pkt_monitor #(
  /* Constraints_Mode */               MAC_LAYER_CONSTRAINT,
  /* PCI_EXPRESS_DEVICE_TYPE */        PCI_EXPRESS_DEVICE_TYPE,
  /* MAXIMUM_LINK_WIDTH */             MAX_LINK_WIDTH,
  /* TX_INTERFACE */                             0,
  /* ZI_DOUBLE_DATA_RATE */               ZI_DOUBLE_DATA_RATE,
  /* RESERVED_FIELD_CHECK_ENABLE */    RESERVED_FIELD_CHECK_ENABLE,
  /* VENDOR_SPECIFIC_ENCODING_ENABLE */ VENDOR_SPECIFIC_ENCODING_ENABLE,
  /* HOT_PLUG_MESSAGE_ENABLE */         HOT_PLUG_MESSAGE_ENABLE)

  TRAN_RX(
          .reset(reset | eidle_detected_rx),
          .areset(areset),
          .level_select(rx_level_select),
          .clk(pclk),
	  .transaction_layer_checks_disable(transaction_layer_checks_disable),
          .descrambled_data(int_rx_descrambled_data),
          .data_d_or_k_code(int_rx_d_or_k_code),
          .data_10b_code_violation_n(int_rx_10b_code_violation),
          .valid_code(int_rx_valid),
          .link_width(link_width),
          .dll_status(dll_status),
          .extended_tag_field_enable(device_control_register[8]),
          .max_payload_size(device_control_register[7:5]),
	  .max_read_req_size(device_control_register[14:12]),
	  .tc_mapped_bitmap(tc_mapped_bitmap),
	  .no_check_edb (no_check_for_edb_without_stp),
          .tlp_packet_detected(rx_tlp_detected),
          .tlp_pkt1(rx_tlp_pkt1),
          .tlp_pkt2(rx_tlp_pkt2),
          .malformed_tlp_detected(rx_malformed_tlp),
	  .inc_tlps_with_digests(rx_tlps_with_digests), 
	  .inc_tlps_with_ecrc(rx_tlps_with_ecrc),
          .pm_active_state_nak_detected(rcvd_pm_active_state_nak_tlp), 
          .pm_pme_detected(rcvd_pm_pme_tlp), 
          .pme_turn_off_detected(rcvd_pme_turn_off_tlp),  
          .pme_to_ack_detected(rcvd_pme_to_ack_tlp) 
         );

  // Transaction monitor instantiation

  qvl_pci_express_transaction_monitor #(
    /* Constraints_Mode */         Constraints_Mode, 
    /* ZI_DOUBLE_DATA_RATE */         ZI_DOUBLE_DATA_RATE,
    /* MAX_REQUESTS_ADDR_WIDTH */  MAX_REQUESTS_ADDR_WIDTH)
 
  TRAN_MON(
           .reset(reset),
           .areset(areset),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .tx_clk(pclk),
           .rx_clk(pclk),
	   .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
 
           // DLL interface
 
           .dll_status(dll_status),
	   .phy_status(phy_status)
           );

  //-----------------------------------------------------------------
  // Statistics module instantiation
  //-----------------------------------------------------------------

  qvl_pci_express_statistics #(
  /* ZI_DOUBLE_DATA_RATE */        ZI_DOUBLE_DATA_RATE)

         TX_STATS(
         .reset(reset),
         .areset(areset),
         .clk(pclk),
         .phy_status(phy_status),
         .descrambled_data(tx_descrambled_data[7:0]),
         .d_or_k_code(tx_d_or_k_code[0]),
         .valid(tx_valid_code[0]),
         .inc_tlp(tlp_xmtd_tx),
	 .tlp_count(tlp_count_tx),
         .inc_dllp(dllp_xmtd_tx),
	 .dllp_count(dllp_count_tx),
         .inc_nullified_tlp(nullified_tlp_xmtd_tx),
         .inc_ts1_os(|int_xmtd_ts1),
         .inc_ts2_os(|int_xmtd_ts2),
         .inc_reset(|int_xmtd_reset),
         .inc_loopback(|int_xmtd_loopback),
         .inc_disable(|int_xmtd_disable),
         .inc_no_scramble(|int_xmtd_no_scramble),
         .inc_fts_os(|int_xmtd_fts_os),
         .inc_idle_os(|int_xmtd_idle_os),
         .inc_skp_os(|int_xmtd_skp_os),
         .link_width(link_width),
         .link_number(link_number_tx),
         .inc_pad(tx_inc_pad), 
         .inc_sdp_stp(tx_inc_sdp_stp),
	 .inc_end(tx_inc_end),
	 .inc_stp_on_non_zero_lane(tx_inc_stp_on_non_zero_lane),
         .inc_idle_data(|int_xmtd_idle_data),
         .level_select(tx_level_select),
         .tlp_packet_detected(tx_tlp_detected),
         .tlp_pkt1(tx_tlp_pkt1),
         .tlp_pkt2(tx_tlp_pkt2),
         .inc_tlps_with_digests(tx_tlps_with_digests),
         .inc_tlps_with_ecrc(tx_tlps_with_ecrc),
	 .inc_tlps_with_lcrc(xmtd_lcrc_error),
	 .inc_malformed_tlps(tx_malformed_tlp),
          // DLL Statistics
         .dllp_ack_detected(tx_dllp_ack_detected),
         .dllp_ack_ended(tx_dllp_ack_ended),
         .dllp_nak_detected(tx_dllp_nak_detected),
         .dllp_nak_ended(tx_dllp_nak_ended),
         .dllp_pm_enter_L1_detected(tx_dllp_pm_enter_L1_detected),
         .dllp_pm_enter_L1_ended(tx_dllp_pm_enter_L1_ended),
         .dllp_pm_enter_L23_detected(tx_dllp_pm_enter_L23_detected),
         .dllp_pm_enter_L23_ended(tx_dllp_pm_enter_L23_ended),
         .dllp_pm_active_req_L0s_detected(tx_dllp_pm_active_req_L0s_detected),
         .dllp_pm_active_req_L0s_ended(tx_dllp_pm_active_req_L0s_ended),
         .dllp_pm_active_req_L1_detected(tx_dllp_pm_active_req_L1_detected),
         .dllp_pm_active_req_L1_ended(tx_dllp_pm_active_req_L1_ended),
         .dllp_pm_request_ack_detected(tx_dllp_pm_request_ack_detected),
         .dllp_pm_request_ack_ended(tx_dllp_pm_request_ack_ended),
         .dllp_vendor_specific_detected(tx_dllp_vendor_specific_detected),
         .dllp_vendor_specific_ended(tx_dllp_vendor_specific_ended),
         .dllp_initfc1_p_detected(tx_dllp_initfc1_p_detected),
         .dllp_initfc1_p_ended(tx_dllp_initfc1_p_ended),
         .dllp_initfc1_np_detected(tx_dllp_initfc1_np_detected),
         .dllp_initfc1_np_ended(tx_dllp_initfc1_np_ended),
         .dllp_initfc1_cpl_detected(tx_dllp_initfc1_cpl_detected),
         .dllp_initfc1_cpl_ended(tx_dllp_initfc1_cpl_ended),
         .dllp_initfc2_p_detected(tx_dllp_initfc2_p_detected),
         .dllp_initfc2_p_ended(tx_dllp_initfc2_p_ended),
         .dllp_initfc2_np_detected(tx_dllp_initfc2_np_detected),
         .dllp_initfc2_np_ended(tx_dllp_initfc2_np_ended),
         .dllp_initfc2_cpl_detected(tx_dllp_initfc2_cpl_detected),
         .dllp_initfc2_cpl_ended(tx_dllp_initfc2_cpl_ended),
         .dllp_updatefc_p_detected(tx_dllp_updatefc_p_detected),
         .dllp_updatefc_p_ended(tx_dllp_updatefc_p_ended),
         .dllp_updatefc_np_detected(tx_dllp_updatefc_np_detected),
         .dllp_updatefc_np_ended(tx_dllp_updatefc_np_ended),
         .dllp_updatefc_cpl_detected(tx_dllp_updatefc_cpl_detected),
         .dllp_updatefc_cpl_ended(tx_dllp_updatefc_cpl_ended),
         .detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
         .ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
         .detected_retry_progress(tx_retry_progress[1]),
         .ended_retry_progress(tx_retry_progress[0]),
         .current_expected_tlp_seq_num(tx_current_expected_tlp_seq_num),
         .ack_nak_sequence_number_of_dllp(tx_ack_nak_sequence_number_of_dllp),
         .replay_timer(tx_replay_timer),
         .acknak_timer(tx_acknak_timer),
         .num_outstanding_tlps(tx_num_outstanding_tlps),
         .incr_detected_duplicate_tlp(1'b0),
         .incr_ended_duplicate_tlp(1'b0),
         .vc_tlp_detected(vc_tlp_transmitted)
               );
 
  qvl_pci_express_statistics #(
  /* ZI_DOUBLE_DATA_RATE */          ZI_DOUBLE_DATA_RATE)

         RX_STATS(
         .reset(reset),
         .areset(areset),
         .clk(pclk),
         .phy_status(phy_status),
         .descrambled_data(rx_descrambled_data[7:0]),
         .d_or_k_code(rx_d_or_k_code[0]),
         .valid(rx_valid_code[0]),
         .inc_tlp(tlp_xmtd_rx),
	 .tlp_count(tlp_count_rx),
         .inc_dllp(dllp_xmtd_rx),
	 .dllp_count(dllp_count_rx),
         .inc_nullified_tlp(nullified_tlp_xmtd_rx),
         .inc_ts1_os(|int_rcvd_ts1),
         .inc_ts2_os(|int_rcvd_ts2),
         .inc_reset(|int_rcvd_reset),
         .inc_loopback(|int_rcvd_loopback),
         .inc_disable(|int_rcvd_disable),
         .inc_no_scramble(|int_rcvd_no_scramble),
         .inc_fts_os(|int_rcvd_fts_os),
         .inc_idle_os(|int_rcvd_idle_os),
         .inc_skp_os(|int_rcvd_skp_os),
         .link_width(link_width),
         .link_number(link_number_rx),
         .inc_pad(rx_inc_pad),
         .inc_sdp_stp(rx_inc_sdp_stp),
	 .inc_end(rx_inc_end),    
         .inc_stp_on_non_zero_lane(rx_inc_stp_on_non_zero_lane),
         .inc_idle_data(|int_rcvd_idle_data),
         .level_select(rx_level_select),
         .tlp_packet_detected(rx_tlp_detected),
         .tlp_pkt1(rx_tlp_pkt1),
         .tlp_pkt2(rx_tlp_pkt2),
         .inc_tlps_with_digests(rx_tlps_with_digests),
         .inc_tlps_with_ecrc(rx_tlps_with_ecrc),
         .inc_tlps_with_lcrc(rcvd_lcrc_error),
         .inc_malformed_tlps(rx_malformed_tlp),
          // DLL Statistics
         .dllp_ack_detected(rx_dllp_ack_detected),
         .dllp_ack_ended(rx_dllp_ack_ended),
         .dllp_nak_detected(rx_dllp_nak_detected),
         .dllp_nak_ended(rx_dllp_nak_ended),
         .dllp_pm_enter_L1_detected(rx_dllp_pm_enter_L1_detected),
         .dllp_pm_enter_L1_ended(rx_dllp_pm_enter_L1_ended),
         .dllp_pm_enter_L23_detected(rx_dllp_pm_enter_L23_detected),
         .dllp_pm_enter_L23_ended(rx_dllp_pm_enter_L23_ended),
         .dllp_pm_active_req_L0s_detected(rx_dllp_pm_active_req_L0s_detected),
         .dllp_pm_active_req_L0s_ended(rx_dllp_pm_active_req_L0s_ended),
         .dllp_pm_active_req_L1_detected(rx_dllp_pm_active_req_L1_detected),
         .dllp_pm_active_req_L1_ended(rx_dllp_pm_active_req_L1_ended),
         .dllp_pm_request_ack_detected(rx_dllp_pm_request_ack_detected),
         .dllp_pm_request_ack_ended(rx_dllp_pm_request_ack_ended),
         .dllp_vendor_specific_detected(rx_dllp_vendor_specific_detected),
         .dllp_vendor_specific_ended(rx_dllp_vendor_specific_ended),
         .dllp_initfc1_p_detected(rx_dllp_initfc1_p_detected),
         .dllp_initfc1_p_ended(rx_dllp_initfc1_p_ended),
         .dllp_initfc1_np_detected(rx_dllp_initfc1_np_detected),
         .dllp_initfc1_np_ended(rx_dllp_initfc1_np_ended),
         .dllp_initfc1_cpl_detected(rx_dllp_initfc1_cpl_detected),
         .dllp_initfc1_cpl_ended(rx_dllp_initfc1_cpl_ended),
         .dllp_initfc2_p_detected(rx_dllp_initfc2_p_detected),
         .dllp_initfc2_p_ended(rx_dllp_initfc2_p_ended),
         .dllp_initfc2_np_detected(rx_dllp_initfc2_np_detected),
         .dllp_initfc2_np_ended(rx_dllp_initfc2_np_ended),
         .dllp_initfc2_cpl_detected(rx_dllp_initfc2_cpl_detected),
         .dllp_initfc2_cpl_ended(rx_dllp_initfc2_cpl_ended),
         .dllp_updatefc_p_detected(rx_dllp_updatefc_p_detected),
         .dllp_updatefc_p_ended(rx_dllp_updatefc_p_ended),
         .dllp_updatefc_np_detected(rx_dllp_updatefc_np_detected),
         .dllp_updatefc_np_ended(rx_dllp_updatefc_np_ended),
         .dllp_updatefc_cpl_detected(rx_dllp_updatefc_cpl_detected),
         .dllp_updatefc_cpl_ended(rx_dllp_updatefc_cpl_ended),
         .detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
         .ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
         .detected_retry_progress(rx_retry_progress[1]),
         .ended_retry_progress(rx_retry_progress[0]),
         .current_expected_tlp_seq_num(rx_current_expected_tlp_seq_num),
         .ack_nak_sequence_number_of_dllp(rx_ack_nak_sequence_number_of_dllp),
         .replay_timer(rx_replay_timer),
         .acknak_timer(rx_acknak_timer),
         .num_outstanding_tlps(rx_num_outstanding_tlps),
         .incr_detected_duplicate_tlp(rx_incr_detected_duplicate_tlp),
         .incr_ended_duplicate_tlp(rx_incr_ended_duplicate_tlp),
         .vc_tlp_detected(vc_tlp_received)
         ); 

  //-----------------------------------------------------------------
  // Data Link layer monitor instantiation.
  //-----------------------------------------------------------------

  wire fc_init1_done;
  wire fc_init2_done;

  qvl_pci_express_link_layer_monitor #(
  /* Constraints_Mode */                Constraints_Mode,
  /* NUMBER_OF_LANES  */                MAX_LINK_WIDTH,
  /* ZI_DOUBLE_DATA_RATE */             ZI_DOUBLE_DATA_RATE,
  /* RESERVED_FIELD_CHECK_ENABLE */     RESERVED_FIELD_CHECK_ENABLE,
  /* VENDOR_SPECIFIC_ENCODING_ENABLE */ VENDOR_SPECIFIC_ENCODING_ENABLE,
  /* OVERRIDE_TIMER_VALUE */            OVERRIDE_TIMER_VALUE,
  /* REPLAY_TIMER_VALUE */              REPLAY_TIMER_VALUE,
  /* ACKNAK_TIMER_VALUE */              ACKNAK_TIMER_VALUE,
  /* DEVICE_TYPE */                     PCI_EXPRESS_DEVICE_TYPE,
  /* MAC_LAYER_SIDE */                  MAC_LAYER_SIDE)
          LINK_LAYER_MONITOR(
         .areset(areset),
         .reset(reset),
         .phy_status(phy_status),
         .link_layer_checks_disable(link_layer_checks_disable),
         .tx_10b_code_violation(!(&(int_tx_10b_code_violation | ~(link_width_bitmap)))),
	 .tx_link_clk(pclk),
         .tx_level_select(tx_level_select),
         .tx_descrambled_data(int_tx_descrambled_data),
         .tx_d_or_k_code(int_tx_d_or_k_code),
         .tx_valid_code(int_tx_valid),
         .rx_10b_code_violation(!(&(int_rx_10b_code_violation | ~(link_width_bitmap)))),
	 .rx_link_clk(pclk),
         .rx_level_select(rx_level_select),
         .rx_descrambled_data(int_rx_descrambled_data),
         .rx_d_or_k_code(int_rx_d_or_k_code),
         .rx_valid_code(int_rx_valid),
         .max_payload_size(device_control_register[7:5]),
	 .maximum_max_payload_size(device_capabilities_register[2:0]),
	 .max_read_req_size(device_control_register[14:12]),
         .link_operating_width(link_width),
         .link_up(dll_status),
         .tx_replay_timer_elapsed(),
         .tx_replay_num_elapsed(),
         // P,NP,Cpl DLL Type
         .tx_detected_lcrc_error(xmtd_lcrc_error[1]),
	 .tx_ended_lcrc_error(xmtd_lcrc_error[0]),
	 .tx_detected_retry_progress(tx_retry_progress[1]),
	 .tx_ended_retry_progress(tx_retry_progress[0]),
	 .rx_replay_timer_elapsed(),
	 .rx_replay_num_elapsed(),
         // P,NP,Cpl DLL Type
         .rx_detected_lcrc_error(rcvd_lcrc_error[1]),
         .rx_ended_lcrc_error(rcvd_lcrc_error[0]),
         .rx_detected_retry_progress(rx_retry_progress[1]),
	 .rx_ended_retry_progress(rx_retry_progress[0]),
         // Statistics
         .tx_dllp_ack_detected(tx_dllp_ack_detected),
         .tx_dllp_ack_ended(tx_dllp_ack_ended),
         .tx_dllp_nak_detected(tx_dllp_nak_detected),
         .tx_dllp_nak_ended(tx_dllp_nak_ended),
         .tx_dllp_pm_enter_L1_detected(tx_dllp_pm_enter_L1_detected),
         .tx_dllp_pm_enter_L1_ended(tx_dllp_pm_enter_L1_ended),
         .tx_dllp_pm_enter_L23_detected(tx_dllp_pm_enter_L23_detected),
         .tx_dllp_pm_enter_L23_ended(tx_dllp_pm_enter_L23_ended),
       .tx_dllp_pm_active_req_L0s_detected(tx_dllp_pm_active_req_L0s_detected),
         .tx_dllp_pm_active_req_L0s_ended(tx_dllp_pm_active_req_L0s_ended),
         .tx_dllp_pm_active_req_L1_detected(tx_dllp_pm_active_req_L1_detected),
         .tx_dllp_pm_active_req_L1_ended(tx_dllp_pm_active_req_L1_ended),
         .tx_dllp_pm_request_ack_detected(tx_dllp_pm_request_ack_detected),
         .tx_dllp_pm_request_ack_ended(tx_dllp_pm_request_ack_ended),
         .tx_dllp_vendor_specific_detected(tx_dllp_vendor_specific_detected),
         .tx_dllp_vendor_specific_ended(tx_dllp_vendor_specific_ended),
         .tx_dllp_initfc1_p_detected(tx_dllp_initfc1_p_detected),
         .tx_dllp_initfc1_p_ended(tx_dllp_initfc1_p_ended),
         .tx_dllp_initfc1_np_detected(tx_dllp_initfc1_np_detected),
         .tx_dllp_initfc1_np_ended(tx_dllp_initfc1_np_ended),
         .tx_dllp_initfc1_cpl_detected(tx_dllp_initfc1_cpl_detected),
         .tx_dllp_initfc1_cpl_ended(tx_dllp_initfc1_cpl_ended),
         .tx_dllp_initfc2_p_detected(tx_dllp_initfc2_p_detected),
         .tx_dllp_initfc2_p_ended(tx_dllp_initfc2_p_ended),
         .tx_dllp_initfc2_np_detected(tx_dllp_initfc2_np_detected),
         .tx_dllp_initfc2_np_ended(tx_dllp_initfc2_np_ended),
         .tx_dllp_initfc2_cpl_detected(tx_dllp_initfc2_cpl_detected),
         .tx_dllp_initfc2_cpl_ended(tx_dllp_initfc2_cpl_ended),
         .tx_dllp_updatefc_p_detected(tx_dllp_updatefc_p_detected),
         .tx_dllp_updatefc_p_ended(tx_dllp_updatefc_p_ended),
         .tx_dllp_updatefc_np_detected(tx_dllp_updatefc_np_detected),
         .tx_dllp_updatefc_np_ended(tx_dllp_updatefc_np_ended),
         .tx_dllp_updatefc_cpl_detected(tx_dllp_updatefc_cpl_detected),
         .tx_dllp_updatefc_cpl_ended(tx_dllp_updatefc_cpl_ended),
         .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
	 .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
         .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
	 .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
         .tx_next_tlp_seq_num(tx_current_expected_tlp_seq_num),
       .tx_ack_nak_sequence_number_of_dllp(tx_ack_nak_sequence_number_of_dllp),
         .tx_replay_timer(tx_replay_timer),
         .tx_acknak_timer(tx_acknak_timer),
         .tx_num_outstanding_tlps(tx_num_outstanding_tlps),
         .tx_incr_detected_duplicate_tlp(tx_incr_detected_duplicate_tlp),
         .tx_incr_ended_duplicate_tlp(tx_incr_ended_duplicate_tlp),
         .vc_tlp_transmitted(vc_tlp_transmitted),
         .rx_dllp_ack_detected(rx_dllp_ack_detected),
         .rx_dllp_ack_ended(rx_dllp_ack_ended),
         .rx_dllp_nak_detected(rx_dllp_nak_detected),
         .rx_dllp_nak_ended(rx_dllp_nak_ended),
         .rx_dllp_pm_enter_L1_detected(rx_dllp_pm_enter_L1_detected),
         .rx_dllp_pm_enter_L1_ended(rx_dllp_pm_enter_L1_ended),
         .rx_dllp_pm_enter_L23_detected(rx_dllp_pm_enter_L23_detected),
         .rx_dllp_pm_enter_L23_ended(rx_dllp_pm_enter_L23_ended),
       .rx_dllp_pm_active_req_L0s_detected(rx_dllp_pm_active_req_L0s_detected),
       .rx_dllp_pm_active_req_L0s_ended(rx_dllp_pm_active_req_L0s_ended),
         .rx_dllp_pm_active_req_L1_detected(rx_dllp_pm_active_req_L1_detected),
         .rx_dllp_pm_active_req_L1_ended(rx_dllp_pm_active_req_L1_ended),
         .rx_dllp_pm_request_ack_detected(rx_dllp_pm_request_ack_detected),
         .rx_dllp_pm_request_ack_ended(rx_dllp_pm_request_ack_ended),
         .rx_dllp_vendor_specific_detected(rx_dllp_vendor_specific_detected),
         .rx_dllp_vendor_specific_ended(rx_dllp_vendor_specific_ended),
         .rx_dllp_initfc1_p_detected(rx_dllp_initfc1_p_detected),
         .rx_dllp_initfc1_p_ended(rx_dllp_initfc1_p_ended),
         .rx_dllp_initfc1_np_detected(rx_dllp_initfc1_np_detected),
         .rx_dllp_initfc1_np_ended(rx_dllp_initfc1_np_ended),
         .rx_dllp_initfc1_cpl_detected(rx_dllp_initfc1_cpl_detected),
         .rx_dllp_initfc1_cpl_ended(rx_dllp_initfc1_cpl_ended),
         .rx_dllp_initfc2_p_detected(rx_dllp_initfc2_p_detected),
         .rx_dllp_initfc2_p_ended(rx_dllp_initfc2_p_ended),
         .rx_dllp_initfc2_np_detected(rx_dllp_initfc2_np_detected),
         .rx_dllp_initfc2_np_ended(rx_dllp_initfc2_np_ended),
         .rx_dllp_initfc2_cpl_detected(rx_dllp_initfc2_cpl_detected),
         .rx_dllp_initfc2_cpl_ended(rx_dllp_initfc2_cpl_ended),
         .rx_dllp_updatefc_p_detected(rx_dllp_updatefc_p_detected),
         .rx_dllp_updatefc_p_ended(rx_dllp_updatefc_p_ended),
         .rx_dllp_updatefc_np_detected(rx_dllp_updatefc_np_detected),
         .rx_dllp_updatefc_np_ended(rx_dllp_updatefc_np_ended),
         .rx_dllp_updatefc_cpl_detected(rx_dllp_updatefc_cpl_detected),
         .rx_dllp_updatefc_cpl_ended(rx_dllp_updatefc_cpl_ended),
         .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
	 .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
         .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
	 .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
         .rx_next_tlp_seq_num(rx_current_expected_tlp_seq_num),
       .rx_ack_nak_sequence_number_of_dllp(rx_ack_nak_sequence_number_of_dllp),
         .rx_replay_timer(rx_replay_timer),
         .rx_acknak_timer(rx_acknak_timer),
         .rx_num_outstanding_tlps(rx_num_outstanding_tlps),
         .rx_incr_detected_duplicate_tlp(rx_incr_detected_duplicate_tlp),
         .rx_incr_ended_duplicate_tlp(rx_incr_ended_duplicate_tlp),
         .vc_tlp_received(vc_tlp_received),

	 .extended_sync_enable(extended_sync_enable),
	 .L0s_entry_supported(L0s_entry_supported),
	 .tx_n_fts(tx_n_fts[7:0]),
	 .rx_n_fts(tx_n_fts[7:0]),
	 .fc_init1_done(fc_init1_done),
	 .fc_init2_done(fc_init2_done)
         );

  //--------------------------------------------------------------
  // Flow control module instantiation for VC0
  //--------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            0,
  /* VC_ID_STRING */                     "0.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC0_FLOW_CTRL (.reset(reset),
      	   .areset(areset),
	   .tx_clk(pclk),
	   .rx_clk(pclk),
	   .tx_level_select(tx_level_select),
	   .rx_level_select(rx_level_select),
	   .transaction_layer_checks_disable(transaction_layer_checks_disable),
	   .link_layer_checks_disable(link_layer_checks_disable),
	   .enable_vc_id(enable_vc_id_real[0]),
	   .tc_mapped_to_vc_id(tc_mapped_to_vc_id_0_real),
	   .xmtd_tlp(tx_tlp_detected),
	   .xmtd_tlp_packet1(tx_tlp_pkt1),
	   .xmtd_tlp_packet2(tx_tlp_pkt2),
	   .xmtd_malformed_tlp(tx_malformed_tlp),
	   .tx_retry_progress(tx_retry_progress),
	   .xmtd_lcrc_error(xmtd_lcrc_error),
	   .rcvd_tlp(rx_tlp_detected),
	   .rcvd_tlp_packet1(rx_tlp_pkt1),
	   .rcvd_tlp_packet2(rx_tlp_pkt2),
	   .rcvd_malformed_tlp(rx_malformed_tlp),
	   .rx_retry_progress(rx_retry_progress),
	   .rcvd_lcrc_error(rcvd_lcrc_error),
	   .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
	   .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
	   .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
	   .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
	   .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
	   .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
	   .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
	   .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
	   .tx_valid_code(|int_tx_valid),
	   .rx_valid_code(|int_rx_valid),
	   .data_link_up(dll_status),
	   .phy_status(phy_status),
	   .fc_init1_done(fc_init1_done),
	   .fc_init2_done(fc_init2_done)
	   );

  //---------------------------------------------------------------
  // Flow control module instantiation for VC1
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            1,
  /* VC_ID_STRING */                     "1.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC1_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[1]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_1_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           ); 

  //---------------------------------------------------------------
  // Flow control module instantiation for VC2
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #( 
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            2,
  /* VC_ID_STRING */                     "2.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC2_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[2]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_2_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           );

  //---------------------------------------------------------------
  // Flow control module instantiation for VC3
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            3,
  /* VC_ID_STRING */                     "3.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                    MAC_LAYER_SIDE)
     VC3_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[3]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_3_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           );

  //---------------------------------------------------------------
  // Flow control module instantiation for VC4
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            4,
  /* VC_ID_STRING */                     "4.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC4_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[4]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_4_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           );

  //--------------------------------------------------------------- 
  // Flow control module instantiation for VC5
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            5,
  /* VC_ID_STRING */                     "5.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC5_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[5]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_5_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           );

  //--------------------------------------------------------------- 
  // Flow control module instantiation for VC6
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            6,
  /* VC_ID_STRING */                     "6.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC6_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[6]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_6_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           );

  //--------------------------------------------------------------- 
  // Flow control module instantiation for VC7
  //---------------------------------------------------------------

  qvl_pci_express_flow_control #(
  /* Constraints_Mode */                 Constraints_Mode,
  /* VC_ID */                            7,
  /* VC_ID_STRING */                     "7.",
  /* ZI_DOUBLE_DATA_RATE */              ZI_DOUBLE_DATA_RATE,
  /* MAC_LAYER_SIDE */                   MAC_LAYER_SIDE)
     VC7_FLOW_CTRL (.reset(reset),
           .areset(areset),
           .tx_clk(pclk),
           .rx_clk(pclk),
           .tx_level_select(tx_level_select),
           .rx_level_select(rx_level_select),
           .transaction_layer_checks_disable(transaction_layer_checks_disable),
           .link_layer_checks_disable(link_layer_checks_disable),
           .enable_vc_id(enable_vc_id_real[7]),
           .tc_mapped_to_vc_id(tc_mapped_to_vc_id_7_real),
           .xmtd_tlp(tx_tlp_detected),
           .xmtd_tlp_packet1(tx_tlp_pkt1),
           .xmtd_tlp_packet2(tx_tlp_pkt2),
           .xmtd_malformed_tlp(tx_malformed_tlp),
           .tx_retry_progress(tx_retry_progress),
           .xmtd_lcrc_error(xmtd_lcrc_error),
           .rcvd_tlp(rx_tlp_detected),
           .rcvd_tlp_packet1(rx_tlp_pkt1),
           .rcvd_tlp_packet2(rx_tlp_pkt2),
           .rcvd_malformed_tlp(rx_malformed_tlp),
           .rx_retry_progress(rx_retry_progress),
           .rcvd_lcrc_error(rcvd_lcrc_error),
           .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
           .tx_detected_dllp_pkt(tx_detected_dllp_pkt),
           .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
           .tx_ended_dllp_pkt(tx_ended_dllp_pkt),
           .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
           .rx_detected_dllp_pkt(rx_detected_dllp_pkt),
           .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
           .rx_ended_dllp_pkt(rx_ended_dllp_pkt),
           .tx_valid_code(|int_tx_valid),
           .rx_valid_code(|int_rx_valid),
           .data_link_up(dll_status),
           .phy_status(phy_status),
           .fc_init1_done(),
           .fc_init2_done()
           );

  //---------------------------------------------------------------
  // Power management module instantiation.
  //---------------------------------------------------------------

  qvl_pci_express_power_management_monitor #(
  /* Constraints_Mode   */              Constraints_Mode,
  /* PCI_EXPRESS_DEVICE_TYPE */         PCI_EXPRESS_DEVICE_TYPE,
  /* ZI_DOUBLE_DATA_RATE */                ZI_DOUBLE_DATA_RATE,
  /* MAX_LINK_WIDTH */                  MAX_LINK_WIDTH)
		PM_MONITOR (.reset(reset),
    .areset(areset),
    .tx_clk(pclk),
    .tx_level_select(tx_level_select),
    .xmtd_pm_active_state_nak_tlp(xmtd_pm_active_state_nak_tlp),
    .xmtd_pm_pme_tlp(xmtd_pm_pme_tlp),
    .xmtd_pme_turn_off_tlp(xmtd_pme_turn_off_tlp),
    .xmtd_pme_to_ack_tlp(xmtd_pme_to_ack_tlp),
    .xmtd_tlp(|tx_tlp_detected),
    .xmtd_idle_os(int_xmtd_idle_os),
    .tx_dllp_pm_enter_l1_detected(tx_dllp_pm_enter_L1_detected),
    .tx_dllp_pm_enter_l1_ended(tx_dllp_pm_enter_L1_ended),
    .tx_dllp_pm_enter_l23_detected(tx_dllp_pm_enter_L23_detected),
    .tx_dllp_pm_enter_l23_ended(tx_dllp_pm_enter_L23_ended),
    .tx_dllp_pm_active_req_l1_detected(tx_dllp_pm_active_req_L1_detected),
    .tx_dllp_pm_active_req_l1_ended(tx_dllp_pm_active_req_L1_ended),
    .tx_dllp_pm_request_ack_detected(tx_dllp_pm_request_ack_detected),
    .tx_dllp_pm_request_ack_ended(tx_dllp_pm_request_ack_ended),
    .tx_detected_dllp_pkt_valid(tx_detected_dllp_pkt_valid),
    .tx_ended_dllp_pkt_valid(tx_ended_dllp_pkt_valid),
    .tx_num_outstanding_tlps(tx_num_outstanding_tlps),

    .rx_clk(pclk),
    .rx_level_select(rx_level_select),
    .rcvd_pm_active_state_nak_tlp(rcvd_pm_active_state_nak_tlp),
    .rcvd_pm_pme_tlp(rcvd_pm_pme_tlp),
    .rcvd_pme_turn_off_tlp(rcvd_pme_turn_off_tlp),
    .rcvd_pme_to_ack_tlp(rcvd_pme_to_ack_tlp),
    .rcvd_tlp(|rx_tlp_detected),
    .rcvd_idle_os(int_rcvd_idle_os),
    .rx_dllp_pm_enter_l1_detected(rx_dllp_pm_enter_L1_detected),
    .rx_dllp_pm_enter_l1_ended(rx_dllp_pm_enter_L1_ended),
    .rx_dllp_pm_enter_l23_detected(rx_dllp_pm_enter_L23_detected),
    .rx_dllp_pm_enter_l23_ended(rx_dllp_pm_enter_L23_ended),
    .rx_dllp_pm_active_req_l1_detected(rx_dllp_pm_active_req_L1_detected),
    .rx_dllp_pm_active_req_l1_ended(rx_dllp_pm_active_req_L1_ended),
    .rx_dllp_pm_request_ack_detected(rx_dllp_pm_request_ack_detected),
    .rx_dllp_pm_request_ack_ended(rx_dllp_pm_request_ack_ended),
    .rx_detected_dllp_pkt_valid(rx_detected_dllp_pkt_valid),
    .rx_ended_dllp_pkt_valid(rx_ended_dllp_pkt_valid),
    .rx_num_outstanding_tlps(rx_num_outstanding_tlps),

    .pm_checks_disable(link_layer_checks_disable | transaction_layer_checks_disable),

    // Output ports

    .xmtd_pm_enter_command_flag(xmtd_pm_enter_command_flag),
    .rcvd_pm_enter_command_flag(rcvd_pm_enter_command_flag)

     );

  // Wire declarations for fire signals

`ifdef QVL_ZIN
   wire	     FIRE_PCI_EXPRESS_PARAM_DEVICE_TYPE_ERR;
   wire	     FIRE_PCI_EXPRESS_PARAM_MAX_LINK_WIDTH_ERR;
   wire	     FIRE_PCI_EXPRESS_RESERVED_VALUE_FOR_MAX_PAYLOAD;
   wire	     FIRE_PCI_EXPRESS_RESERVED_VALUE_FOR_MAX_READ_REQUEST; 
   wire	     FIRE_PCI_EXPRESS_DESKEW_LIMIT_EXCEEDED_P;
   wire	     FIRE_PCI_EXPRESS_DESKEW_LIMIT_EXCEEDED_N;
`endif

`protected

    MTI!#<Hl#O'zE@-eX?<W?UUAs__jA2Gm{Xr7?FLQ'i[LpuUo)oO*1vk{GO,GiO<sZ;VwrTr#1eBu
    ;1,nT|'wGj};-H{7+ORB!Q9I^'iG~\3=~joZB{~Q7(Q3jR]*pe\'7$;RBV{qf}u!Da_3[HR3$Fyg
    >=#]AA;Gx_nB&n5'i~Vs!U]X\zX]XEn][Bx?=[Q_ps<BuDl@~Bx{$,Cl,*7z~BO1s@'x^[#\OI&u
    'Y^&<A>3m}p<2wE[QzGxr;Dr=@Q_TD]>A<@=6$\nA]$5\|o{U\[zv}U^Da7,C[sIZ<pLAoxiqqBk
    3lHsHIF]5D'}+UAGy'B!Do;az%!x=UQeW1nIwxvoK@m=nv[W<Xxr7}QjD<8DZD+nrxzEJA?R13!w
    }-ooGl,-<~GG5ZJrl;u/)Rs+doDkY_J,[@wzB^?T5^~s$T7IGo-H;q?E2IY\jE[TW}RDA*@RHAC2
    pUlj1WzB5K-O!}I2r=i,?EUG#@>r~[<CYvpr#=DzX-C3=C[uJW}=#*oJ^[Yn]$]VjeW=#o[vn2[+
    GYUDk@Ri];'{2J^AQ;|Tx5s"omY\]Z<~OC;Tse=X#<IGlHAkQ,kxxH]B1<GR#+W+i]iJ<+3pjIQ,
    E$oVm{*=c}riazO$o#,[^F*!7'zQJ^@9Yv_}*\TV~VK#)~wEzV_xi^no>;$k}O21,[a7^gsAXvRa
    mZQH@uv<rl,$J^{C~KvR]nX5E!#=j-7XA$*!$-]X\$<p]O|i}'_5]o]#]vs1O5-s;,lD2nXk$kOp
    HZDRD^X(Z[R{u-v}S*nRJ}SEenv?U7-g\Ci'R~>;>XOToaK<e~{GEi[K{wB^u*]~/eG_]lS8Uep5
    UH(w=@p\,JH5aQ'r!uaQ=,~*BrC7kG![JGIjr$$}[_?,EkY9m7{n6-j?Bi[#5!Ik^[P<lD~]AKBS
    05;EpW+{o>O3O}~T7oiz!A-Y$X'Oe*O~5Z1+s<wCiQKI}[>AKx*zUZ$<oUl-,t[ZZ_*@5kz@RQx?
    !1E{p!;N@O!@$rY2N+X}mu>v]7skv1^>?DkVK^m{nE$n\*JV,[$7,\AVV7BjnXrDi#xwv3_{adN7
    <GJP+]<+IH+~G3^i;'j~[k+{t}#K~zn>I\5OGIV>Bt3QnxUeAr_3z$RkeU@QC$uz;oHCk]IaTGTv
    Q!t$m7sLZr77#H>CT_kH4UQkRMeU*UGXme+wWj?eCB_sBJEp2;1#rl6Gri{55,olw[xYazA<Amn2
    IkDex*z@}GEXX7n]XnUE*i~#I+e^aZrZ{B\]+W'G]\BuTsJ4la~DCO]]sW+oW7i'Nor,\UpKVg@>
    Ko><>kD<CDi5R,Kxnu|^y>[YvR&@l*rvuJv0wtzI@nG;-<@5I1FWRCzA$JUG-W[$^'V#e=H$7@[?
    no[8#Rm!aG1*fa7paxv{Xv,{$RzzaaVrK^"OlAO2Rp]TDAzjw{GyT1e5(ll=UY7-B*mnm#7~?Q9?
    Vm]T*Y?;vmTZq|+=uD!+lii_={r@<7,mek_C]DRsp}1Zo!AU'eS*VCj[*VmkjTV)CW]Tw'on5T~e
    ko[K,'X$3EJ{~Y++7(;]G;>aJZq^K[+[$lEWV@'el<3Or$Q$TsiU{{p+Bws5CGV^?+OD2_;o^ru{
    A>?iCixkYv#'_=[ka,CG_i7i'Jv;DupqQ^[BoR[uT=V55,?]wx?R[km3kV1xvu-;J{}\QLjl^2+n
    DrxElo^_2-WR&uI7O'Uxe=.^mmCq$~o#5KT?r0}s>Vjjr^I5Cx=I5HJ7]3a_Zml8u]^patbjI^i^
    Y<},@]$'k<~8*o0/vk5\+$>DRLt=~=['g;v#Y_2Uz\tZlR=7Jp#$RRs++@^W52]y}kaDop@~PQ~v
    J#5OE"7{7or3X\UGz=U[+=%j^<U>TVvf<[Vrx3T>+]*2,*~uu*[#5}<[rJBI;,k+G3W2wTYl$vlB
    *5l#]uome?@a4iI=!DaDKQHa#QuBa8*#Z7n[DL]Ka7\JY?v\$RR0Ga]}B\7!:~'[]oo!Kx,u#}Yp
    B+$?TLVx\5QG=#G@\,JeJWopv{l+vrynIYrf=;w2,-o$~$j;j!a!5-R{C5eU5D!ukT_~_|Y,-}Q!
    ~AxF{As<0=Lwo+xQX2wG,sa-}e5QeAV2R?];[!u]BZ~35!x,\^3;}<vXv\T}[[iKXQAp}?whQ[-3
    n-2r2<I5oTxJ*7#n!r?@>=!I6}ZjarpjVRH3R*@^IPB-RneA>33|Rj?_RA1O9.wCG'?>;=-lGElQ
    <\T>ZRX>zp~-C^*5Qoo\@Q>**B@R<Uw}Ia,GH~Eu[~}#[j1{-x7|fw1xl]-}aY=x,kr,*sZeua5Z
    <Ry]iVk10lI*KB{1GiC[JK>l}[VHu'{n+7ZoK|E_T$lJaB[I{}Ja{3HAaEeK]B!z>K/Q^o[A'1@[
    2=D$2<+em5J,G}>tUza[}^owvx?\1G\^'\<+z<{1'v3k3l{]Y,A*-pw?e1-K,?rDJAC]+-~^lEk~
    #7lzc"O7nneG5<;}us>s~I'Du5Fu1z<S!x7U$QpihK15uLD;vi~e!1^5]T*-lu2r~@[2IaC7n5sr
    A,BHosb$wIW-<B@joDXB51*sjrC]zZ_R>VmmpnT{$D@F8n'z[2eQ7eHjn|_WX?Y[1XT[
`endprotected
   
  reg [2:0] present_state_pd;
  reg [2:0] next_state_pd;
  reg [2:0] r_present_state_pd;

  reg [1:0] r_power_down;
  reg r_phystatus;
  reg p2_p1_transit; // Asserted when the state changes from P2 to P1
  reg [8*3 - 1:0] p_string;
  reg [8*3 - 1:0] r_string;
  reg [8*3 - 1:0] next_state_pd_string;
  reg [8*3 - 1:0] present_state_pd_string;

  reg [MAX_LINK_WIDTH - 1:0] r_tx_compliance;
  reg tx_compliance_more_than_one_clock;
  reg tx_elecidle_deasserted;
  reg r_tx_detect_rx_loopback;

  reg [15:0] temp1_rx_data;
  reg [INTERFACE_TYPE :0] temp1_rx_data_k;
  reg [2:0] temp_rx_status;
  reg temp_rx_valid;

  reg [MAX_LINK_WIDTH - 1:0] edb_not_found;

`protected

    MTI!#\n+Ro?sDJX,I8K=l1?A3'RV=TXpEmXxvigBE]i73='=;>z7#T#qv3${<oo!D3~[ED]KBx+H
    6o+Y,va;]<<O^(B$~przVxcuQe~6-LjCRiW}G[]_SkAUz1;W$uv=_5xu-6#5D<Y?EOi{A#K_Xw<'
    5}G)AaEGM|EJz+r5[_%-TH+o^&Usxe*5aGCz{}R}I_A[vUH{oii'mH9=7,_[k'Uc_r?u,Y2*V{wz
    6j#zUewT*Bzjo]:BGQWp,O1|K[ak}XA=v27H^Z>z}xCV9D@JaaUX2=RpxiC73Lrl?;BGO}pmA>5[
    =Q=Ox@J1G^(YlR]1?AD>H-$[8}?*OU]][Im-zq%/7UC@i,mra+;~Caxn!ra'$=X};Er?j!}}03$u
    Eh5v~J=HCa1Y+p$_lixQ$\i+Bi^{[-j]}uEUp{L1vUp%@$'?v<<El\&>w_#$-]2U=AHrkXrsj-[[
    \KV;jEW151Hlj=sx3jn?,W5@=n=8.=?ml,7Z1j27~DmX$@Av]ZGkI_U1pvB3]$!{VR5x=~DQ*p3^
    o!>@Uvhz,KT<r*7Y~<T1pukG?Z,7!,i]*3}^e'iyf6^#-EaY\B7Q.;D<3(1'Up=@}--snuuEA$]k
    v}aTICL,lka\;~AzltL''cEEsT?5epK5Z+Q,C<=\^;GkzGM1Hz7}bF[#Vmua=p]K5=x1#G-RV7#s
    wA]c;Go*B!n;7jYCzm>$]x57_UzG$V+Gj2uJE,pW|}j$[$;Rk{C<w==T{-^HBF&TRZ^a{Fgu'[k{
    jmD1nux5Hl+UE_Ba75m}#-DY"2H{}P"_[B7suQo2su_{U*I3X}<s~;e*;*>>Ou3eOqR!ew7T$Eks
    !c"KaC{EZK2'_=pokr}nT*<T<>Z}pRBpX1eyg][uZn1BTnCjk12~E'oTTkD*jR*uDLRojvplAU}J
    @p,^J^,$$O~1aO$V}21{EH^eU<>RYspR>7RQIQDu]=ls=T#[reT7krp<pT(i}jaw+n5UO{,$4B_K
    z$]n-*^QVpz<Aos>!;w\Q|nG'#*xA_?D2mIv_s$v7W1Z^IaHvYQ'$VzH5}up3.B?e$H1I]uxjTEw
    ^;UjY>!+s^ox^XIPkV\[/{+OZKI|is3#O,nG'=1ZNV!eH&A{sH}sQKVGeO>eo?K=5#X<-!f><!l;
    1QJxXu^?wKTXX\m+r]7;]2aGR;+Wt9lZA?M=zx@:1WI!?{xBu-p2}jr}8gO@Tzua]v|k->n}x[7*
    ]sC$iGY!'Bz'@A$<lse3};IirE=EG~[W{*3Ec3VY'|lumU*~xxxlwjQ<D?EVKW><<j[BVCv?Y@3T
    eudkT_+Vwlx7;;$Xl2naRI<Cz/N#O\x(JVp+FBWAQ2YDp3>!#eIYDOrQEpZZ1v{{{v_2##pQJB^A
    ajcn_i]"fj*#~J,G$K\Xx35\l\I-+uBmuf^m+#6SVsU3r*CWe+Ok$,K$U\OJW'!H2\@G7>,[I?*{
    VXXY9G<n7?{I*4jhs^3xsX<[uEoY1$_Y$75ezYkDjw-[Vx?ns}]pzweCIw^Ars]GmBDu1vQaIkCe
    oXH?C=apvwnsAxz'CV{aJx2TD;X^pUeiKj+3;j]KeTQKYNQCr[HU\*3_2'B*Q]dwz<=hZj}7#GI$
    B!^UvArRQ3I;H>JCx='YJD!>WjRZ$r'G'72k=xKjlpzU7,}r,V<BwwTUx$l#OGQKVn{GQ!1RQV-5
    hx#XDiU5JY?]TFGs3]va,RHDOY}oXm\vX7rR]#c]$C>$7GrA1kpmXK2O>QTB'pnWH!v^Ox7ACQBV
    BsJs2V;*?TOWQuUGTTR\7O\R*Orh|;-}Xs[1R\3*__^#$}HU?e{J!K>]3BJS%]>]JpHC!)Uz[~:M
    6z+u2Bz[QZ=+&ADvi1~j=:zZ1xI)#jN^Tv<J5#B=U7=U[V}DAUZ7}zm,O<#2nB^Jn}r~{IK2e!@}
    Jj+\jvZ/3-mx::wG$DPN7EpI*<eU[!R-wnsUUxx@xU^]e=H=m]=@[7xx4<X\!in<,AAa-BEmb@Ua
    <3p]X1#Z~DGT}p7l{iIA$L#aECF'}@pxQkOK[3JPRB~Y5jBK-H7u$7~UJGe}9$+jaolQXj~}^Ila
    #nB[m'<-xa7!nX}_*m+s2ri{O<H^}*{^ABnG5YACjx?[UUs\}oZY@7=7A5xK##5R-JD5'$^Cj1mJ
    I}i^~uHu#$~~Fdr{wY,eY{7]2>7BY=Y>~-7uXVO7ZuBV*A4[JB}wEQa^{-,ZC-#C21[V>zR~[,r$
    AYpxs.Zne'<-wR]>]Zhx'YD,VKu<}DBEC-~,xk>n,1^oV_s=W,pkD~[RmsZx_;lC?7eie7jG,^;M
    x+{ukIiAL*X}Ehw''n,u\1rZ!IU\<='z>mq3UEw[IkxzrTp]KWCI+J2(_]XC2ReTn'\O}Z<^ZA[}
    =~KYCB<AlB}[Q}H$uxU?sp{<=!3l@TnZD_a$-H$>=^E+ssiUm{C]rY<\rO>!Roj,HAw]4kY]_*E_
    -G?}*7Xv7Ya<kq0szX[POWe^"H&AE#?zIvY$B5X(Qi!v||l?ep~}Kz};n{zz#1okAkheOn@~1CC-
    UATpBKRTa+^\$j,-$Z[ZYk!;jTpBDA>Ww!xF7mQ+KwREk$oBV!z]B{BYSr[v-sj~?IE'~:^~YlvW
    wr$B1i=EKuxzR#oWz!<Yr~vDZrW-[]TEz>!j#BRC$n5>r3{7ZC7O=3JR-^rERUV2A>CD7*UR}UI@
    Xo,75>$r^}]wn#Yen!zn~]mDenuHwxC^EVjeV7!DGoG={;5!o1npAQ~,pV3EuCu\YB'^7Qz!p;AT
    A~TlrW4E8'^m>rkXAmT5I.<]J<E>L3nxn[;~XQvKGUssv\E}oT7kRuwQ[5\BGXzKXRi__DX+[p!C
    1U9?$A<Ts5;,RB,QZ_TG~rpRV]uu5E~inY~7Gc1KzU*7\}a>H,lQDOvRK_m{,!iRRu>^CXr22vnH
    o^5u.s^>!JB;j'!w1;_Z7I'^[r!RKzZ\jkEHo]-^<bzlaox#$[,p*a>H~<e72ZhKo@w-BH}w{Q*x
    ?CTj5*~Q3A]~^H~]'=Bx{V>T*=EkYipOCr\'rw7eC,5\u{\XrYojZ\V#<^l;Vn,^R-_n_~azEi,I
    G*pp5{a1+p^OiIojY<\,pJI^r2e\;RHxG7!xuT+_v]{,wo\^JX}OEZ_c^];Q(EIZ~n\5ppu>U9V?
    H2vZxX=JH^rGoY[W+VSep'5<a[UCOOJg"Xr^oa[\[+wsn)JRCE$u_?viKEiOm*~I^R>_5O\}G,]G
    jm==J\hU{2v^jsrle^V*}V7BI]T$K!]bvlIH<-W^OT5uR>V?j?$a.lIoIA1i;]jzjae'<HVU_DDm
    !&7g_z35V_k*zG7?Rsi'iI>^UIJ=ICkU{}5=5YWK-pkI^{J,uD7i}~rGf]OII<_E'Cy_^]3lzX'1
    lUp&^;ZOV_1~!'!p@9-}CJ0A}lD~jRp<U_-h,j]*pZ3,CQxs#]zRWBkIH\}ip'E@{Tv,{5~,lpE#
    _0uVA{,dmz?1;U>RC#=7G@+~os@p>sx?%=C=e,D3!JG<#AaU'A';7Ox@~xAl$ez<JKG@?}k@W(CZ
    ^lH-na#^7KvOxwbx^e*QJ^n'k<\<NC!j!2nUmTe2Y$u$Y\;$GHY@Ktpr$=siB@QmGxJIW'R-!-Ym
    n?5V01U][Z1?kBe$W{UYXsXVJE_{GRKJTXH+1=-2Z}O#mi=}C2-,o=?K3r?[R$!V{DRzos3DQ]P9
    D2lv2Tj^
`endprotected

`ifdef QVL_ZIN
  wire FIRE_PIPE_TX_DETECT_RX_DEASSERT_ERROR;
  wire FIRE_PIPE_TXELECIDLE_NOT_ASSERTED;
  wire FIRE_PIPE_TXDETECTRX_TXELECIDLE_ASSERTED;
  wire FIRE_PIPE_TXCOMPLIANCE_RXPOLARITY_ASSERTED;
  wire FIRE_PIPE_PHYSTATUS_ASSERTED_MORE_THAN_ONE_CLOCK;
  wire FIRE_PIPE_ILLEGAL_POWER_DOWN_COMMAND;
  wire FIRE_PIPE_TX_COMPLIANCE_MORE_THAN_ONE_CLOCK;
  wire FIRE_PIPE_EDB_NOT_FOUND;
  wire FIRE_PIPE_TX_DETECT_RX_ASSERTED;

  wire FIRE_PCI_EXPRESS_COM_NOT_ALL_LANES_TX_P;
  wire FIRE_PCI_EXPRESS_COM_NOT_ALL_LANES_TX_N;
  wire FIRE_PCI_EXPRESS_COM_NOT_ALL_LANES_RX_P;
  wire FIRE_PCI_EXPRESS_COM_NOT_ALL_LANES_RX_N;
`endif

`protected

    MTI!#\a7?XHNp\sQ^2!3*,oCs3ZWw7rmawnv}3{HKD?2JR;[p\Ds=#C}ok5[}!wu\aGw[=[_2-Ye
    u5svwQ_}F7BuW^3Vj<tsz7#cECVV[no3kUXJZG{#'n;1)<wG_Fl$Q*/x<!1}Tl{@=kV]EX^;=TUQ
    ;a<^K_AO-]psBjBvHDJsu;;_C[!7IXO)%QH;;'^7U[Bp^QpgG>^?mI$l5+<Uw=@pi^2kV\ksrpj]
    VX\kKsO*o;Ua[~u7ItAo}}*w*l#]?k2=V[_k}sL-TKu$CiuIBzo4:<w2pme#I,%HY]~7+u^**VG@
    {=@'3vk~lzU1nw_4,EZppo,<=DIJ7T@QGvDi!peRHCak^-KIx<Z[zxzXN\^[rB<[Ob[HTVk1J>Zs
    3u*pQGe@5]0w'#2f*ZUpb[_C[,An=7Z[aYXWkDWQoV}umP[2zw~D5$nVTJ~7?*+j1Q.T<u25J7$n
    RBXF7;2?;$:XTn{[Kx?*,HrGKI51opk3UeaPY,\Qi7'KlH{'C2Qz:K&Rv$j}\piQ=[{CGuAHpzCv
    @{w@U+TZ$-25T5]OC[p}YT[B+jT=*,n1EK'kY=3=oTrBnO2}Q^rS}@zTp[m-xu>#\sw_[xVUT\37
    ~$vB8isAA]=wX,G^-C+Jps3\KY[Ta{+!B]=jBaRV*qlo[i7?-e&_ETe'2+uGxvB{zN@T;WrLhdH*
    ]_Eu!{VQa$]KK2$zo<YvY,]@;A5kD{Y><s$?7p[@$u'Y<kBEeIve~UTrg2OJ_PaCOvE_v2FLI9lK
    \Irv=e>HuxWx#@J[n^V[ik^mE\sBnTu93_xZv#@5f!_Y$]}<e}:^~-*_V>V.c]QoK77ln)3a]u}[
    }OY^Z3^ij@07ljD2U7l3YZ#5Zmm=aDG7}GoB2V+8?R?pbB7i,b=1aIKrY{vI^5,X{'B@1<o2QV[A
    mmX|^kx3<eem_371K$?rTU@Iq*@$*;$mWI@z>Wp'p9RIXUe*i2.A-E#8m^'pk,w#1p?@.g)WYi+,
    }!IP[wXU#j'\_{KQ*2$>-,@Yav2KA$1Jin^3QV;\'@^B;aR<ADIUAE$D1k@TYUjpvZvYGB5v*7X=
    vG}ThrvEnR]?uVX$ZQZ!>1Jwe{rIl,QIGW{IHY-JTvg\[ia1Q]2fKzle*pnroE}7wjpiLxi[<=s<
    [w[$^+<Q=0NA[[K_z;H$e{7jR<kB{pJiC7v$Ja^Vlu}2$=u)B,)5xxK=C?-CD!#el?[~YRQq$~x5
    m7@Ro"R5-a4xE-]*7A}kUZz_xkv];3YE~X{8OhG,~;e?+WVj3J?U]7Cir]<_#D>IA#3\Jz}sv@^_
    }AQQAvIa'XD<Y;dlhf'V~j.i>Q7'Z@z#ABEyqlghiGDaW[#HLWDHwa>JKnsk]aVZo8Ta2zjG'#]c
    m^$R7Gkv2]Y22UlTV+VnGvDO*zEJJElalQnW3o4UT>C5;<Z~\?@We^r%_UZx!Stv5}a2AzmORAQw
    ri,aVu+r#Qmva1;l!WQHr->U<VH.7''A_psDfE>W+V{Y\OgsEu<e*\7CsQ'nNKoE~1>1WDzaBe7\
    jV$7(v>ej@5vUDW=VB6m>p>oVZv:7Brs=x7Y,j\XHp{\r_>$-<$5*IEZ~z;1G^$<8wv<<ZUl<uaR
    7+RZU1=!ox37x,<5BR{T]l<Gp37B[x~Cl3}s#BHB!Vi]~[+=U#RJ}eYKo5au@aUIl(36T'*BTYD[
    {'ovs?;=-+U2iVe^T1-K!]<!BV?$OI~xD_oTvGD{z4*@-W@pmuX^X;'+njve]UGsK}BvDT5vV]o?
    K#_E7-l~Q!K*}X};[5<\@<G52[k$7vIeUD=?Wm=TQ[EkvEar$7IO#eE}R@Di\Co?7\#A;>8ly]ZU
    ^Y>lKqE6>$bn$32+v#;@jB~|NQ$C2Yu=[;5W#x}W[z]ln3aKKB~vGuz#HK|zCs@sQE\Nhp~+7EjW
    #wI-W*!pIKs!u,,lwrk=,|kxKW*7\KYj@W)!$[pUo~^*}5xvsI1Ixp{B%KImT~pI[sMuRp3;v+Tm
    zQ{GUAsOEXZ3UITvKJRx]*rA-+BS1<1#7k=p][>Ef+R-l8X{{}&[I@A7sY3-\5~@^<XpDVB[]K]"
    !a7{}EB!i<\U!NVVK3/;,]]Q=^eVGK^^-J{\Q$jQsxi$i~$E+lpj6aCQwL&N31{}]Vv'([a!W-o@
    B5=\Xz$i?Y-ek},HkORQUTARWB]7O#jipJ]s<q&CWnA]a!5C0E5O#?,,vJAO=o'=>u[-T,;u?v]!
    D1G^pFm]V[l'z>}eUVwQDsCj1{[mr5}!B5B=m^}W=$oZ1{]s1m@TD}]};-m7pTg^{*@QOlIY8_B#
    IbaE>laY'xU[$r$YWsSyk*i,@*wTz~2r==7m?|H8;]H;]Y$[}KewnT{?DHzQ[Z'k=#O!roG?-|9j
    l-#&,vQTx;Cw0*lDCQZXKvDXAn_\[MnwG}">\Y[0YCz*Ri,ONe{js~$K#vEJ@DB=u*s~O)Vk<~*'
    \HusDK2AOEs@e^(X$X@3_lXAXu!~AC!jrmGs=RuBIiIsH]+k<TGivZ~]-u1_T7-BxV}fezG_o-<?
    u$jU+^#]E]]?rixr?T7I,UKVpDkTU^Er7rX[rp+G({G_I&SU[1;ka*21]=,.=Q-<_z,TYD*UjbU+
    r+h*U7s$pmu~UUY;9dJsKHS9IaxKQV;B.f:GQUsp\2j*>{As@Xo_a$lTOTAqbCHwox,EWw{K'JH*
    ]s[]pY'*nm]=B7H2Rx?~kEl<T~X*xqomAH=!=J'=;r52wH]m=>R3@DBA'5\UuE:^i2;CaI2'Qi2/
    ]']eG}DH@w}GKT,#cH>;AU^_$}~@Jwlz[#$Qu7$$BpJHrenK*Kx2J<7-'A9Fm_JYP;{2!p!!{=$\
    j,WErKE[r^(QGZzp_}~2pa?*wvJx!EED$5o/0>opkQlnBE)I1@G<xV5o-lC(C=zQn'{}ji-wu<Ww
    kIWG\j?RC_x2cowjo5JK=@\v15Q~^I3Y^A^2s]rxGH*o+u5?ssBoB,A7^s*]>$Das]]!*Qjwe=-m
    xQ=U1_k;*v_mRah.B!l#;,I20tqApI\Oi]'[{J<_zZXLT*[,]sH+o3$j73$]U<U~m^$,lOZDn<G<
    en;*{D+sUaZ$ul$K,i<YE!X<Qzi>:ECk[{eD*qxVGYQA>ZT51$U1TJ%He,Z1}zE!IoV\dVmu~oE>
    -s[
`endprotected

  //--------------------------------------------------------------------------
  // OVL SVA Assertions are included here
  //--------------------------------------------------------------------------

`include "qvl_pci_express_pipe_monitor_assertions.inc"

`ifdef ZI_INLINED_PSL
`include "0in_ac_inline_for_mod_zi_cw_pci_express_pipe_monitor.inc"
`endif
`ifdef ZI_INLINED_CHX
`include "zi_cw_pci_express_pipe_monitor.zi_chx.inc"
`else
`ifdef ZI_INLINED_CHX_qvl_pci_express_pipe_monitor
`include "zi_cw_pci_express_pipe_monitor.zi_chx.inc"
`endif
`endif

`qvlendmodule // end of qvl_pci_express_pipe_monitor
